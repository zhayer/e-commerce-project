{"version":3,"names":["scMenuLabelCss","ScMenuLabelStyle0","ScMenuLabel","render","h","key","part","class","isArray","value","Array","getTag","INFINITY","baseToString","result","toString","isString","isNumber","isBoolean","isObjectLike","isObject","isDefined","undefined","isBlank","trim","length","Object","prototype","call","EXTENDED_SEARCH_UNAVAILABLE","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","name","INVALID_KEY_WEIGHT_VALUE","hasOwn","hasOwnProperty","KeyStore","constructor","keys","this","_keys","_keyMap","totalWeight","forEach","obj","createKey","weight","push","id","get","keyId","toJSON","JSON","stringify","path","src","getFn","createKeyPath","createKeyId","Error","split","join","list","arr","deepGet","index","i","len","MatchOptions","includeMatches","findAllMatches","minMatchCharLength","BasicOptions","isCaseSensitive","includeScore","shouldSort","sortFn","a","b","score","idx","FuzzyOptions","location","threshold","distance","AdvancedOptions","useExtendedSearch","ignoreLocation","ignoreFieldNorm","fieldNormWeight","Config","SPACE","norm","mantissa","cache","Map","m","Math","pow","numTokens","match","has","n","parseFloat","round","set","clear","FuseIndex","isCreated","setIndexRecords","setSources","docs","records","setKeys","_keysMap","create","doc","docIndex","_addString","_addObject","add","size","removeAt","splice","getValueForItemAtKeyId","item","record","v","$","keyIndex","subRecords","stack","nestedArrIndex","pop","subRecord","k","createIndex","myIndex","map","parseIndex","data","computeScore$1","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","abs","convertMaskToIndices","matchmask","indices","start","end","MAX_BITS","search","text","patternAlphabet","patternLen","textLen","min","currentThreshold","bestLocation","computeMatches","matchMask","indexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","finish","bitArr","j","charMatch","charAt","isMatch","createPatternAlphabet","char","BitapSearch","options","toLowerCase","chunks","addChunk","startIndex","alphabet","remainder","substr","searchIn","allIndices","totalScore","hasMatches","BaseMatch","isMultiMatch","getMatch","multiRegex","isSingleMatch","singleRegex","exp","matches","ExactMatch","super","type","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","filter","results","queryItem","found","searcher","token","MultiMatchSet","Set","ExtendedSearch","condition","_","numMatches","qLen","pLen","registeredSearchers","register","args","createSearcher","searcherClass","LogicalOperator","AND","OR","KeyType","PATH","PATTERN","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","node","children","operator","computeScore","Number","EPSILON","transformMatches","refIndex","transformScore","format","transformers","transformer","Fuse","_keyStore","setCollection","_docs","_myIndex","remove","predicate","getIndex","limit","_searchStringList","_searchObjectList","_searchLogical","sort","slice","expression","evaluate","_findMatches","res","child","resultMap","expResults","version","config","scSelectCss","ScSelectStyle0","itemIndex","arrowFlag","wp","i18n","__","exportparts","placeholder","searchPlaceholder","onScInput","e","handleQuery","clearable","searchTerm","ref","el","searchInput","onKeyDown","stopPropagation","loading","style","slot","maxHeight","overflow","onScroll","handleMenuScroll","filteredChoices","choice"],"sources":["src/components/ui/menu-label/sc-menu-label.scss?tag=sc-menu-label&encapsulation=shadow","src/components/ui/menu-label/sc-menu-label.tsx","../../node_modules/fuse.js/dist/fuse.esm.js","src/components/ui/select/sc-select.scss?tag=sc-select&encapsulation=shadow","src/components/ui/select/sc-select.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n.menu-label {\n  font-family: var(--sc-font-sans);\n  font-size: var(--sc-font-size-x-small);\n  font-weight: var(--sc-font-weight-semibold);\n  line-height: var(--sc-line-height-normal);\n  letter-spacing: var(--sc-letter-spacing-normal);\n  color: var(--sc-color-gray-500);\n  padding: var(--sc-spacing-small) var(--sc-spacing-large);\n  user-select: none;\n  text-transform: uppercase;\n}\n","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'sc-menu-label',\n  styleUrl: 'sc-menu-label.scss',\n  shadow: true,\n})\nexport class ScMenuLabel {\n  render() {\n    return (\n      <div part=\"base\" class=\"menu-label\">\n        <slot></slot>\n      </div>\n    );\n  }\n}\n","/**\n * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2022 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.6.2';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n",":host {\n  display: block;\n  --focus-ring: 0 0 0 var(--sc-focus-ring-width) var(--sc-focus-ring-color-primary);\n}\n\n.search {\n  margin: var(--sc-spacing-x-small) var(--sc-spacing-x-small) 0 var(--sc-spacing-x-small);\n}\n\n.loading {\n  text-align: center;\n  margin: var(--sc-spacing-small);\n}\n\n.select {\n  font-family: var(--sc-input-font-family);\n  font-weight: var(--sc-font-weight-normal);\n}\n\nsc-dropdown {\n  display: block;\n}\n\n.trigger {\n  overflow: hidden;\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  border-style: solid;\n  border-width: var(--sc-input-border-width);\n  background-color: var(--sc-select-background-color, var(--sc-color-white));\n  border-color: var(--sc-select-border-color, var(--sc-color-gray-300));\n  color: var(--sc-input-color);\n  text-decoration: none;\n  user-select: none;\n  white-space: nowrap;\n  vertical-align: middle;\n  padding: 0;\n  transition: var(--sc-input-transition, var(--sc-transition-medium)) background-color, var(--sc-input-transition, var(--sc-transition-medium)) color,\n    var(--sc-input-transition, var(--sc-transition-medium)) border, var(--sc-input-transition, var(--sc-transition-medium)) box-shadow;\n  cursor: inherit;\n  box-shadow: var(--sc-shadow-small);\n  font-size: var(--sc-button-font-size-medium);\n  min-height: var(--sc-input-height-medium);\n  line-height: calc(var(--sc-input-height-medium) - var(--sc-input-border-width) * 2);\n  border-radius: var(--sc-input-border-radius-medium);\n  padding: 0 var(--sc-spacing-small);\n  svg {\n    display: block;\n    width: 1em;\n    height: 1em;\n  }\n}\n\n.select {\n  &.select--focused:not(.select--disabled) .trigger {\n    background-color: var(--sc-input-background-color-focus);\n    border-color: var(--sc-input-border-color-focus);\n    box-shadow: var(--focus-ring);\n    z-index: 2;\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n    sc-dropdown {\n      opacity: 0.65;\n    }\n  }\n}\n\n.select__value {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.select__empty {\n  text-align: center;\n  margin: var(--sc-spacing-small);\n  color: var(--sc-color-gray-400);\n}\n\n.select--placeholder .trigger {\n  color: var(--sc-input-placeholder-color);\n}\n\n.select {\n  &__hidden-input {\n    position: absolute;\n    opacity: 0;\n    padding: 0px;\n    margin: 0px;\n    pointer-events: none;\n    width: 0;\n  }\n  &__suffix-description,\n  &__description {\n    font-size: var(--sc-input-help-text-font-size-medium);\n    opacity: 0.65;\n  }\n}\n\n.select__caret {\n  transition: transform 0.25s ease;\n  line-height: 0;\n}\n.select--is-open .select__caret {\n  transform: rotate(180deg);\n}\n\n.select {\n  &--squared .trigger {\n    border-radius: 0;\n  }\n  &--squared-top .trigger {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n  &--squared-bottom .trigger {\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  &--squared-left .trigger {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n  &--squared-right .trigger {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n}\n\n.choice__icon--image {\n  width: 18px;\n  height: 18px;\n  object-fit: contain;\n}\n\nsc-menu-item.is-unavailable {\n  --sc-menu-item-color: var(--sc-color-gray-500);\n}\n","import { Component, Prop, h, State, Watch, Event, EventEmitter, Method, Element, Listen } from '@stencil/core';\nimport { ChoiceItem } from '../../../types';\nimport Fuse from 'fuse.js';\nimport { FormSubmitController } from '../../../functions/form-data';\nimport { __ } from '@wordpress/i18n';\nimport { isValidURL } from '../../../functions/util';\n\nlet id = 0;\nlet itemIndex = 0;\nlet arrowFlag = '';\n\n/**\n * @part base - The elements base wrapper.\n * @part input - The html input element.\n * @part form-control - The form control wrapper.\n * @part label - The input label.\n * @part help-text - Help text that describes how to use the input.\n * @part trigger - The trigger for the dropdown.\n * @part panel - Them panel for the dropdown.\n * @part caret - The caret.\n * @part search___base - The search base wrapper.\n * @part search__input - The search input element.\n * @part search__form-control - The search form control wrapper.\n * @part menu__base - The menu base.\n * @part spinner__base - The spinner base.\n * @part empty - The empty message.\n */\n@Component({\n  tag: 'sc-select',\n  styleUrl: 'sc-select.scss',\n  shadow: true,\n})\nexport class ScSelectDropdown {\n  /** Element */\n  @Element() el: HTMLScSelectElement;\n\n  private formController: any;\n\n  private searchInput: HTMLScInputElement;\n  private input: HTMLInputElement;\n\n  private inputId: string = `select-${++id}`;\n  private helpId = `select-help-text-${id}`;\n  private labelId = `select-label-${id}`;\n\n  /** The input's autocomplete attribute. */\n  @Prop() autocomplete: string;\n\n  /** Placeholder for no value */\n  @Prop() placeholder: string = '';\n\n  /** Placeholder for search */\n  @Prop() searchPlaceholder: string = '';\n\n  /** The input's value attribute. */\n  @Prop({ mutable: true, reflect: true }) value = '';\n\n  /** The input's value attribute. */\n  @Prop({ mutable: true }) choices: Array<ChoiceItem> = [];\n\n  /** Can we unselect items. */\n  @Prop() unselect: boolean = true;\n\n  /* Is it required */\n  @Prop({ reflect: true }) required: boolean;\n\n  /* Is it loading */\n  @Prop() loading: boolean;\n\n  /** Is search enabled? */\n  @Prop() search: boolean;\n\n  @Prop() closeOnSelect: boolean = true;\n\n  /** The input's name attribute. */\n  @Prop({ reflect: true }) name: string;\n\n  /** Some help text for the input. */\n  @Prop() help: string;\n\n  /** The input's label. */\n  @Prop() label: string;\n\n  /** The input's size. */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Prop() position: 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right' = 'bottom-right';\n\n  /** The placement of the dropdown. */\n  @Prop({ reflect: true }) placement:\n    | 'top'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right'\n    | 'right-start'\n    | 'right-end'\n    | 'left'\n    | 'left-start'\n    | 'left-end' = 'bottom-start';\n\n  /**\n   * This will be true when the control is in an invalid state. Validity is determined by props such as `type`,\n   * `required`, `minlength`, `maxlength`, and `pattern` using the browser's constraint validation API.\n   */\n  @Prop({ mutable: true, reflect: true }) invalid = false;\n\n  /** Is this open */\n  @Prop({ mutable: true }) open: boolean;\n  @Prop() disabled: boolean;\n  @Prop() showParentLabel: boolean = true;\n  @Prop() hoist: boolean = false;\n\n  @Prop() squared: boolean;\n  @Prop() squaredBottom: boolean;\n  @Prop() squaredTop: boolean;\n  @Prop() squaredLeft: boolean;\n  @Prop() squaredRight: boolean;\n\n  @State() private hasFocus: boolean = false;\n\n  /** Search term */\n  @State() searchTerm: string = '';\n\n  /** Search term */\n  @State() filteredChoices: Array<ChoiceItem> = [];\n\n  /** Emitted whent the components search query changes */\n  @Event() scSearch: EventEmitter<string>;\n\n  /** Emitted whent the components search query changes */\n  @Event() scOpen: EventEmitter<string>;\n\n  /** Emitted whent the components search query changes */\n  @Event() scClose: EventEmitter<string>;\n\n  /** Emitted when the control loses focus. */\n  @Event() scBlur: EventEmitter<void>;\n\n  /** Emitted when the control gains focus. */\n  @Event() scFocus: EventEmitter<void>;\n\n  /** Emitted when the control's value changes. */\n  @Event({ composed: true })\n  scChange: EventEmitter<ChoiceItem>;\n\n  /** Emitted when the list scrolls to the end. */\n  @Event() scScrollEnd: EventEmitter<void>;\n\n  /** Trigger focus on show */\n  handleShow() {\n    this.open = true;\n    setTimeout(() => {\n      this.searchInput && this.searchInput.triggerFocus();\n    }, 50);\n  }\n\n  handleHide() {\n    this.open = false;\n    itemIndex = 0;\n    this.scClose.emit();\n  }\n\n  handleBlur() {\n    this.hasFocus = false;\n    this.scBlur.emit();\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n    this.el.focus();\n    this.scFocus.emit();\n  }\n\n  /** Get the display value of the item. */\n  displayValue() {\n    if (!this.value) return false;\n    let chosen = this.choices.find(choice => choice.value == this.value);\n    let append = '';\n    if (!chosen) {\n      if (this.showParentLabel) {\n        append = this.choices.find(choice => choice?.choices?.some?.(subChoice => subChoice.value === this.value))?.label;\n      }\n      const subchoices = (this.choices || []).map(choice => choice.choices).flat();\n      chosen = subchoices.find(choice => choice?.value == this.value);\n    }\n    if (chosen) {\n      return `${append ? append + ' — ' : ''}${chosen?.label}`;\n    }\n    return false;\n  }\n\n  isChecked({ value, checked = false }) {\n    if (checked) {\n      return true;\n    }\n    return !!value && this.value === value;\n  }\n\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\n  @Method()\n  async setCustomValidity(message: string) {\n    this.input.setCustomValidity(message);\n    this.invalid = !this.input.checkValidity();\n  }\n\n  @Method()\n  async reportValidity() {\n    return this.input.reportValidity();\n  }\n\n  handleQuery(e) {\n    this.searchTerm = e.target.value;\n    this.scSearch.emit(this.searchTerm);\n  }\n\n  handleSelect(choice) {\n    const { value } = choice;\n\n    if (this.value === value && this.unselect) {\n      this.value = '';\n    } else {\n      this.value = value;\n    }\n\n    if (this.closeOnSelect) {\n      this.searchTerm = '';\n    }\n\n    this.scChange.emit(choice);\n  }\n\n  @Watch('searchTerm')\n  @Watch('choices')\n  handleSearchChange() {\n    const fuse = new Fuse(this.choices, {\n      keys: ['value', 'label'],\n    });\n\n    if (this.searchTerm) {\n      const results = fuse.search(this.searchTerm) as any;\n      this.filteredChoices = results.map(result => result.item);\n    } else {\n      this.filteredChoices = this.choices;\n    }\n  }\n\n  @Watch('value')\n  handleValueChange() {\n    if (this.input) {\n      this.invalid = !this.input.checkValidity();\n    }\n  }\n\n  @Watch('open')\n  handleOpenChange() {\n    if (this.open) {\n      this.scOpen.emit();\n      this.searchInput && this.searchInput.triggerFocus();\n    } else {\n      this.scClose.emit();\n    }\n  }\n\n  handleMenuScroll(e) {\n    const scrollTop = e.target.scrollTop;\n    const scrollHeight = e.target.scrollHeight;\n    const offsetHeight = e.target.offsetHeight;\n    const contentHeight = scrollHeight - offsetHeight;\n    if (contentHeight - scrollTop < 5) this.scScrollEnd.emit();\n  }\n\n  componentWillLoad() {\n    this.handleSearchChange();\n  }\n\n  componentDidLoad() {\n    this.formController = new FormSubmitController(this.el).addFormData();\n    if (this.open) {\n      this.searchInput && this.searchInput.triggerFocus();\n    }\n  }\n\n  getItems() {\n    return [...this.el.shadowRoot.querySelectorAll<HTMLScMenuItemElement>('sc-menu-item')];\n  }\n\n  @Listen('keydown')\n  handleKeyDown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n    const items = this.getItems();\n\n    // Ignore key presses on tags\n    if (target.tagName.toLowerCase() === 'sc-tag') {\n      return;\n    }\n\n    // Tabbing out of the control closes it\n    if (event.key === 'Tab') {\n      if (this.open) {\n        this.handleHide();\n      }\n\n      return;\n    }\n\n    // Up/down opens the menu\n    if (['ArrowDown', 'ArrowUp'].includes(event.key)) {\n      event.preventDefault();\n\n      // Show the menu if it's not already open\n      if (!this.open) {\n        this.handleShow();\n      }\n\n      // Focus on a menu item\n      if (event.key === 'ArrowDown') {\n        if (arrowFlag == 'up') {\n          itemIndex = itemIndex + 2;\n        }\n        if (itemIndex > items.length - 1) {\n          itemIndex = 0;\n        }\n\n        items[itemIndex].setFocus();\n\n        arrowFlag = 'down';\n        itemIndex++;\n\n        return;\n      }\n\n      if (event.key === 'ArrowUp') {\n        if (arrowFlag == 'down') {\n          itemIndex = itemIndex - 2;\n        }\n        if (itemIndex < 0) {\n          itemIndex = items.length - 1;\n        }\n\n        items[itemIndex].setFocus();\n\n        arrowFlag = 'up';\n        itemIndex--;\n\n        return;\n      }\n    }\n\n    // Close select dropdown on Esc/Escape key\n    if (event.key === 'Escape') {\n      if (this.open) {\n        this.input.focus();\n        this.handleHide();\n      }\n\n      return;\n    }\n\n    // Open select dropdown with Enter\n    if (event.key === 'Enter') {\n      if (this.open) {\n        items[itemIndex - 1]?.click?.();\n        this.handleHide();\n        this.input.focus();\n      } else {\n        this.handleShow();\n      }\n    }\n\n    // don't open the menu when a CTRL/Command key is pressed\n    if (event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    // All other \"printable\" keys open the menu and initiate type to select\n    // TODO: this is closing out the dropdown during typing events.\n    // FIX: It must have focus as well. And it fix the random closing issue.\n    if (!this.open && this.hasFocus && event.key.length === 1) {\n      this.handleShow();\n    }\n  }\n\n  disconnectedCallback() {\n    this.formController?.removeFormData();\n  }\n\n  renderIcon(icon) {\n    if (isValidURL(icon)) {\n      return <img src={icon} alt=\"icon\" slot=\"prefix\" class=\"choice__icon--image\" />;\n    }\n    return <sc-icon name={icon} slot=\"prefix\" class=\"choice__icon\" />;\n  }\n\n  renderItem(choice: ChoiceItem, index: number) {\n    if (choice?.choices?.length) {\n      return <sc-menu-label key={index}>{choice.label}</sc-menu-label>;\n    }\n\n    return (\n      <sc-menu-item\n        class={{ 'is-unavailable': choice?.unavailable }}\n        key={index}\n        checked={this.isChecked(choice)}\n        value={choice?.value}\n        onClick={() => !choice.disabled && this.handleSelect(choice)}\n        onKeyDown={event => {\n          if ((event.key === 'Enter' || event.key === ' ') && !choice.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            this.handleSelect(choice);\n          }\n        }}\n        disabled={choice.disabled}\n        aria-label={choice.label}\n        aria-selected={this.isChecked(choice) ? 'true' : 'false'}\n        role=\"option\"\n      >\n        {choice.label}\n        {!!choice?.description && <div class=\"select__description\">{choice?.description}</div>}\n        <div slot=\"suffix\">\n          {choice?.suffix} {!!choice?.suffixDescription && <div class=\"select__suffix-description\">{choice?.suffixDescription}</div>}\n        </div>\n        {!!choice?.icon && this.renderIcon(choice.icon)}\n      </sc-menu-item>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        part=\"base\"\n        class={{\n          'select': true,\n          'select--placeholder': !this.value,\n          'select--focused': this.hasFocus,\n          'select--is-open': !!this.open,\n          'select--disabled': this.disabled,\n          'select--has-choices': !!this?.choices?.length,\n          'select--squared': this.squared,\n          'select--squared-bottom': this.squaredBottom,\n          'select--squared-top': this.squaredTop,\n          'select--squared-left': this.squaredLeft,\n          'select--squared-right': this.squaredRight,\n        }}\n      >\n        <sc-form-control\n          exportparts=\"label, help-text, form-control\"\n          size={this.size}\n          required={this.required}\n          label={this.label}\n          help={this.help}\n          inputId={this.inputId}\n          helpId={this.helpId}\n          labelId={this.labelId}\n          name={this.name}\n        >\n          <input\n            class=\"select__hidden-input\"\n            name={this.name}\n            ref={el => (this.input = el as HTMLInputElement)}\n            value={this.value}\n            required={this.required}\n            disabled={this.disabled}\n            aria-hidden=\"true\"\n            aria-label={this.displayValue() || this.label || this.placeholder}\n            onBlur={() => this.handleBlur()}\n            onFocus={() => this.handleFocus()}\n          ></input>\n\n          <sc-dropdown\n            exportparts=\"trigger, panel\"\n            disabled={this.disabled}\n            open={this.open}\n            closeOnSelect={this.closeOnSelect}\n            position={this.position}\n            placement={this.placement}\n            hoist={this.hoist}\n            style={{ '--panel-width': '100%' }}\n            onScShow={() => this.handleShow()}\n            onScHide={() => this.handleHide()}\n            role=\"select\"\n            aria-open={this.open ? 'true' : 'false'}\n          >\n            <slot name=\"trigger\" slot=\"trigger\">\n              <div class=\"trigger\" role=\"button\" tabIndex={-1} onFocus={() => this.handleFocus()} onBlur={() => this.handleBlur()}>\n                <div class=\"select__value\">\n                  <slot>{this.displayValue() || this.placeholder || __('Select...', 'surecart')}</slot>\n                </div>\n                <sc-icon exportparts=\"base:caret\" class=\"select__caret\" name=\"chevron-down\" />\n              </div>\n            </slot>\n\n            {this.search && (\n              <sc-input\n                exportparts=\"base:search__base, input:search__input, form-control:search__form-control\"\n                placeholder={this.searchPlaceholder || __('Search...', 'surecart')}\n                onScInput={e => this.handleQuery(e)}\n                class=\"search\"\n                clearable\n                part=\"search\"\n                value={this.searchTerm}\n                ref={el => (this.searchInput = el as HTMLScInputElement)}\n                aria-label={__('Type to search', 'surecart')}\n                onKeyDown={e => e.stopPropagation()}\n              >\n                {this.loading && <sc-spinner exportparts=\"base:spinner__base\" style={{ '--spinner-size': '0.5em' }} slot=\"suffix\"></sc-spinner>}\n              </sc-input>\n            )}\n\n            <sc-menu style={{ maxHeight: '210px', overflow: 'auto' }} exportparts=\"base:menu__base\" onScroll={e => this.handleMenuScroll(e)} aria-multiselectable=\"false\">\n              <slot name=\"prefix\"></slot>\n              {(this.filteredChoices || []).map((choice, index) => {\n                return [this.renderItem(choice, index), (choice.choices || []).map(choice => this.renderItem(choice, index))];\n              })}\n              {this.loading && (\n                <div class=\"loading\">\n                  <sc-spinner exportparts=\"base:spinner__base\"></sc-spinner>\n                </div>\n              )}\n              {!this.loading && !this.filteredChoices.length && (\n                <div class=\"select__empty\" part=\"empty\">\n                  {__('Nothing Found', 'surecart')}\n                </div>\n              )}\n              <slot name=\"suffix\"></slot>\n            </sc-menu>\n          </sc-dropdown>\n        </sc-form-control>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}