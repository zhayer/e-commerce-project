{"version":3,"names":["scCartCss","ScCartStyle0","ScCart","handleOpenChange","uiStore","set","state","cart","open","this","fetchOrder","_c","_b","_a","document","querySelector","shadowRoot","focus","order","getCheckout","formId","mode","setCheckout","data","pageHasForm","getItemsCount","items","checkoutState","checkout","line_items","count","forEach","item","quantity","handleSetState","e","uiState","detail","handleCloseCart","id","updateFormState","apiFetch","method","path","addQueryArgs","baseUrl","expand","console","error","createErrorNotice","code","clearCheckout","componentWillLoad","onChange","checkoutLink","loading","busy","navigating","empty","pagination","lineItems","_e","_d","tax_status","_f","customerShippingAddress","_g","customer","_j","_h","shipping_address","shippingAddress","_k","taxStatus","_l","render","h","key","onScAfterShow","onScAfterHide","Fragment","class","slot","name","style","formBusy"],"sources":["src/components/controllers/cart/sc-cart/sc-cart.scss?tag=sc-cart&encapsulation=shadow","src/components/controllers/cart/sc-cart/sc-cart.tsx"],"sourcesContent":[":host {\n  --sc-drawer-header-spacing: var(--sc-spacing-large);\n  --sc-drawer-body-spacing: var(--sc-spacing-large);\n  --sc-drawer-footer-spacing: var(--sc-spacing-large);\n}\n\n.cart {\n  font-size: 16px;\n}\n\n.cart__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 1em;\n}\n.cart__close {\n  opacity: 0.75;\n  transition: opacity 0.25s ease;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 1;\n  }\n}\n::slotted(*) {\n  padding: var(--sc-drawer-header-spacing);\n  background:  var(--sc-panel-background-color);\n  position: relative;\n}\n\n::slotted(sc-line-items) {\n  flex: 1 1 auto;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n  min-height: 200px;\n}\n::slotted(:last-child) {\n  border-bottom: 0 !important;\n}\n\nsc-drawer::part(body) {\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding:0;\n  overflow: hidden;\n}\n","import { Component, Fragment, h, Listen, Prop, State, Watch, Element } from '@stencil/core';\nimport apiFetch from '../../../../functions/fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { baseUrl } from '../../../../services/session';\nimport { getCheckout, setCheckout, clearCheckout } from '@store/checkouts/mutations';\nimport { state as checkoutState } from '@store/checkout';\nimport uiStore from '@store/ui';\nimport { expand } from '../../../../services/session';\nimport { Checkout } from '../../../../types';\nimport { createErrorNotice } from '@store/notices/mutations';\nimport { updateFormState } from '@store/form/mutations';\nimport { formBusy } from '@store/form/getters';\n@Component({\n  tag: 'sc-cart',\n  styleUrl: 'sc-cart.scss',\n  shadow: true,\n})\nexport class ScCart {\n  @Element() el: HTMLScCartElement;\n\n  /** Is this open or closed? */\n  @State() open: boolean = null;\n\n  /** The form id to use for the cart. */\n  @Prop({ reflect: true }) formId: string;\n\n  /** The header for the popout. */\n  @Prop() header: string;\n\n  @Prop() checkoutLink: string;\n\n  /** The template for the cart to inject when opened. */\n  @Prop() cartTemplate: string;\n\n  /** Are we in test or live mode. */\n  @Prop() mode: 'test' | 'live' = 'live';\n\n  /** The checkout url for the button. */\n  @Prop() checkoutUrl: string;\n\n  /** Should we force show the cart, even if there's a form on the page? */\n  @Prop() alwaysShow: boolean;\n\n  /** Whether the floating button should be visible */\n  @Prop() floatingIconEnabled: boolean = true;\n\n  /** The current UI state. */\n  @State() uiState: 'loading' | 'busy' | 'navigating' | 'idle' = 'idle';\n\n  @Watch('open')\n  handleOpenChange() {\n    uiStore.set('cart', { ...uiStore.state.cart, ...{ open: this.open } });\n    if (this.open === true) {\n      this.fetchOrder();\n    } else {\n      (document?.querySelector('sc-cart-icon')?.shadowRoot?.querySelector('.cart') as HTMLElement)?.focus();\n    }\n  }\n\n  order() {\n    return getCheckout(this.formId, this.mode);\n  }\n\n  setCheckout(data) {\n    setCheckout(data, this.formId);\n  }\n\n  /**\n   * Search for the sc-checkout component on a page to make sure\n   * we don't show the cart on a checkout page.\n   */\n  pageHasForm() {\n    return !!document.querySelector('sc-checkout');\n  }\n\n  /** Count the number of items in the cart. */\n  getItemsCount() {\n    const items = checkoutState.checkout?.line_items?.data;\n    let count = 0;\n    (items || []).forEach(item => {\n      count = count + item?.quantity;\n    });\n    return count;\n  }\n\n  @Listen('scSetState')\n  handleSetState(e) {\n    this.uiState = e.detail;\n  }\n\n  @Listen('scCloseCart')\n  handleCloseCart() {\n    this.open = false;\n  }\n\n  /** Fetch the order */\n  async fetchOrder() {\n    if (!checkoutState.checkout?.id) {\n      return;\n    }\n\n    try {\n      updateFormState('FETCH');\n      checkoutState.checkout = (await apiFetch({\n        method: 'GET', // create or update\n        path: addQueryArgs(`${baseUrl}${checkoutState.checkout?.id}`, {\n          expand,\n        }),\n      })) as Checkout;\n      updateFormState('RESOLVE');\n    } catch (e) {\n      console.error(e);\n      updateFormState('REJECT');\n      createErrorNotice(e);\n\n      if(e?.code === 'checkout.not_found') {\n        clearCheckout(this.formId, this.mode);\n      }\n    }\n  }\n\n  componentWillLoad() {\n    this.open = !!uiStore.state.cart.open;\n    uiStore.onChange('cart', cart => {\n      this.open = cart.open;\n    });\n  }\n\n  state() {\n    return {\n      uiState: this.uiState,\n      checkoutLink: this.checkoutLink,\n      loading: this.uiState === 'loading',\n      busy: this.uiState === 'busy',\n      navigating: this.uiState === 'navigating',\n      empty: !checkoutState.checkout?.line_items?.pagination?.count,\n      order: checkoutState.checkout,\n      lineItems: checkoutState.checkout?.line_items?.data || [],\n      tax_status: checkoutState.checkout?.tax_status,\n      customerShippingAddress: typeof checkoutState.checkout?.customer !== 'string' ? checkoutState.checkout?.customer?.shipping_address : {},\n      shippingAddress: checkoutState.checkout?.shipping_address,\n      taxStatus: checkoutState.checkout?.tax_status,\n      formId: this.formId,\n    };\n  }\n\n  render() {\n    return (\n      <sc-cart-session-provider>\n        <sc-drawer\n          open={this.open}\n          onScAfterShow={() => (this.open = true)}\n          onScAfterHide={() => {\n            this.open = false;\n          }}\n        >\n          {this.open === true && (\n            <Fragment>\n              <div class=\"cart__header-suffix\" slot=\"header\">\n                <slot name=\"cart-header\" />\n                <sc-error style={{ '--sc-alert-border-radius': '0' }} slot=\"header\"></sc-error>\n              </div>\n              <slot />\n            </Fragment>\n          )}\n          {formBusy() && <sc-block-ui z-index={9}></sc-block-ui>}\n        </sc-drawer>\n      </sc-cart-session-provider>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}