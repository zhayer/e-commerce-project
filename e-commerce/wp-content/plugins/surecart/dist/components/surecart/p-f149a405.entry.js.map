{"version":3,"names":["scOrderConfirmationLineItemsCss","ScOrderConfirmationLineItemsStyle0","ScOrderConfirmationLineItems","render","this","loading","h","style","width","height","slot","display","class","part","_b","_a","order","line_items","data","map","item","key","id","image","price","product","line_item_image","name","_d","_c","priceName","_e","variantLabel","variant_options","filter","Boolean","join","editable","removable","quantity","fees","_f","amount","ad_hoc_amount","subtotal_amount","currency","_g","trialDurationDays","_h","trial_duration_days","interval","intervalString","showOnce","hasSubscription","purchasableStatusDisplay","purchasable_status_display","openWormhole","scOrderConfirmationTotalsCss","ScOrderConfirmationTotalsStyle0","wp","i18n","__","_k","_j","discount","promotion","code","type","size","_o","_m","_l","humanDiscount","_p","value","_q","discount_amount","renderDiscountLine","bump_amount","marginTop","shipping_amount","tax_amount","formatTaxDisplay","tax_label","tax_percent","checkout","ScOrderConfirmationTotals"],"sources":["src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.scss?tag=sc-order-confirmation-line-items&encapsulation=shadow","src/components/controllers/confirmation/order-confirmation-line-items/sc-order-confirmation-line-items.tsx","src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.css?tag=sc-order-confirmation-totals&encapsulation=shadow","src/components/controllers/confirmation/order-confirmation-totals/sc-order-confirmation-totals.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n.line-items {\n  display: grid;\n  gap: var(--sc-spacing-small);\n}\n.line-item {\n  display: grid;\n  gap: var(--sc-spacing-small);\n}\n.fee__description {\n  opacity: 0.75;\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { openWormhole } from 'stencil-wormhole';\n\nimport { hasSubscription } from '../../../../functions/line-items';\nimport { intervalString } from '../../../../functions/price';\nimport { Checkout, Product } from '../../../../types';\n\n@Component({\n  tag: 'sc-order-confirmation-line-items',\n  styleUrl: 'sc-order-confirmation-line-items.scss',\n  shadow: true,\n})\nexport class ScOrderConfirmationLineItems {\n  @Prop() order: Checkout;\n  @Prop() loading: boolean;\n\n  render() {\n    if (!!this.loading) {\n      return (\n        <sc-line-item>\n          <sc-skeleton style={{ 'width': '50px', 'height': '50px', '--border-radius': '0' }} slot=\"image\"></sc-skeleton>\n          <sc-skeleton slot=\"title\" style={{ width: '120px', display: 'inline-block' }}></sc-skeleton>\n          <sc-skeleton slot=\"description\" style={{ width: '60px', display: 'inline-block' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '120px', display: 'inline-block' }} slot=\"price\"></sc-skeleton>\n          <sc-skeleton style={{ width: '60px', display: 'inline-block' }} slot=\"price-description\"></sc-skeleton>\n        </sc-line-item>\n      );\n    }\n\n    return (\n      <div class={{ 'confirmation-summary': true }}>\n        <div class=\"line-items\" part=\"line-items\">\n          {this.order?.line_items?.data.map(item => {\n            return (\n              <div class=\"line-item\">\n                <sc-product-line-item\n                  key={item.id}\n                  image={(item?.price?.product as Product)?.line_item_image}\n                  name={`${(item?.price?.product as Product)?.name}`}\n                  priceName={item?.price?.name}\n                  variantLabel={(item?.variant_options || []).filter(Boolean).join(' / ') || null}\n                  editable={false}\n                  removable={false}\n                  quantity={item.quantity}\n                  fees={item?.fees?.data}\n                  amount={item.ad_hoc_amount !== null ? item.ad_hoc_amount : item.subtotal_amount}\n                  currency={this.order?.currency}\n                  trialDurationDays={item?.price?.trial_duration_days}\n                  interval={intervalString(item?.price, { showOnce: hasSubscription(this.order) })}\n                  purchasableStatusDisplay={item?.purchasable_status_display}\n                ></sc-product-line-item>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nopenWormhole(ScOrderConfirmationLineItems, ['order', 'busy', 'loading', 'empty'], false);\n",":host {\n  display: block;\n}\n","import { getHumanDiscount } from '../../../../functions/price';\nimport { Checkout } from '../../../../types';\nimport { Component, h, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { openWormhole } from 'stencil-wormhole';\nimport { formatTaxDisplay } from '../../../../functions/tax';\n\n@Component({\n  tag: 'sc-order-confirmation-totals',\n  styleUrl: 'sc-order-confirmation-totals.css',\n  shadow: true,\n})\nexport class ScOrderConfirmationTotals {\n  @Prop() order: Checkout;\n\n  renderDiscountLine() {\n    if (!this.order?.discount?.promotion?.code) {\n      return null;\n    }\n\n    let humanDiscount = '';\n\n    if (this.order?.discount?.coupon) {\n      humanDiscount = getHumanDiscount(this.order?.discount?.coupon);\n    }\n\n    return (\n      <sc-line-item style={{ marginTop: 'var(--sc-spacing-small)' }}>\n        <span slot=\"description\">\n          {__('Discount', 'surecart')}\n          <br />\n          {this.order?.discount?.promotion?.code && (\n            <sc-tag type=\"success\" size=\"small\">\n              {this.order?.discount?.promotion?.code}\n            </sc-tag>\n          )}\n        </span>\n        {humanDiscount && (\n          <span class=\"coupon-human-discount\" slot=\"price-description\">\n            ({humanDiscount})\n          </span>\n        )}\n        <sc-format-number slot=\"price\" type=\"currency\" currency={this.order?.currency} value={-this.order?.discount_amount}></sc-format-number>\n      </sc-line-item>\n    );\n  }\n\n  render() {\n    return (\n      <div class={{ 'line-item-totals': true }}>\n        <sc-line-item-total checkout={this.order} total=\"subtotal\">\n          <span slot=\"description\">{__('Subtotal', 'surecart')}</span>\n        </sc-line-item-total>\n        {this.renderDiscountLine()}\n\n        {!!this.order?.bump_amount && (\n          <sc-line-item style={{ marginTop: 'var(--sc-spacing-small)' }}>\n            <span slot=\"description\">{__('Bundle Discount', 'surecart')}</span>\n            <sc-format-number slot=\"price\" type=\"currency\" currency={this.order?.currency} value={this.order?.bump_amount}></sc-format-number>\n          </sc-line-item>\n        )}\n\n        {!!this.order?.shipping_amount && (\n          <sc-line-item style={{ marginTop: 'var(--sc-spacing-small)' }}>\n            <span slot=\"description\">{__('Shipping', 'surecart')}</span>\n            <sc-format-number slot=\"price\" type=\"currency\" currency={this.order?.currency} value={this.order?.shipping_amount}></sc-format-number>\n          </sc-line-item>\n        )}\n\n        {!!this.order?.tax_amount && (\n          <sc-line-item style={{ marginTop: 'var(--sc-spacing-small)' }}>\n            <span slot=\"description\">\n              {formatTaxDisplay(this.order?.tax_label)} {`(${this.order.tax_percent}%)`}\n            </span>\n            <sc-format-number slot=\"price\" type=\"currency\" currency={this.order?.currency} value={this.order?.tax_amount}></sc-format-number>\n          </sc-line-item>\n        )}\n\n        <sc-divider style={{ '--spacing': 'var(--sc-spacing-small)' }}></sc-divider>\n        <sc-line-item-total checkout={this.order} size=\"large\" show-currency>\n          <span slot=\"description\">{__('Total', 'surecart')}</span>\n        </sc-line-item-total>\n      </div>\n    );\n  }\n}\n\nopenWormhole(ScOrderConfirmationTotals, ['order', 'busy', 'loading', 'empty'], false);\n"],"mappings":"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","ignoreList":[]}