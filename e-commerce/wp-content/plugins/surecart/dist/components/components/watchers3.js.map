{"file":"watchers3.js","mappings":"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","names":["onChange"],"sources":["src/store/product-donation/store.ts","src/store/product-donation/getters.ts","src/store/product-donation/mutations.ts","src/store/product-donation/watchers.ts"],"sourcesContent":["import { createStore } from '@stencil/store';\nimport { getSerializedState } from '@store/utils';\nimport { getLineItemByProductId } from '@store/checkout/getters';\nimport { Price, Product } from '../../types';\nconst { productDonation } = getSerializedState();\n\ninterface Store {\n  [key: string]: {\n    product: Product;\n    selectedPrice: Price;\n    ad_hoc_amount: number;\n    custom_amount: number;\n    amounts: number[];\n  };\n}\n\n// This gets initial checkout line items and updates the product donation store to match on load.\nconst productDonationData = Object.keys(productDonation || {}).reduce((acc, productId) => {\n  const lineItem = getLineItemByProductId(productId);\n  if (lineItem?.id) {\n    acc[productId] = {\n      ...acc[productId],\n      ...(lineItem?.ad_hoc_amount ? { ad_hoc_amount: lineItem.ad_hoc_amount } : {}),\n      ...(lineItem?.price ? { selectedPrice: lineItem.price } : {}),\n      custom_amount: (acc[productId].amounts || [])?.includes(lineItem.ad_hoc_amount) ? null : lineItem.ad_hoc_amount,\n    };\n  }\n  return acc;\n}, productDonation);\n\nconst { state, onChange, on, set, get, dispose } = createStore<Store>({ ...productDonationData }, (newValue, oldValue) => {\n  return JSON.stringify(newValue) !== JSON.stringify(oldValue);\n});\n\nexport default state;\nexport { state, onChange, on, set, get, dispose };\n","import { state } from './store';\nimport { isInRange } from '../../functions/util';\n\n/**\n * Get the valid ad hoc amount selected price on the product.\n */\nexport const getValidAdHocAmount = productId => {\n  const val = state[productId];\n  const validAmounts = (val.amounts || []).filter(amount => isInRange(amount, val.selectedPrice));\n  return validAmounts.includes(val?.ad_hoc_amount) ? val?.ad_hoc_amount : validAmounts[0];\n};\n\n/**\n * Get the valid ad hoc amount selected price on the product.\n */\nexport const getInRangeAmounts = productId => {\n  const val = state[productId];\n  return (val.amounts || []).filter(amount => isInRange(amount, val.selectedPrice));\n};\n","import { addCheckoutLineItem, updateCheckoutLineItem } from '@store/checkout/mutations';\nimport { getLineItemByProductId } from '@store/checkout/getters';\nimport { state } from './store';\n\nexport const updateDonationState = (productId, data) => {\n  state[productId] = {\n    ...state[productId],\n    ...data,\n  };\n};\n\nexport const updateLineItem = (productId, data) => {\n  const lineItem = getLineItemByProductId(productId);\n  // we have a line item, update it\n  return lineItem?.id\n    ? updateCheckoutLineItem({\n        id: lineItem.id,\n        data: {\n          ...{\n            price: lineItem.price.id,\n            ...(lineItem?.ad_hoc_amount ? { ad_hoc_amount: lineItem?.ad_hoc_amount } : {}),\n          },\n          ...data,\n        },\n      })\n    : addCheckoutLineItem(data);\n};\n","import { getValidAdHocAmount } from './getters';\nimport { updateLineItem } from './mutations';\nimport state, { on, set } from './store';\nimport { onChange } from '../checkout/store';\nimport { isInRange } from '../../functions/util';\nimport { getLineItemByProductId } from '@store/checkout/getters';\n\n// when the checkout changes, update the selected price and ad hoc amount\nonChange('checkout', () => {\n  Object.keys(state).forEach(productId => {\n    const lineItem = getLineItemByProductId(productId);\n\n    // line item is updated, update the store\n    if (lineItem) {\n      return set(productId, {\n        ...state[productId],\n        selectedPrice: lineItem.price,\n        ad_hoc_amount: lineItem.ad_hoc_amount,\n        custom_amount: (state[productId].amounts || [])?.includes(lineItem.ad_hoc_amount) ? null : lineItem.ad_hoc_amount,\n      });\n    }\n\n    // line item is deleted, reset the store\n    set(productId, {\n      ...state[productId],\n      selectedPrice: null,\n      ad_hoc_amount: null,\n      custom_amount: null,\n    });\n  });\n});\n\n// for each product\nObject.keys(state).forEach(productId => {\n  // when the product is updated\n  on('set', (prop, val, prev) => {\n    // if the product is the one we're looking for\n    if (prop !== productId) return;\n    // It's been cleared.\n    if (!val?.selectedPrice && !val?.ad_hoc_amount && !val?.custom_amount) return;\n    // and the selectedPrice has changed\n    if (val?.selectedPrice?.id !== prev?.selectedPrice?.id || val?.ad_hoc_amount !== prev?.ad_hoc_amount || val?.custom_amount !== prev?.custom_amount) {\n      // use custom amount if it's in range, otherwise use the first valid amount\n      const ad_hoc_amount = val?.custom_amount && isInRange(val?.custom_amount, val.selectedPrice) ? val?.custom_amount : getValidAdHocAmount(productId);\n      const price = val.selectedPrice?.id || val.product?.prices?.data.find(price => price?.ad_hoc)?.id;\n      // if there's no price, return\n      if (!price) return;\n      // update the line item\n      updateLineItem(productId, {\n        price,\n        quantity: 1, // quantity should always be 1.\n        ad_hoc_amount,\n      });\n    }\n  });\n});\n"],"version":3}