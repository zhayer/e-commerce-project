{"file":"getters2.js","mappings":";;;AAKA;;;MAGa,eAAe,GAAG,MAAM,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE;AAE3E;;;;;MAKa,gBAAgB,GAAG,CAAC,QAAQ,GAAG,EAAE,eAAc,QAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,QAAQ,CAAC,GAAG,CAAC,EAAC,MAAA,KAAK,CAAC,KAAK,0CAAE,MAAM,CAAA,EAAC,GAAC;AAE7I;;;MAGa,sBAAsB,GAAG,CAAC,SAAiB,mBAAK,OAAA,CAAC,CAAA,MAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,UAAU,0CAAE,IAAI,KAAI,EAAE,EAAE,IAAI,CAAC,SAAS,kBAAI,OAAA,CAAA,MAAC,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,0CAAE,OAAmB,0CAAE,EAAE,MAAK,SAAS,CAAA,EAAA,CAAC,CAAA,GAAC;AAElL;;;MAGa,2BAA2B,GAAG,gBAAM,OAAA,CAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,qCAAqC,MAAK,MAAM,CAAA,GAAC;AAElH;;;MAGa,uBAAuB,GAAG,oBAAM,OAAA,CAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,qCAAqC,MAAK,MAAM,IAAI,CAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,qCAAqC,MAAK,KAAK,CAAA,GAAC;AAEjL;;;MAGa,kBAAkB,GAAG,CAAC,IAAI,GAAG,UAAU;;IAClD,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAA,KAAK,CAAC,QAAQ,0CAAG,GAAG,IAAI,UAAU,CAAY,CAAC,CAAC;IACrF,IAAI,CAAC,UAAU;QAAE,OAAO;IAExB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,UAAU,EAAE,GAAG,CAAC,MAAA,KAAK,CAAC,QAAQ,0CAAE,gBAA4B,KAAI,EAAE,CAAC;IAE5G,OAAO;QACL,KAAK;QACL,KAAK;QACL,GAAG,UAAU;KACd,CAAC;AACJ;;;;","names":[],"sources":["src/store/checkout/getters.ts"],"sourcesContent":["import { Product, Address } from 'src/types';\nimport { getCheckout } from '../checkouts/mutations';\nimport state from './store';\nimport { isAddressComplete } from 'src/functions/address';\n\n/**\n * Gets the current checkout for the page.\n */\nexport const currentCheckout = () => getCheckout(state.formId, state.mode);\n\n/**\n * Is the checkout currently locked.\n * Pass an optional lock name to find if a\n * specific lock name is locking checkout.\n */\nexport const checkoutIsLocked = (lockName = ''): boolean => (lockName ? state.locks.some(name => name === lockName) : !!state.locks?.length);\n\n/**\n * Get a line item by product id.\n */\nexport const getLineItemByProductId = (productId: string) => (state.checkout?.line_items?.data || []).find(line_item => (line_item?.price?.product as Product)?.id === productId);\n\n/**\n * Is the shipping address required?\n */\nexport const fullShippingAddressRequired = () => state.checkout?.shipping_address_accuracy_requirement === 'full';\n\n/**\n * Is the address required?\n */\nexport const shippingAddressRequired = () => state.checkout?.shipping_address_accuracy_requirement === 'full' || state.checkout?.shipping_address_accuracy_requirement === 'tax';\n\n/**\n * Get Billing address\n */\nexport const getCompleteAddress = (type = 'shipping') => {\n  const isComplete = isAddressComplete(state.checkout?.[`${type}_address`] as Address);\n  if (!isComplete) return;\n\n  const { line_1: line1, line_2: line2, ...otherProps } = (state.checkout?.shipping_address as Address) || {};\n\n  return {\n    line1,\n    line2,\n    ...otherProps,\n  };\n};\n"],"version":3}