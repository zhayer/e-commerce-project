{"file":"sc-customer-details2.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,CAAC,UAAU,MAAM,EAAE,OAAO,EAAE;AAC5B,IAAmE,OAAO,CAAC,OAAO,CAAC,CAEwC,CAAC;AAC5H,CAAC,EAAEA,cAAI,GAAG,UAAU,OAAO,EAAE,CAC7B;AACA;AACA,IAAI,MAAM,cAAc,GAAG,IAAI,GAAG,CAAC;AACnC,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC;AACpE,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACpF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC;AACxD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC;AAChD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;AACtD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC;AAChD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC;AACxF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC;AACvD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACpF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC;AAChD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,8BAA8B,EAAE,CAAC;AACzD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;AACtD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC;AAC7C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC5E,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC;AAChD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC;AACvD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC;AACvD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC;AACvD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC7E,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACpF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,yBAAyB,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC;AACzF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC;AACpD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC;AAChD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC;AACpD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;AAC5D,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;AACtD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;AACtD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE,CAAC;AAChD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;AACtD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC;AAC3C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;AACtD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACpF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,0BAA0B,EAAE,CAAC;AACrD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,0BAA0B,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;AACzF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AACjF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACpF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC;AAC/C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC;AAClF,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;AACjD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC;AACnD,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;AAC9C,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,oBAAoB,GAAG,gBAAgB,CAAC;AAClD;AACA,IAAI,MAAM,eAAe,GAAG,CAAC,WAAW,EAAE,UAAU,KAAK;AACzD,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,MAAM,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;AACrE,QAAQ,IAAI,CAAC,MAAM,EAAE;AACrB,YAAY,OAAO,oBAAoB,CAAC;AACxC,SAAS;AACT,QAAQ,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC;AACvF,KAAK,CAAC;AACN,IAAI,MAAM,mBAAmB,GAAG,CAAC,MAAM,KAAK;AAC5C,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;AACzB,QAAQ,IAAI,OAAO,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,cAAc,GAAG,EAAE,CAAC;AAChC,QAAQ,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE;AACnC,YAAY,IAAI,OAAO,EAAE;AACzB,gBAAgB,OAAO,GAAG,KAAK,CAAC;AAChC,gBAAgB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACvC,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,IAAI,IAAI,KAAK,GAAG,EAAE;AAC9B,gBAAgB,cAAc,IAAI,IAAI,CAAC;AACvC,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3C,gBAAgB,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC3C,gBAAgB,cAAc,GAAG,EAAE,CAAC;AACpC,aAAa;AACb,YAAY,OAAO,GAAG,IAAI,CAAC;AAC3B,SAAS;AACT,QAAQ,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;AACvC,YAAY,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACvC,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK,CAAC;AACN,IAAI,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC;AAC3B,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;AACtB,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAC;AAC9B,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAC;AAC9B,QAAQ,CAAC,IAAI,EAAE,mBAAmB,CAAC;AACnC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC;AAC1B,QAAQ,CAAC,IAAI,EAAE,oBAAoB,CAAC;AACpC,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC;AAC5B,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC;AAC7B,QAAQ,CAAC,IAAI,EAAE,eAAe,CAAC;AAC/B,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,0BAA0B,GAAG,CAAC,eAAe,KAAK;AAC5D,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAClD;AACA,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,0CAA0C,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC;AAC5F,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK,CAAC;AACN,IAAI,MAAM,uBAAuB,GAAG,CAAC,OAAO,EAAE,KAAK,KAAK;AACxD,QAAQ,IAAI,KAAK,KAAK,cAAc,EAAE;AACtC,YAAY,OAAO,OAAO,CAAC,YAAY,KAAK,SAAS,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AACzF,SAAS;AACT,QAAQ,OAAO,OAAO,CAAC,KAAK,CAAC,KAAK,SAAS,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AACrE,KAAK,CAAC;AACN,IAAI,MAAM,8BAA8B,GAAG,CAAC,eAAe,KAAK;AAChE,QAAQ,OAAO,eAAe,KAAK,IAAI,IAAI,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC3E,KAAK,CAAC;AACN,IAAI,MAAM,WAAW,GAAG,CAAC,gBAAgB,EAAE,OAAO,KAAK;AACvD,QAAQ,MAAM,YAAY,GAAG,EAAE,CAAC;AAChC,QAAQ,KAAK,MAAM,CAAC,CAAC,EAAE,eAAe,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAE,EAAE;AACvE;AACA,YAAY,IAAI,eAAe,KAAK,IAAI,EAAE;AAC1C,gBAAgB,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACnD,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,IAAI,8BAA8B,CAAC,eAAe,CAAC,EAAE;AACjE;AACA,gBAAgB,IAAI,uBAAuB,CAAC,OAAO,EAAE,0BAA0B,CAAC,eAAe,CAAC,CAAC,EAAE;AACnG,oBAAoB,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACvD,iBAAiB;AACjB,gBAAgB,SAAS;AACzB,aAAa;AACb;AACA;AACA;AACA,YAAY,IAAI,CAAC,CAAC,KAAK,gBAAgB,CAAC,MAAM,GAAG,CAAC;AAClD,mBAAmB,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI;AACnD,mBAAmB,uBAAuB,CAAC,OAAO,EAAE,0BAA0B,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;AACrH,mBAAmB,CAAC,8BAA8B,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3E,oBAAoB,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,8BAA8B,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACxH,gBAAgB,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACnD,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,YAAY,CAAC;AAC5B,KAAK,CAAC;AACN,IAAI,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,UAAU,GAAG,OAAO,KAAK;AAC7D,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,MAAM,YAAY,GAAG,eAAe,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,aAAa,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC;AAC7H,QAAQ,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;AACnE,QAAQ,MAAM,YAAY,GAAG,WAAW,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACpE,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;AACzB,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;AAC7B,QAAQ,KAAK,MAAM,eAAe,IAAI,YAAY,EAAE;AACpD,YAAY,IAAI,eAAe,KAAK,IAAI,EAAE;AAC1C,gBAAgB,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5C,oBAAoB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5C,oBAAoB,WAAW,GAAG,EAAE,CAAC;AACrC,iBAAiB;AACjB,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,IAAI,CAAC,8BAA8B,CAAC,eAAe,CAAC,EAAE;AAClE;AACA,gBAAgB,WAAW,IAAI,eAAe,CAAC;AAC/C,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,MAAM,KAAK,GAAG,0BAA0B,CAAC,eAAe,CAAC,CAAC;AACtE;AACA,YAAY,IAAI,KAAK,KAAK,eAAe,EAAE;AAC3C;AACA,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,IAAI,KAAK,KAAK,cAAc,EAAE;AAC1C;AACA;AACA,gBAAgB,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,IAAI,WAAW,KAAK,EAAE,CAAC,CAAC;AACpG,gBAAgB,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/C;AACA,oBAAoB,SAAS;AAC7B,iBAAiB;AACjB,gBAAgB,WAAW,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/C,gBAAgB,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7C,oBAAoB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5C,oBAAoB,WAAW,GAAG,EAAE,CAAC;AACrC,oBAAoB,KAAK,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,iBAAiB;AACjB,gBAAgB,SAAS;AACzB,aAAa;AACb;AACA,YAAY,WAAW,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;AAC1C,SAAS;AACT,QAAQ,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AACpC,YAAY,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACpC,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AAC1C;AACA,IAAI,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAClE;AACA,CAAC,EAAE,CAAC;;;;AChWJ,MAAM,oBAAoB,GAAG,EAAE,CAAC;AAChC,gCAAe,oBAAoB;;;;;;;;;;;;;;;;;;;;;kTCmDV,UAAE,wWAUF,UAAE,qTAMmE,UAAE,oMACF,UAAE,4SAIvE,UAAE;;;;;qJAS8B,UAAE;;mNAQM,UAAE;;;;;;;;;;;;;;;;;;;;8IA0ClC,UAAE;;;;;;;4TA0BR,UAAE,mbAGd,UAAE,yZAQJ,UAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["this"],"sources":["../../node_modules/localized-address-format/dist/index.umd.js","src/components/ui/customer-details/sc-customer-details.css?tag=sc-customer-details&encapsulation=shadow","src/components/ui/customer-details/sc-customer-details.tsx"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.localizedAddressFormat = {}));\n})(this, (function (exports) { 'use strict';\n\n    // This file is auto-generated via \"npm run update-formats\". Do not alter manually!\n    const addressFormats = new Map([\n        ['AC', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['AD', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['AE', { local: '%N%n%O%n%A%n%S', latin: '%N%n%O%n%A%n%S' }],\n        ['AF', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['AI', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['AL', { local: '%N%n%O%n%A%n%Z%n%C' }],\n        ['AM', { local: '%N%n%O%n%A%n%Z%n%C%n%S', latin: '%N%n%O%n%A%n%Z%n%C%n%S' }],\n        ['AR', { local: '%N%n%O%n%A%n%Z %C%n%S' }],\n        ['AS', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['AT', { local: '%O%n%N%n%A%n%Z %C' }],\n        ['AU', { local: '%O%n%N%n%A%n%C %S %Z' }],\n        ['AX', { local: '%O%n%N%n%A%nAX-%Z %C%nÅLAND' }],\n        ['AZ', { local: '%N%n%O%n%A%nAZ %Z %C' }],\n        ['BA', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['BB', { local: '%N%n%O%n%A%n%C, %S %Z' }],\n        ['BD', { local: '%N%n%O%n%A%n%C - %Z' }],\n        ['BE', { local: '%O%n%N%n%A%n%Z %C' }],\n        ['BF', { local: '%N%n%O%n%A%n%C %X' }],\n        ['BG', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['BH', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['BL', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['BM', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['BN', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['BR', { local: '%O%n%N%n%A%n%D%n%C-%S%n%Z' }],\n        ['BS', { local: '%N%n%O%n%A%n%C, %S' }],\n        ['BT', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['BY', { local: '%O%n%N%n%A%n%Z, %C%n%S' }],\n        ['CA', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['CC', { local: '%O%n%N%n%A%n%C %S %Z' }],\n        ['CH', { local: '%O%n%N%n%A%nCH-%Z %C' }],\n        ['CI', { local: '%N%n%O%n%X %A %C %X' }],\n        ['CL', { local: '%N%n%O%n%A%n%Z %C%n%S' }],\n        ['CN', { local: '%Z%n%S%C%D%n%A%n%O%n%N', latin: '%N%n%O%n%A%n%D%n%C%n%S, %Z' }],\n        ['CO', { local: '%N%n%O%n%A%n%D%n%C, %S, %Z' }],\n        ['CR', { local: '%N%n%O%n%A%n%S, %C%n%Z' }],\n        ['CU', { local: '%N%n%O%n%A%n%C %S%n%Z' }],\n        ['CV', { local: '%N%n%O%n%A%n%Z %C%n%S' }],\n        ['CX', { local: '%O%n%N%n%A%n%C %S %Z' }],\n        ['CY', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['CZ', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['DE', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['DK', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['DO', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['DZ', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['EC', { local: '%N%n%O%n%A%n%Z%n%C' }],\n        ['EE', { local: '%N%n%O%n%A%n%Z %C %S' }],\n        ['EG', { local: '%N%n%O%n%A%n%C%n%S%n%Z', latin: '%N%n%O%n%A%n%C%n%S%n%Z' }],\n        ['EH', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['ES', { local: '%N%n%O%n%A%n%Z %C %S' }],\n        ['ET', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['FI', { local: '%O%n%N%n%A%nFI-%Z %C' }],\n        ['FK', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['FM', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['FO', { local: '%N%n%O%n%A%nFO%Z %C' }],\n        ['FR', { local: '%O%n%N%n%A%n%Z %C' }],\n        ['GB', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['GE', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['GF', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['GG', { local: '%N%n%O%n%A%n%C%nGUERNSEY%n%Z' }],\n        ['GI', { local: '%N%n%O%n%A%nGIBRALTAR%n%Z' }],\n        ['GL', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['GN', { local: '%N%n%O%n%Z %A %C' }],\n        ['GP', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['GR', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['GS', { local: '%N%n%O%n%A%n%n%C%n%Z' }],\n        ['GT', { local: '%N%n%O%n%A%n%Z- %C' }],\n        ['GU', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['GW', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['HK', { local: '%S%n%C%n%A%n%O%n%N', latin: '%N%n%O%n%A%n%C%n%S' }],\n        ['HM', { local: '%O%n%N%n%A%n%C %S %Z' }],\n        ['HN', { local: '%N%n%O%n%A%n%C, %S%n%Z' }],\n        ['HR', { local: '%N%n%O%n%A%nHR-%Z %C' }],\n        ['HT', { local: '%N%n%O%n%A%nHT%Z %C' }],\n        ['HU', { local: '%N%n%O%n%C%n%A%n%Z' }],\n        ['ID', { local: '%N%n%O%n%A%n%C%n%S %Z' }],\n        ['IE', { local: '%N%n%O%n%A%n%D%n%C%n%S%n%Z' }],\n        ['IL', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['IM', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['IN', { local: '%N%n%O%n%A%n%C %Z%n%S' }],\n        ['IO', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['IQ', { local: '%O%n%N%n%A%n%C, %S%n%Z' }],\n        ['IR', { local: '%O%n%N%n%S%n%C, %D%n%A%n%Z' }],\n        ['IS', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['IT', { local: '%N%n%O%n%A%n%Z %C %S' }],\n        ['JE', { local: '%N%n%O%n%A%n%C%nJERSEY%n%Z' }],\n        ['JM', { local: '%N%n%O%n%A%n%C%n%S %X' }],\n        ['JO', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['JP', { local: '〒%Z%n%S%n%A%n%O%n%N', latin: '%N%n%O%n%A, %S%n%Z' }],\n        ['KE', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['KG', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['KH', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['KI', { local: '%N%n%O%n%A%n%S%n%C' }],\n        ['KN', { local: '%N%n%O%n%A%n%C, %S' }],\n        ['KP', { local: '%Z%n%S%n%C%n%A%n%O%n%N', latin: '%N%n%O%n%A%n%C%n%S, %Z' }],\n        ['KR', { local: '%S %C%D%n%A%n%O%n%N%n%Z', latin: '%N%n%O%n%A%n%D%n%C%n%S%n%Z' }],\n        ['KW', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['KY', { local: '%N%n%O%n%A%n%S %Z' }],\n        ['KZ', { local: '%Z%n%S%n%C%n%A%n%O%n%N' }],\n        ['LA', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['LB', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['LI', { local: '%O%n%N%n%A%nFL-%Z %C' }],\n        ['LK', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['LR', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['LS', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['LT', { local: '%O%n%N%n%A%nLT-%Z %C %S' }],\n        ['LU', { local: '%O%n%N%n%A%nL-%Z %C' }],\n        ['LV', { local: '%N%n%O%n%A%n%S%n%C, %Z' }],\n        ['MA', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['MC', { local: '%N%n%O%n%A%nMC-%Z %C %X' }],\n        ['MD', { local: '%N%n%O%n%A%nMD-%Z %C' }],\n        ['ME', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['MF', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['MG', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['MH', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['MK', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['MM', { local: '%N%n%O%n%A%n%C, %Z' }],\n        ['MN', { local: '%N%n%O%n%A%n%C%n%S %Z' }],\n        ['MO', { local: '%A%n%O%n%N', latin: '%N%n%O%n%A' }],\n        ['MP', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['MQ', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['MT', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['MU', { local: '%N%n%O%n%A%n%Z%n%C' }],\n        ['MV', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['MW', { local: '%N%n%O%n%A%n%C %X' }],\n        ['MX', { local: '%N%n%O%n%A%n%D%n%Z %C, %S' }],\n        ['MY', { local: '%N%n%O%n%A%n%D%n%Z %C%n%S' }],\n        ['MZ', { local: '%N%n%O%n%A%n%Z %C%S' }],\n        ['NA', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['NC', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['NE', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['NF', { local: '%O%n%N%n%A%n%C %S %Z' }],\n        ['NG', { local: '%N%n%O%n%A%n%D%n%C %Z%n%S' }],\n        ['NI', { local: '%N%n%O%n%A%n%Z%n%C, %S' }],\n        ['NL', { local: '%O%n%N%n%A%n%Z %C' }],\n        ['NO', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['NP', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['NR', { local: '%N%n%O%n%A%n%S' }],\n        ['NZ', { local: '%N%n%O%n%A%n%D%n%C %Z' }],\n        ['OM', { local: '%N%n%O%n%A%n%Z%n%C' }],\n        ['PA', { local: '%N%n%O%n%A%n%C%n%S' }],\n        ['PE', { local: '%N%n%O%n%A%n%C %Z%n%S' }],\n        ['PF', { local: '%N%n%O%n%A%n%Z %C %S' }],\n        ['PG', { local: '%N%n%O%n%A%n%C %Z %S' }],\n        ['PH', { local: '%N%n%O%n%A%n%D, %C%n%Z %S' }],\n        ['PK', { local: '%N%n%O%n%A%n%D%n%C-%Z' }],\n        ['PL', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['PM', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['PN', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['PR', { local: '%N%n%O%n%A%n%C PR %Z' }],\n        ['PT', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['PW', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['PY', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['RE', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['RO', { local: '%N%n%O%n%A%n%Z %S %C' }],\n        ['RS', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['RU', { local: '%N%n%O%n%A%n%C%n%S%n%Z', latin: '%N%n%O%n%A%n%C%n%S%n%Z' }],\n        ['SA', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['SC', { local: '%N%n%O%n%A%n%C%n%S' }],\n        ['SD', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['SE', { local: '%O%n%N%n%A%nSE-%Z %C' }],\n        ['SG', { local: '%N%n%O%n%A%nSINGAPORE %Z' }],\n        ['SH', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['SI', { local: '%N%n%O%n%A%nSI-%Z %C' }],\n        ['SJ', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['SK', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['SM', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['SN', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['SO', { local: '%N%n%O%n%A%n%C, %S %Z' }],\n        ['SR', { local: '%N%n%O%n%A%n%C%n%S' }],\n        ['SV', { local: '%N%n%O%n%A%n%Z-%C%n%S' }],\n        ['SZ', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['TA', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['TC', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['TH', { local: '%N%n%O%n%A%n%D %C%n%S %Z', latin: '%N%n%O%n%A%n%D, %C%n%S %Z' }],\n        ['TJ', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['TM', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['TN', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['TR', { local: '%N%n%O%n%A%n%Z %C/%S' }],\n        ['TV', { local: '%N%n%O%n%A%n%C%n%S' }],\n        ['TW', { local: '%Z%n%S%C%n%A%n%O%n%N', latin: '%N%n%O%n%A%n%C, %S %Z' }],\n        ['TZ', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['UA', { local: '%N%n%O%n%A%n%C%n%S%n%Z', latin: '%N%n%O%n%A%n%C%n%S%n%Z' }],\n        ['UM', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['US', { local: '%N%n%O%n%A%n%C, %S %Z' }],\n        ['UY', { local: '%N%n%O%n%A%n%Z %C %S' }],\n        ['UZ', { local: '%N%n%O%n%A%n%Z %C%n%S' }],\n        ['VA', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['VC', { local: '%N%n%O%n%A%n%C %Z' }],\n        ['VE', { local: '%N%n%O%n%A%n%C %Z, %S' }],\n        ['VG', { local: '%N%n%O%n%A%n%C%n%Z' }],\n        ['VI', { local: '%N%n%O%n%A%n%C %S %Z' }],\n        ['VN', { local: '%N%n%O%n%A%n%C%n%S %Z', latin: '%N%n%O%n%A%n%C%n%S %Z' }],\n        ['WF', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['XK', { local: '%N%n%O%n%A%n%Z %C' }],\n        ['YT', { local: '%O%n%N%n%A%n%Z %C %X' }],\n        ['ZA', { local: '%N%n%O%n%A%n%D%n%C%n%Z' }],\n        ['ZM', { local: '%N%n%O%n%A%n%Z %C' }],\n    ]);\n    const defaultAddressFormat = '%N%n%O%n%A%n%C';\n\n    const getFormatString = (countryCode, scriptType) => {\n        var _a;\n        const format = addressFormats.get(countryCode.toUpperCase());\n        if (!format) {\n            return defaultAddressFormat;\n        }\n        return (_a = format[scriptType]) !== null && _a !== void 0 ? _a : format.local;\n    };\n    const getFormatSubstrings = (format) => {\n        const parts = [];\n        let escaped = false;\n        let currentLiteral = '';\n        for (const char of format) {\n            if (escaped) {\n                escaped = false;\n                parts.push(`%${char}`);\n                continue;\n            }\n            if (char !== '%') {\n                currentLiteral += char;\n                continue;\n            }\n            if (currentLiteral.length > 0) {\n                parts.push(currentLiteral);\n                currentLiteral = '';\n            }\n            escaped = true;\n        }\n        if (currentLiteral.length > 0) {\n            parts.push(currentLiteral);\n        }\n        return parts;\n    };\n    const fields = new Map([\n        ['%N', 'name'],\n        ['%O', 'organization'],\n        ['%A', 'addressLines'],\n        ['%D', 'dependentLocality'],\n        ['%C', 'locality'],\n        ['%S', 'administrativeArea'],\n        ['%Z', 'postalCode'],\n        ['%X', 'sortingCode'],\n        ['%R', 'postalCountry'],\n    ]);\n    const getFieldForFormatSubstring = (formatSubstring) => {\n        const field = fields.get(formatSubstring);\n        /* istanbul ignore next imported format strings should never contain invalid substrings */\n        if (!field) {\n            throw new Error(`Could not find field for format substring ${formatSubstring}`);\n        }\n        return field;\n    };\n    const addressHasValueForField = (address, field) => {\n        if (field === 'addressLines') {\n            return address.addressLines !== undefined && address.addressLines.length > 0;\n        }\n        return address[field] !== undefined && address[field] !== '';\n    };\n    const formatSubstringRepresentsField = (formatSubstring) => {\n        return formatSubstring !== '%n' && formatSubstring.startsWith('%');\n    };\n    const pruneFormat = (formatSubstrings, address) => {\n        const prunedFormat = [];\n        for (const [i, formatSubstring] of formatSubstrings.entries()) {\n            // Always keep the newlines.\n            if (formatSubstring === '%n') {\n                prunedFormat.push(formatSubstring);\n                continue;\n            }\n            if (formatSubstringRepresentsField(formatSubstring)) {\n                // Always keep non-empty address fields.\n                if (addressHasValueForField(address, getFieldForFormatSubstring(formatSubstring))) {\n                    prunedFormat.push(formatSubstring);\n                }\n                continue;\n            }\n            // Only keep literals that satisfy these two conditions:\n            // 1. Not preceding an empty field.\n            // 2. Not following a removed field.\n            if ((i === formatSubstrings.length - 1\n                || formatSubstrings[i + 1] === '%n'\n                || addressHasValueForField(address, getFieldForFormatSubstring(formatSubstrings[i + 1]))) && (i === 0\n                || !formatSubstringRepresentsField(formatSubstrings[i - 1])\n                || (prunedFormat.length > 0 && formatSubstringRepresentsField(prunedFormat[prunedFormat.length - 1])))) {\n                prunedFormat.push(formatSubstring);\n            }\n        }\n        return prunedFormat;\n    };\n    const formatAddress = (address, scriptType = 'local') => {\n        var _a;\n        const formatString = getFormatString((_a = address.postalCountry) !== null && _a !== void 0 ? _a : 'ZZ', scriptType);\n        const formatSubstrings = getFormatSubstrings(formatString);\n        const prunedFormat = pruneFormat(formatSubstrings, address);\n        const lines = [];\n        let currentLine = '';\n        for (const formatSubstring of prunedFormat) {\n            if (formatSubstring === '%n') {\n                if (currentLine.length > 0) {\n                    lines.push(currentLine);\n                    currentLine = '';\n                }\n                continue;\n            }\n            if (!formatSubstringRepresentsField(formatSubstring)) {\n                // Not a symbol we recognize, so must be a literal. We append it unchanged.\n                currentLine += formatSubstring;\n                continue;\n            }\n            const field = getFieldForFormatSubstring(formatSubstring);\n            /* istanbul ignore next imported format strings should never contain the postal country */\n            if (field === 'postalCountry') {\n                // Country name is treated separately.\n                continue;\n            }\n            if (field === 'addressLines') {\n                // The field \"address lines\" represents the address lines of an address, so there can be multiple values.\n                // It is safe to assert addressLines to be defined here, as the pruning process already checked for that.\n                const addressLines = address.addressLines.filter(addressLine => addressLine !== '');\n                if (addressLines.length === 0) {\n                    // Empty address lines are ignored.\n                    continue;\n                }\n                currentLine += addressLines[0];\n                if (addressLines.length > 1) {\n                    lines.push(currentLine);\n                    currentLine = '';\n                    lines.push(...addressLines.slice(1));\n                }\n                continue;\n            }\n            // Any other field can be appended as is.\n            currentLine += address[field];\n        }\n        if (currentLine.length > 0) {\n            lines.push(currentLine);\n        }\n        return lines;\n    };\n\n    exports.formatAddress = formatAddress;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=index.umd.js.map\n","","import { Component, Element, h, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { Address, Customer } from '../../../types';\nimport { formatAddress } from 'localized-address-format';\nimport { countryChoices } from '../../../functions/address';\nimport { zones } from '../../../functions/tax';\n\n/**\n * @part base - The elements base wrapper.\n * @part heading - The heading.\n * @part heading-text - The heading text wrapper.\n * @part heading-title - The heading title.\n * @part heading-description - The heading description.\n * @part error__base - The elements base wrapper.\n * @part error__icon - The alert icon.\n * @part error__text - The alert text.\n * @part error__title - The alert title.\n * @part error__ message - The alert message.\n * @part test-tag__base - The base test tag.\n * @part text-tag__content - The base test tag content.\n * @part button__base - The button base.\n * @part button__label - The button label.\n * @part button__prefix - The button prefix.\n */\n@Component({\n  tag: 'sc-customer-details',\n  styleUrl: 'sc-customer-details.css',\n  shadow: true,\n})\nexport class ScCustomerDetails {\n  @Element() el: HTMLScCustomerDetailsElement;\n  @Prop() heading: string;\n  @Prop() editLink: string;\n  @Prop() customer: Customer;\n  @Prop() loading: boolean;\n  @Prop() error: string;\n\n  renderContent() {\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    if (!this.customer) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <sc-card no-padding>\n        <sc-stacked-list>\n          {!!this?.customer?.name && (\n            <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n              <div>\n                <strong>{__('Billing Name', 'surecart')}</strong>\n              </div>\n              <div>{this.customer?.name}</div>\n              <div></div>\n              {/** Needed for formatting */}\n            </sc-stacked-list-row>\n          )}\n          {!!this?.customer?.email && (\n            <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n              <div>\n                <strong>{__('Billing Email', 'surecart')}</strong>\n              </div>\n              <div>{this.customer?.email}</div>\n              <div></div>\n            </sc-stacked-list-row>\n          )}\n          {!!Object.keys(this?.customer?.shipping_address || {}).length && this.renderAddress(__('Shipping Address', 'surecart'), this.customer.shipping_address)}\n          {!!Object.keys(this.customer?.billing_address_display).length && this.renderAddress(__('Billing Address', 'surecart'), this.customer.billing_address_display)}\n          {!!this?.customer?.phone && (\n            <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n              <div>\n                <strong>{__('Phone', 'surecart')}</strong>\n              </div>\n              <div>{this.customer?.phone}</div>\n              <div></div>\n            </sc-stacked-list-row>\n          )}\n          {(() => {\n            const { number_type, number } = this.customer?.tax_identifier || {};\n            if (!number || !number_type) return;\n            const label = zones?.[number_type]?.label || __('Tax Id', 'surecart');\n            const isInvalid = this.customer?.tax_identifier?.[`valid_${number_type}`] === false;\n            return (\n              <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n                <div>\n                  <strong>{label}</strong>\n                </div>\n                <div>\n                  {number} {isInvalid && <sc-tag type=\"warning\">{__('Invalid', 'surecart')}</sc-tag>}\n                </div>\n                <div></div>\n              </sc-stacked-list-row>\n            );\n          })()}\n        </sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  renderAddress(label: string = 'Address', address: Address) {\n    const { name, line_1, line_2, city, state, postal_code, country } = address;\n    const countryName = countryChoices.find(({ value }) => value === country)?.label;\n    return (\n      <sc-stacked-list-row style={{ '--columns': '3' }} mobileSize={480}>\n        <div>\n          <strong>{label}</strong>\n        </div>\n        <div>\n          {[\n            ...(formatAddress({\n              name: name || '',\n              postalCountry: country || '',\n              administrativeArea: state || '',\n              locality: city || '',\n              postalCode: postal_code || '',\n              addressLines: [line_1, line_2].filter(Boolean),\n            }) || []),\n            countryName || country,\n          ].join('\\n')}\n        </div>\n        <div></div>\n      </sc-stacked-list-row>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <div>\n        <sc-divider style={{ '--spacing': '0' }}></sc-divider>\n        <slot name=\"empty\">\n          <sc-empty icon=\"user\">{__(\"You don't have any billing information.\", 'surecart')}</sc-empty>\n        </slot>\n      </div>\n    );\n  }\n\n  renderLoading() {\n    return (\n      <sc-card no-padding>\n        <sc-stacked-list>\n          <sc-stacked-list-row style={{ '--columns': '2' }} mobile-size={0}>\n            <div style={{ padding: '0.5em' }}>\n              <sc-skeleton style={{ width: '30%', marginBottom: '0.75em' }}></sc-skeleton>\n              <sc-skeleton style={{ width: '20%', marginBottom: '0.75em' }}></sc-skeleton>\n              <sc-skeleton style={{ width: '40%' }}></sc-skeleton>\n            </div>\n          </sc-stacked-list-row>\n        </sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module exportparts=\"base, heading, heading-text, heading-title, heading-description\" class=\"customer-details\" error={this.error}>\n        <span slot=\"heading\">\n          {this.heading || __('Billing Details', 'surecart')}{' '}\n          {!!this?.customer?.id && !this?.customer?.live_mode && (\n            <sc-tag exportparts=\"base:test-tag__base, content:test-tag__content\" type=\"warning\" size=\"small\">\n              {__('Test', 'surecart')}\n            </sc-tag>\n          )}\n        </span>\n\n        {!!this.editLink && !!this.customer?.id && (\n          <sc-button exportparts=\"base:button__base, label:button__label, prefix:button__prefix\" type=\"link\" href={this.editLink} slot=\"end\">\n            <sc-icon name=\"edit-3\" slot=\"prefix\"></sc-icon>\n            {__('Update', 'surecart')}\n          </sc-button>\n        )}\n\n        {this.renderContent()}\n      </sc-dashboard-module>\n    );\n  }\n}\n"],"version":3}