{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../src/store/checkouts/events.ts"],"names":[],"mappings":"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","sourcesContent":["import { on } from './store';\nimport { on as onUIChange } from '@store/ui';\nimport { state as checkoutState } from '@store/checkout';\nimport { Checkout, LineItem } from 'src/types';\n\n// Listen to all stored checkouts and handle line item changes.\non('set', (_, value, oldValue) => Object.keys(value || {}).forEach(key => handleCheckoutLineItemChange(value[key] as Checkout, oldValue?.[key])));\n\n/**\n * Add to cart/remove from cart, cart updated events.\n */\nexport const handleCheckoutLineItemChange = (checkout: Checkout, oldCheckout: Checkout) => {\n  // get new and old line items.\n  const newLineItems = (checkout as Checkout)?.line_items?.data || [];\n  const oldLineItems = (oldCheckout as Checkout)?.line_items?.data || [];\n\n  // check for added items or quantity changed\n  newLineItems.forEach(newItem => {\n    const oldItem = oldLineItems.find(item => item.id === newItem.id);\n    // an item was added, or the quantity changed.\n    if (!oldItem || oldItem?.quantity < newItem?.quantity) {\n      const event = new CustomEvent<LineItem>('scAddedToCart', {\n        detail: {\n          ...newItem,\n          quantity: newItem.quantity - (oldItem?.quantity || 0),\n        },\n        bubbles: true,\n      });\n      document.dispatchEvent(event);\n    }\n  });\n\n  // check for removed items or quantity changed\n  oldLineItems.forEach(oldItem => {\n    const newItem = newLineItems.find(item => item.id === oldItem.id);\n    // an item was removed, or the quantity changed.\n    if (!newItem || oldItem?.quantity > newItem?.quantity) {\n      const event = new CustomEvent<LineItem>('scRemovedFromCart', {\n        detail: {\n          ...oldItem,\n          quantity: oldItem.quantity - (newItem?.quantity || 0),\n        },\n        bubbles: true,\n      });\n      document.dispatchEvent(event);\n    }\n  });\n\n  // check if line items have changed.\n  if (!checkoutState?.isCheckoutPage && JSON.stringify(newLineItems) !== JSON.stringify(oldLineItems)) {\n    // emit an event here with the checkout state updates.\n    const event = new CustomEvent<{ currentCart: Checkout; previousCart: Checkout }>('scCartUpdated', {\n      detail: {\n        currentCart: checkout,\n        previousCart: oldCheckout,\n      },\n      bubbles: true,\n    });\n    document.dispatchEvent(event);\n  }\n};\n\n/**\n * Handle view cart event.\n */\nonUIChange('set', (key: string, newValue: { open: boolean }, oldValue: { open: boolean }) => {\n  if (key !== 'cart') return; // we only care about cart.\n  if (newValue?.open === oldValue?.open) return; // we only care about open state changes.\n\n  if (newValue?.open) {\n    const event = new CustomEvent('scViewedCart', {\n      detail: checkoutState.checkout,\n      bubbles: true,\n    });\n    document.dispatchEvent(event);\n  }\n});\n"]}