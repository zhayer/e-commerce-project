{"version":3,"file":"getters.js","sourceRoot":"","sources":["../../../src/store/upsell/getters.ts"],"names":[],"mappings":"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","sourcesContent":["import { state } from './store';\n\n/**\n * Is it busy\n */\nexport const isBusy = () => ['loading', 'busy', 'redirecting'].includes(state.loading);\n\n/**\n * Get the exit url.\n */\nexport const getExitUrl = () => state?.checkout?.metadata?.success_url || state.success_url || null;\n\n/**\n * Get the discounted amount.\n */\nexport const getDiscountedAmount = amount => state?.line_item?.total_amount ?? amount;\n\n/**\n * Get the scratch amount.\n */\nexport const getScratchAmount = amount => (!state?.line_item?.total_savings_amount ? amount : -state?.line_item?.total_savings_amount + state?.line_item?.total_amount);\n\n/**\n * Get upsell remaining time.\n */\nexport const getUpsellRemainingTime = (timeFormat = 'seconds') => {\n  // Get upsell expiration timestamp from checkout.\n  const expiresAt = state.checkout?.upsells_expire_at; // in seconds\n\n  // If no expiration timestamp, return 0.\n  if (!expiresAt) return null;\n\n  // Get current timestamp.\n  const now = Date.now();\n\n  // Get remaining time in seconds.\n  const remaining = Math.floor((expiresAt * 1000 - now) / 1000);\n\n  // If remaining time is less than 0, return 0.\n  if (remaining < 0) return 0;\n\n  // Check time format - seconds, minues, hours.\n  if (timeFormat === 'seconds') return remaining;\n  if (timeFormat === 'minutes') return Math.floor(remaining / 60);\n  if (timeFormat === 'hours') return Math.floor(remaining / 60 / 60);\n};\n\n/**\n * Format time unit - add a zero if unit is less than 10.\n */\nexport const formatTimeUnit = unit => (unit < 10 ? `0${unit}` : `${unit}`);\n\n/**\n * Get formatted remaining time.\n */\nexport const getFormattedRemainingTime = () => {\n  // not loaded.\n  if (!state.checkout?.upsells_expire_at) return '--:--';\n\n  const time = getUpsellRemainingTime('seconds');\n\n  const days = Math.floor(time / (60 * 60 * 24));\n  const hours = Math.floor((time % (60 * 60 * 24)) / (60 * 60));\n  const minutes = Math.floor((time % (60 * 60)) / 60);\n  const seconds = Math.floor(time % 60);\n\n  if (days > 0) {\n    return `${formatTimeUnit(days)}:${formatTimeUnit(hours)}:${formatTimeUnit(minutes)}:${formatTimeUnit(seconds)}`;\n  }\n  if (hours > 0) {\n    return `${formatTimeUnit(hours)}:${formatTimeUnit(minutes)}:${formatTimeUnit(seconds)}`;\n  }\n  return `${formatTimeUnit(minutes)}:${formatTimeUnit(seconds)}`;\n};\n\n/**\n * Is upsell expired.\n */\nexport const isUpsellExpired = () => {\n  // Get remaining time in seconds.\n  const remaining = getUpsellRemainingTime();\n\n  // Make sure we wait until it's set.\n  return getUpsellRemainingTime() === null ? false : remaining <= 0;\n};\n"]}