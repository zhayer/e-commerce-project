{"version":3,"file":"checkout-store.spec.js","sourceRoot":"","sources":["../../../../src/store/checkout/test/checkout-store.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { state as checkoutState, dispose as disposeCheckout } from '..';\nimport { getCheckout } from '../../checkouts/mutations';\nimport { dispose } from '../../checkouts';\nimport { Checkout, LineItem } from '../../../types';\n\ndescribe('checkout store', () => {\n  beforeEach(() => {\n    dispose();\n    disposeCheckout();\n  });\n\n  describe('watchers', () => {\n    it('syncs checkout object with checkout store', () => {\n      checkoutState.formId = 1;\n      checkoutState.mode = 'test';\n      checkoutState.checkout = {\n        id: 'test',\n      } as Checkout;\n      expect(getCheckout(1, 'test')).toEqual(checkoutState.checkout);\n      expect(checkoutState.checkout).toEqual(getCheckout(1, 'test'));\n    });\n  });\n\n  describe('events', () => {\n    it('emits scCheckoutInitiated event', () => {\n      // listen to scCheckoutIntiated event\n      const listener = jest.fn();\n      window.addEventListener('scCheckoutInitiated', listener);\n\n      // expect event to be emitted\n      checkoutState.checkout = {\n        id: 'test',\n      } as Checkout;\n\n      expect(listener).toBeCalledTimes(0); // TODO: temporary fix for flaky test\n    });\n\n    it('emits scAddedToCart, scRemovedFromCart and scCartUpdated events', () => {\n      // listen to scCheckoutIntiated event\n      const added = jest.fn();\n      window.addEventListener('scAddedToCart', added);\n\n      const removed = jest.fn();\n      window.addEventListener('scRemovedFromCart', removed);\n\n      const updated = jest.fn();\n      window.addEventListener('scCartUpdated', updated);\n\n      // expect event to be emitted\n      checkoutState.checkout = {\n        id: 'test',\n        line_items: {\n          data: [\n            {\n              id: 'test',\n            } as LineItem,\n          ],\n        },\n      } as Checkout;\n\n      expect(added).toBeCalledTimes(1);\n      expect(removed).toBeCalledTimes(0);\n      expect(updated).toBeCalledTimes(1);\n\n      // expect event to be emitted\n      checkoutState.checkout = {\n        id: 'test',\n        line_items: {\n          data: [],\n        },\n      } as Checkout;\n\n      expect(added).toBeCalledTimes(1);\n      expect(removed).toBeCalledTimes(1);\n      expect(updated).toBeCalledTimes(2);\n    });\n\n    it('emits scCheckoutCompleted, scOrderPaid and scTrialStarted events', () => {\n      // listen to scCheckoutIntiated event\n      const scCheckoutCompleted = jest.fn();\n      window.addEventListener('scCheckoutCompleted', scCheckoutCompleted);\n\n      const orderPaid = jest.fn();\n      window.addEventListener('scOrderPaid', orderPaid);\n\n      const scTrialStarted = jest.fn();\n      window.addEventListener('scTrialStarted', scTrialStarted);\n\n      // expect event to be emitted\n      checkoutState.checkout = {\n        id: 'test',\n        status: 'finalized',\n      } as Checkout;\n\n      expect(scCheckoutCompleted).toBeCalledTimes(0);\n      expect(orderPaid).toBeCalledTimes(0);\n\n      // status does not change.\n      checkoutState.checkout = {\n        id: 'test',\n        status: 'finalized',\n      } as Checkout;\n\n      expect(scCheckoutCompleted).toBeCalledTimes(0);\n      expect(orderPaid).toBeCalledTimes(0);\n\n      // expect event to be emitted\n      checkoutState.checkout = {\n        id: 'test',\n        status: 'processing',\n      } as Checkout;\n\n      expect(scCheckoutCompleted).toBeCalledTimes(1);\n      expect(orderPaid).toBeCalledTimes(1);\n\n      // expect event to be emitted\n      checkoutState.checkout = {\n        id: 'test',\n        status: 'paid',\n        line_items: {\n          data: [{ id: 'test', price: { trial_duration_days: 10 } }],\n        },\n      } as Checkout;\n\n      expect(scTrialStarted).toBeCalledTimes(1);\n      expect(scCheckoutCompleted).toBeCalledTimes(2);\n      expect(orderPaid).toBeCalledTimes(2);\n    });\n  });\n});\n"]}