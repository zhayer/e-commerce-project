{"version":3,"file":"watchers.js","sourceRoot":"","sources":["../../../src/store/product-donation/watchers.ts"],"names":[],"mappings":"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","sourcesContent":["import { getValidAdHocAmount } from './getters';\nimport { updateLineItem } from './mutations';\nimport state, { on, set } from './store';\nimport { onChange } from '../checkout/store';\nimport { isInRange } from '../../functions/util';\nimport { getLineItemByProductId } from '@store/checkout/getters';\n\n// when the checkout changes, update the selected price and ad hoc amount\nonChange('checkout', () => {\n  Object.keys(state).forEach(productId => {\n    const lineItem = getLineItemByProductId(productId);\n\n    // line item is updated, update the store\n    if (lineItem) {\n      return set(productId, {\n        ...state[productId],\n        selectedPrice: lineItem.price,\n        ad_hoc_amount: lineItem.ad_hoc_amount,\n        custom_amount: (state[productId].amounts || [])?.includes(lineItem.ad_hoc_amount) ? null : lineItem.ad_hoc_amount,\n      });\n    }\n\n    // line item is deleted, reset the store\n    set(productId, {\n      ...state[productId],\n      selectedPrice: null,\n      ad_hoc_amount: null,\n      custom_amount: null,\n    });\n  });\n});\n\n// for each product\nObject.keys(state).forEach(productId => {\n  // when the product is updated\n  on('set', (prop, val, prev) => {\n    // if the product is the one we're looking for\n    if (prop !== productId) return;\n    // It's been cleared.\n    if (!val?.selectedPrice && !val?.ad_hoc_amount && !val?.custom_amount) return;\n    // and the selectedPrice has changed\n    if (val?.selectedPrice?.id !== prev?.selectedPrice?.id || val?.ad_hoc_amount !== prev?.ad_hoc_amount || val?.custom_amount !== prev?.custom_amount) {\n      // use custom amount if it's in range, otherwise use the first valid amount\n      const ad_hoc_amount = val?.custom_amount && isInRange(val?.custom_amount, val.selectedPrice) ? val?.custom_amount : getValidAdHocAmount(productId);\n      const price = val.selectedPrice?.id || val.product?.prices?.data.find(price => price?.ad_hoc)?.id;\n      // if there's no price, return\n      if (!price) return;\n      // update the line item\n      updateLineItem(productId, {\n        price,\n        quantity: 1, // quantity should always be 1.\n        ad_hoc_amount,\n      });\n    }\n  });\n});\n"]}