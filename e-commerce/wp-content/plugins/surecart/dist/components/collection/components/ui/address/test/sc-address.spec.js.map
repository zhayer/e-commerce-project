{"version":3,"file":"sc-address.spec.js","sourceRoot":"","sources":["../../../../../src/components/ui/address/test/sc-address.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { ScAddress } from '../sc-address';\n\ndescribe('sc-address', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [ScAddress],\n      html: `<sc-address></sc-address>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders loading', async () => {\n    const page = await newSpecPage({\n      components: [ScAddress],\n      html: `<sc-address loading=\"true\"></sc-address>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders US address fields', async () => {\n    const page = await newSpecPage({\n      components: [ScAddress],\n      template: () => <sc-address address={{ country: 'US', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' }}></sc-address>,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders CA address fields', async () => {\n    const page = await newSpecPage({\n      components: [ScAddress],\n      template: () => <sc-address address={{ country: 'CA', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' }}></sc-address>,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders EU address fields', async () => {\n    const page = await newSpecPage({\n      components: [ScAddress],\n      template: () => <sc-address address={{ country: 'UK', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' }}></sc-address>,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('shows the name field if showName is true', async () => {\n    const page = await newSpecPage({\n      components: [ScAddress],\n      template: () => <sc-address showName={true}></sc-address>,\n    });\n    expect(page.root).toMatchSnapshot();\n  })\n\n\n  it('shows and requires name if requireName is true', async () => {\n    const page = await newSpecPage({\n      components: [ScAddress],\n      template: () => <sc-address requireName={true}></sc-address>,\n    });\n    expect(page.root).toMatchSnapshot();\n  })\n});\n"]}