{"version":3,"file":"sc-payment-methods-list.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/payment-methods-list/sc-payment-methods-list.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, h, Prop, State, Watch } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '../../../../functions/fetch';\nimport { Customer, PaymentMethod } from '../../../../types';\nimport { onFirstVisible } from '../../../../functions/lazy';\n\n@Component({\n  tag: 'sc-payment-methods-list',\n  styleUrl: 'sc-payment-methods-list.scss',\n  shadow: true,\n})\nexport class ScPaymentMethodsList {\n  @Element() el: HTMLScPaymentMethodsListElement;\n\n  /** Query to fetch paymentMethods */\n  @Prop() query: object;\n\n  /** The heading */\n  @Prop() heading: string;\n\n  /** Is this a customer */\n  @Prop() isCustomer: boolean;\n\n  /** Whether default payment method can be detached */\n  @Prop() canDetachDefaultPaymentMethod: boolean = false;\n\n  /** Loaded payment methods */\n  @State() paymentMethods: Array<PaymentMethod> = [];\n\n  /** Loading state */\n  @State() loading: boolean;\n  @State() busy: boolean;\n\n  /** Error message */\n  @State() error: string;\n\n  /** Does this have a title slot */\n  @State() hasTitleSlot: boolean;\n\n  /** Stores the currently selected payment method for editing */\n  @State() editPaymentMethod: PaymentMethod | false = false;\n\n  /** Stores the currently selected payment method for editing */\n  @State() deletePaymentMethod: PaymentMethod | false = false;\n\n  /** Whether to cascade default payment method */\n  @State() cascadeDefaultPaymentMethod: boolean = false;\n\n  /** Only fetch if visible */\n  componentWillLoad() {\n    onFirstVisible(this.el, () => this.getPaymentMethods());\n    this.handleSlotChange();\n  }\n\n  handleSlotChange() {\n    this.hasTitleSlot = !!this.el.querySelector('[slot=\"title\"]');\n  }\n\n  /**\n   * Delete the payment method.\n   */\n  async deleteMethod() {\n    if (!this.deletePaymentMethod) return;\n    try {\n      this.busy = true;\n      (await apiFetch({\n        path: `surecart/v1/payment_methods/${this.deletePaymentMethod?.id}/detach`,\n        method: 'PATCH',\n      })) as PaymentMethod;\n      // remove from view.\n      this.paymentMethods = this.paymentMethods.filter(m => m.id !== (this.deletePaymentMethod as PaymentMethod)?.id);\n      this.deletePaymentMethod = false;\n    } catch (e) {\n      alert(e?.messsage || __('Something went wrong', 'surecart'));\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  /**\n   * Set the default payment method.\n   */\n  async setDefault() {\n    if (!this.editPaymentMethod) return;\n    try {\n      this.error = '';\n      this.busy = true;\n      (await apiFetch({\n        path: `surecart/v1/customers/${(this.editPaymentMethod?.customer as Customer)?.id}`,\n        method: 'PATCH',\n        data: {\n          default_payment_method: this.editPaymentMethod?.id,\n          cascade_default_payment_method: this.cascadeDefaultPaymentMethod,\n        },\n      })) as PaymentMethod;\n      this.editPaymentMethod = false;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n\n    try {\n      this.busy = true;\n      this.paymentMethods = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/payment_methods/`, {\n          expand: ['card', 'customer', 'billing_agreement', 'paypal_account', 'payment_instrument', 'bank_account'],\n          ...this.query,\n        }),\n      })) as PaymentMethod[];\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  /** Get all paymentMethods */\n  async getPaymentMethods() {\n    if (!this.isCustomer) {\n      return;\n    }\n\n    try {\n      this.loading = true;\n      this.paymentMethods = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/payment_methods/`, {\n          expand: ['card', 'customer', 'billing_agreement', 'paypal_account', 'payment_instrument', 'bank_account'],\n          ...this.query,\n          per_page: 100,\n        }),\n      })) as PaymentMethod[];\n    } catch (e) {\n      console.error(this.error);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  renderLoading() {\n    return (\n      <sc-card noPadding>\n        <sc-stacked-list>\n          <sc-stacked-list-row style={{ '--columns': '4' }} mobile-size={500}>\n            {[...Array(4)].map(() => (\n              <sc-skeleton style={{ width: '100px', display: 'inline-block' }}></sc-skeleton>\n            ))}\n          </sc-stacked-list-row>\n        </sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <div>\n        <sc-divider style={{ '--spacing': '0' }}></sc-divider>\n        <slot name=\"empty\">\n          <sc-empty icon=\"credit-card\">{__(\"You don't have any saved payment methods.\", 'surecart')}</sc-empty>\n        </slot>\n      </div>\n    );\n  }\n\n  renderPaymentMethodActions(paymentMethod: PaymentMethod) {\n    const { id, customer } = paymentMethod;\n\n    // If this is a string, don't show the actions.\n    if (typeof customer === 'string') return;\n\n    // If this is the default payment method and it cannot be detached, don't show the actions.\n    if (customer.default_payment_method === id && !this.canDetachDefaultPaymentMethod) return;\n\n    return (\n      <sc-dropdown placement=\"bottom-end\" slot=\"suffix\">\n        <sc-icon role=\"button\" tabIndex={0} name=\"more-horizontal\" slot=\"trigger\"></sc-icon>\n        <sc-menu>\n          {customer.default_payment_method !== id && <sc-menu-item onClick={() => (this.editPaymentMethod = paymentMethod)}>{__('Make Default', 'surecart')}</sc-menu-item>}\n          <sc-menu-item onClick={() => (this.deletePaymentMethod = paymentMethod)}>{__('Delete', 'surecart')}</sc-menu-item>\n        </sc-menu>\n      </sc-dropdown>\n    );\n  }\n\n  renderList() {\n    return this.paymentMethods.map(paymentMethod => {\n      const { id, card, customer, live_mode, billing_agreement, paypal_account } = paymentMethod;\n      return (\n        <sc-stacked-list-row style={{ '--columns': billing_agreement ? '2' : '3' }}>\n          <sc-payment-method paymentMethod={paymentMethod} />\n\n          <div class=\"payment-id\">\n            {!!card?.exp_month && (\n              <span>\n                {__('Exp.', 'surecart')}\n                {card?.exp_month}/{card?.exp_year}\n              </span>\n            )}\n            {!!paypal_account && paypal_account?.email}\n          </div>\n\n          <sc-flex justify-content=\"flex-start\" align-items=\"center\" style={{ '--spacing': '0.5em', 'marginLeft': 'auto' }}>\n            {typeof customer !== 'string' && customer?.default_payment_method === id && <sc-tag type=\"info\">{__('Default', 'surecart')}</sc-tag>}\n            {!live_mode && <sc-tag type=\"warning\">{__('Test', 'surecart')}</sc-tag>}\n          </sc-flex>\n          {this.renderPaymentMethodActions(paymentMethod)}\n        </sc-stacked-list-row>\n      );\n    });\n  }\n\n  renderContent() {\n    if (!this.isCustomer) {\n      return this.renderEmpty();\n    }\n\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    if (this.paymentMethods?.length === 0) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <sc-card no-padding>\n        <sc-stacked-list>{this.renderList()}</sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  @Watch('editPaymentMethod')\n  handleEditPaymentMethodChange() {\n    // reset when payment method edit changes\n    this.cascadeDefaultPaymentMethod = false;\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module class=\"payment-methods-list\" error={this.error}>\n        <span slot=\"heading\">\n          <slot name=\"heading\">{this.heading || __('Payment Methods', 'surecart')}</slot>\n        </span>\n\n        {this.isCustomer && (\n          <sc-flex slot=\"end\">\n            <sc-button\n              type=\"link\"\n              href={addQueryArgs(window.location.href, {\n                action: 'index',\n                model: 'charge',\n              })}\n            >\n              <sc-icon name=\"clock\" slot=\"prefix\"></sc-icon>\n              {__('Payment History', 'surecart')}\n            </sc-button>\n            <sc-button\n              type=\"link\"\n              href={addQueryArgs(window.location.href, {\n                action: 'create',\n                model: 'payment_method',\n              })}\n            >\n              <sc-icon name=\"plus\" slot=\"prefix\"></sc-icon>\n              {__('Add', 'surecart')}\n            </sc-button>\n          </sc-flex>\n        )}\n\n        {this.renderContent()}\n\n        <sc-dialog open={!!this.editPaymentMethod} label={__('Update Default Payment Method', 'surecart')} onScRequestClose={() => (this.editPaymentMethod = false)}>\n          <sc-alert type=\"danger\" open={!!this.error}>\n            {this.error}\n          </sc-alert>\n          <sc-flex flexDirection=\"column\" style={{ '--sc-flex-column-gap': 'var(--sc-spacing-small)' }}>\n            <sc-alert type=\"info\" open>\n              {__('A default payment method will be used as a fallback in case other payment methods get removed from a subscription.', 'surecart')}\n            </sc-alert>\n            <sc-switch checked={this.cascadeDefaultPaymentMethod} onScChange={e => (this.cascadeDefaultPaymentMethod = e.target.checked)}>\n              {__('Update All Subscriptions', 'surecart')}\n              <span slot=\"description\">{__('Update all existing subscriptions to use this payment method', 'surecart')}</span>\n            </sc-switch>\n          </sc-flex>\n          <div slot=\"footer\">\n            <sc-button type=\"text\" onClick={() => (this.editPaymentMethod = false)}>\n              {__('Cancel', 'surecart')}\n            </sc-button>\n            <sc-button type=\"primary\" onClick={() => this.setDefault()}>\n              {__('Make Default', 'surecart')}\n            </sc-button>\n          </div>\n          {this.busy && <sc-block-ui spinner></sc-block-ui>}\n        </sc-dialog>\n\n        <sc-dialog open={!!this.deletePaymentMethod} label={__('Delete Payment Method', 'surecart')} onScRequestClose={() => (this.deletePaymentMethod = false)}>\n          <sc-alert type=\"danger\" open={!!this.error}>\n            {this.error}\n          </sc-alert>\n          <sc-text>{__('Are you sure you want to remove this payment method?', 'surecart')}</sc-text>\n          <div slot=\"footer\">\n            <sc-button type=\"text\" onClick={() => (this.deletePaymentMethod = false)}>\n              {__('Cancel', 'surecart')}\n            </sc-button>\n            <sc-button type=\"primary\" onClick={() => this.deleteMethod()}>\n              {__('Delete', 'surecart')}\n            </sc-button>\n          </div>\n          {this.busy && <sc-block-ui spinner></sc-block-ui>}\n        </sc-dialog>\n\n        {this.busy && <sc-block-ui spinner></sc-block-ui>}\n      </sc-dashboard-module>\n    );\n  }\n}\n"]}