{"version":3,"file":"sc-custom-order-price-input.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/custom-order-price-input/sc-custom-order-price-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Event, EventEmitter, h, Host, Listen, Prop, State, Watch } from '@stencil/core';\nimport { LineItem, LineItemData, Price } from '../../../../types';\nimport apiFetch from '../../../../functions/fetch';\nimport { openWormhole } from 'stencil-wormhole';\nimport { __ } from '@wordpress/i18n';\n\n@Component({\n  tag: 'sc-custom-order-price-input',\n  styleUrl: 'sc-custom-order-price-input.css',\n  shadow: false,\n})\nexport class ScCustomOrderPriceInput {\n  /** Id of the price. */\n  @Prop({ reflect: true }) priceId: string;\n\n  /** Stores the price */\n  @Prop({ mutable: true }) price: Price;\n\n  /** Is this loading */\n  @Prop() loading: boolean = false;\n\n  /** Is this busy */\n  @Prop() busy: boolean = false;\n\n  /** Label for the field. */\n  @Prop() label: string;\n\n  /** Input placeholder. */\n  @Prop() placeholder: string;\n\n  /** Is this required? */\n  @Prop() required: boolean;\n\n  /** Help text. */\n  @Prop() help: string;\n\n  /** Show the currency code? */\n  @Prop({ reflect: true }) showCode: boolean;\n\n  /** Label for the choice. */\n  @Prop() lineItems: LineItem[] = [];\n\n  /** Internal fetching state. */\n  @State() fetching: boolean = false;\n\n  /** Holds the line item for this component. */\n  @State() lineItem: LineItem;\n\n  /** Toggle line item event */\n  @Event() scUpdateLineItem: EventEmitter<LineItemData>;\n\n  @Listen('scBlur')\n  handleBlur(e) {\n    const ad_hoc_amount = parseInt(e.target.value);\n    if (isNaN(ad_hoc_amount)) return;\n    if (this.lineItem?.ad_hoc_amount === ad_hoc_amount) return;\n\n    this.scUpdateLineItem.emit({ price_id: this.priceId, quantity: 1, ad_hoc_amount });\n  }\n\n  /** Store current line item in state. */\n  @Watch('lineItems')\n  handleLineItemsChange() {\n    if (!this.lineItems?.length) return;\n    this.lineItem = (this.lineItems || []).find(lineItem => lineItem.price.id === this.priceId);\n  }\n\n  componentDidLoad() {\n    if (!this.price) {\n      this.fetchPrice();\n    }\n  }\n\n  /** Fetch prices and products */\n  async fetchPrice() {\n    if (!this.priceId) return;\n    try {\n      this.fetching = true;\n      this.price = (await apiFetch({\n        path: `surecart/v1/prices/${this.priceId}`,\n      })) as Price;\n    } catch (err) {\n    } finally {\n      this.fetching = false;\n    }\n  }\n\n  renderEmpty() {\n    if (window?.wp?.blocks) {\n      return (\n        <sc-alert type=\"danger\" open style={{ margin: '0px' }}>\n          {__('This price has been archived.', 'surecart')}\n        </sc-alert>\n      );\n    }\n    return <Host style={{ display: 'none' }}></Host>;\n  }\n\n  render() {\n    if (this.loading || this.fetching) {\n      return (\n        <div>\n          <sc-skeleton style={{ width: '20%', marginBottom: '0.75em' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '100%' }}></sc-skeleton>\n        </div>\n      );\n    }\n\n    // Price needs to be active.\n    if (!this?.price?.id || this.price?.archived) return this.renderEmpty();\n\n    return (\n      <div class=\"sc-custom-order-price-input\">\n        <sc-price-input\n          currency-code={this.price?.currency || 'usd'}\n          label={this.label}\n          min={this?.price?.ad_hoc_min_amount}\n          max={this?.price?.ad_hoc_max_amount}\n          placeholder={this.placeholder}\n          required={this.required}\n          value={this.lineItem?.ad_hoc_amount.toString()}\n          show-code={this.showCode}\n          help={this.help}\n        ></sc-price-input>\n\n        {this.busy && <sc-block-ui style={{ zIndex: '9' }}></sc-block-ui>}\n      </div>\n    );\n  }\n}\n\nopenWormhole(ScCustomOrderPriceInput, ['busy', 'lineItems'], false);\n"]}