{"version":3,"file":"sc-order-confirmation.js","sourceRoot":"","sources":["../../../../../src/components/controllers/confirmation/order-confirmation/sc-order-confirmation.tsx"],"names":[],"mappings":"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","sourcesContent":["import apiFetch from '../../../../functions/fetch';\nimport { Checkout, ManualPaymentMethod } from '../../../../types';\nimport { Component, State, h, Prop } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs, getQueryArg } from '@wordpress/url';\nimport { Universe } from 'stencil-wormhole';\n\n@Component({\n  tag: 'sc-order-confirmation',\n  styleUrl: 'sc-order-confirmation.css',\n  shadow: true,\n})\nexport class ScOrderConfirmation {\n  @Prop({ mutable: true }) order: Checkout;\n\n  /** Loading */\n  @State() loading: boolean = false;\n\n  /** Error */\n  @State() error: string;\n\n  componentWillLoad() {\n    // @ts-ignore\n    Universe.create(this, this.state());\n    // get teh session\n    this.getSession();\n  }\n\n  /** Get session id from url. */\n  getSessionId() {\n    if (this.order?.id) return this.order.id;\n    return getQueryArg(window.location.href, 'sc_order');\n  }\n\n  /** Update a session */\n  async getSession() {\n    if (!this.getSessionId()) return;\n    if (this.order?.id) return;\n    try {\n      this.loading = true;\n      this.order = (await await apiFetch({\n        path: addQueryArgs(`surecart/v1/checkouts/${this.getSessionId()}`, {\n          expand: [\n            'line_items',\n            'line_item.price',\n            'line_item.fees',\n            'price.product',\n            'customer',\n            'customer.shipping_address',\n            'payment_intent',\n            'discount',\n            'manual_payment_method',\n            'discount.promotion',\n            'billing_address',\n            'shipping_address',\n          ],\n          refresh_status: true,\n        }),\n      })) as Checkout;\n    } catch (e) {\n      if (e?.message) {\n        this.error = e.message;\n      } else {\n        this.error = __('Something went wrong', 'surecart');\n      }\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  state() {\n    const manualPaymentMethod = this.order?.manual_payment_method as ManualPaymentMethod;\n    return {\n      processor: 'stripe',\n      loading: this.loading,\n      orderId: this.getSessionId(),\n      order: this.order,\n      customer: this.order?.customer,\n      manualPaymentTitle: manualPaymentMethod?.name,\n      manualPaymentInstructions: manualPaymentMethod?.instructions,\n    };\n  }\n\n  renderOnHold() {\n    if (this.order?.status !== 'processing') return null;\n    if (this?.order?.payment_intent?.processor_type === 'paypal') {\n      return (\n        <sc-alert type=\"warning\" open={true}>\n          {__('Paypal is taking a closer look at this payment. Itâ€™s required for some payments and normally takes up to 3 business days.', 'surecart')}\n        </sc-alert>\n      );\n    }\n  }\n\n  renderManualInstructions() {\n    const paymentMethod = this.order?.manual_payment_method as ManualPaymentMethod;\n    if (!paymentMethod?.instructions) return;\n    return (\n      <sc-alert type=\"info\" open>\n        <span slot=\"title\">{paymentMethod?.name}</span>\n        <div innerHTML={paymentMethod?.instructions}></div>\n      </sc-alert>\n    );\n  }\n\n  render() {\n    return (\n      <Universe.Provider state={this.state()}>\n        <div class={{ 'order-confirmation': true }}>\n          <div\n            class={{\n              'order-confirmation__content': true,\n              'hidden': !this.order?.id && !this.loading,\n            }}\n          >\n            <sc-order-confirm-components-validator checkout={this.order}>\n              <slot />\n            </sc-order-confirm-components-validator>\n          </div>\n\n          {!this.order?.id && !this.loading && (\n            <sc-heading>\n              {__('Order not found.', 'surecart')}\n              <span slot=\"description\">{__('This order could not be found. Please try again.', 'surecart')}</span>\n            </sc-heading>\n          )}\n        </div>\n      </Universe.Provider>\n    );\n  }\n}\n"]}