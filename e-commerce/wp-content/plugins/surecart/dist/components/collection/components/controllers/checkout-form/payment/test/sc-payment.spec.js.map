{"version":3,"file":"sc-payment.spec.js","sourceRoot":"","sources":["../../../../../../src/components/controllers/checkout-form/payment/test/sc-payment.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { ScPayment } from '../sc-payment';\nimport { dispose } from '@store/checkouts';\nimport { dispose as disposeSelectedProcessor } from '@store/selected-processor';\nimport { state as checkoutState, dispose as disposeCheckout } from '@store/checkout';\nimport { state as processorsState, dispose as disposeProcessors } from '@store/processors';\nimport { Checkout, Processor } from '../../../../../types';\n\nbeforeEach(() => {\n  dispose();\n  disposeSelectedProcessor();\n  disposeProcessors();\n  disposeCheckout();\n});\n\ndescribe('sc-payment', () => {\n  it('renders no processors & user does not have `manage_sc_shop_settings` capability', async () => {\n    const page = await newSpecPage({\n      components: [ScPayment],\n      html: `<sc-payment></sc-payment>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders no processors & user has `manage_sc_shop_settings` capability', async () => {\n    // Set the mock attribute.\n    global.window = Object.create(window);\n    Object.defineProperty(window, 'scData', {\n      value: {\n        user_permissions: {\n          manage_sc_shop_settings: true,\n        },\n        admin_url: 'https://test.com/',\n      },\n    });\n    const page = await newSpecPage({\n      components: [ScPayment],\n      html: `<sc-payment></sc-payment>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders stripe and paypal with no checkout', async () => {\n    const page = await newSpecPage({\n      components: [ScPayment],\n      html: `<sc-payment></sc-payment>`,\n    });\n\n    processorsState.processors = [\n      {\n        live_mode: true,\n        recurring_enabled: true,\n        processor_type: 'stripe',\n      },\n      {\n        live_mode: true,\n        recurring_enabled: false,\n        processor_type: 'paypal',\n      },\n    ] as Processor[];\n\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('only renders processors with the right mode', async () => {\n    const page = await newSpecPage({\n      components: [ScPayment],\n      html: `<sc-payment></sc-payment>`,\n    });\n\n    processorsState.processors = [\n      {\n        live_mode: true,\n        recurring_enabled: true,\n        processor_type: 'stripe',\n      },\n      {\n        live_mode: false,\n        recurring_enabled: false,\n        processor_type: 'paypal',\n      },\n    ] as Processor[];\n\n    checkoutState.formId = 1;\n    checkoutState.mode = 'test';\n    checkoutState.checkout = {\n      live_mode: false,\n    } as Checkout;\n\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('does not render non-recurring if recurring is required', async () => {\n    const page = await newSpecPage({\n      components: [ScPayment],\n      html: `<sc-payment></sc-payment>`,\n    });\n\n    processorsState.processors = [\n      {\n        live_mode: false,\n        recurring_enabled: true,\n        processor_type: 'stripe',\n      },\n      {\n        live_mode: false,\n        recurring_enabled: false,\n        processor_type: 'paypal',\n      },\n    ] as Processor[];\n\n    checkoutState.formId = 1;\n    checkoutState.mode = 'test';\n    checkoutState.checkout = {\n      live_mode: false,\n      reusable_payment_method_required: true,\n    } as Checkout;\n\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('only renders only mollie component if mollie is active', async () => {\n    const page = await newSpecPage({\n      components: [ScPayment],\n      html: `<sc-payment></sc-payment>`,\n    });\n\n    processorsState.processors = [\n      {\n        id: 'mollieid',\n        live_mode: true,\n        recurring_enabled: true,\n        processor_type: 'mollie',\n      },\n      {\n        live_mode: true,\n        recurring_enabled: true,\n        processor_type: 'stripe',\n      },\n      {\n        live_mode: true,\n        recurring_enabled: false,\n        processor_type: 'paypal',\n      },\n    ] as Processor[];\n\n    checkoutState.formId = 1;\n    checkoutState.mode = 'live';\n    checkoutState.checkout = {\n      live_mode: true,\n    } as Checkout;\n\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders mock processor with stripe', async () => {\n    const page = await newSpecPage({\n      components: [ScPayment],\n      html: `<sc-payment></sc-payment>`,\n    });\n\n    processorsState.processors = [\n      {\n        id: 'stripeid',\n        live_mode: false,\n        recurring_enabled: true,\n        processor_type: 'stripe',\n      },\n      {\n        id: 'mockid',\n        live_mode: false,\n        recurring_enabled: true,\n        processor_type: 'mock',\n      },\n    ] as Processor[];\n\n    checkoutState.formId = 1;\n    checkoutState.mode = 'test';\n    checkoutState.checkout = {\n      live_mode: false,\n    } as Checkout;\n\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}