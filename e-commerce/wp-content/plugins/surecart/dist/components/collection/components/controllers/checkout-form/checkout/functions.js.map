{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/checkout/functions.ts"],"names":[],"mappings":"AAEA,2CAA2C;AAC3C,MAAM,CAAC,MAAM,SAAS,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE;;IACpC,MAAM,IAAI,GAAG,MAAA,MAAA,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,0CAAE,UAAU,0CAAE,aAAa,CAAC,MAAM,CAAoB,CAAC;IAC/F,IAAI,CAAC,IAAI;QAAE,OAAO;IAClB,OAAO,IAAI;SACR,gBAAgB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;SACnC,MAAM,CAAC,CAAC,GAAkB,EAAE,EAAe,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAkB,CAAC,EAAE,EAAE,CAAC;SACnH,IAAI,CAAC,CAAC,EAAoB,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAgB,CAAC;AACrE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,EAAE,EAAE,KAAe,EAAE,EAAE;IAClD,kCAAkC;IAClC,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAEhC,yBAAyB;IACzB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QACnB,MAAM,KAAK,GAAG,SAAS,CAAC,EAAE,EAAE,IAAI,CAAQ,CAAC;QACzC,IAAI,CAAC,KAAK;YAAE,OAAO;QACnB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,mBAAmB;IACnB,MAAM,CAAC,IAAI,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,KAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAC/C,MAAM,KAAK,GAAG,SAAS,CAAC,EAAE,EAAE,GAAG,CAAQ,CAAC;QACxC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Checkout } from '../../../../types';\n\n// find the input based on the unique name.\nexport const findInput = (el, name) => {\n  const slot = el.querySelector('sc-form')?.shadowRoot?.querySelector('slot') as HTMLSlotElement;\n  if (!slot) return;\n  return slot\n    .assignedElements({ flatten: true })\n    .reduce((all: HTMLElement[], el: HTMLElement) => all.concat(el, [...el.querySelectorAll('*')] as HTMLElement[]), [])\n    .find((el: HTMLInputElement) => el.name === name) as HTMLElement;\n};\n\nexport const handleInputs = (el, order: Checkout) => {\n  // handle our own built-in inputs.\n  const names = ['name', 'email'];\n\n  // handle our our inputs.\n  names.forEach(name => {\n    const input = findInput(el, name) as any;\n    if (!input) return;\n    input.value = order[name];\n  });\n\n  // update metadata.\n  Object.keys(order?.metadata || {}).forEach(key => {\n    const input = findInput(el, key) as any;\n    input.value = order.metadata[key];\n  });\n};\n"]}