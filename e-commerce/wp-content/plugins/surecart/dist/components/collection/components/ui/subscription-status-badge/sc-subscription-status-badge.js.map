{"version":3,"file":"sc-subscription-status-badge.js","sourceRoot":"","sources":["../../../../src/components/ui/subscription-status-badge/sc-subscription-status-badge.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Fragment, h, Prop } from '@stencil/core';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Subscription, SubscriptionStatus } from '../../../types';\n\n@Component({\n  tag: 'sc-subscription-status-badge',\n  styleUrl: 'sc-subscription-status-badge.css',\n  shadow: true,\n})\nexport class ScSubscriptionStatusBadge {\n  /** Subscription status */\n  @Prop() status: SubscriptionStatus;\n\n  /** The tag's status type. */\n  @Prop() subscription: Subscription;\n\n  /** The tag's size. */\n  @Prop({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Draws a pill-style tag with rounded edges. */\n  @Prop({ reflect: true }) pill: boolean = false;\n\n  /** Makes the tag clearable. */\n  @Prop() clearable: boolean = false;\n\n  getType() {\n    if (this.subscription?.cancel_at_period_end) {\n      return 'info';\n    }\n    switch (this.status || this.subscription?.status) {\n      case 'incomplete':\n        return 'warning';\n      case 'trialing':\n        return 'info';\n      case 'active':\n        return 'success';\n      case 'completed':\n        return 'success';\n      case 'past_due':\n        return 'warning';\n      case 'canceled':\n        if (this.subscription?.restore_at) {\n          return 'info';\n        }\n        return 'danger';\n      case 'unpaid':\n        return 'warning';\n    }\n  }\n\n  getText() {\n    if (this.subscription?.cancel_at_period_end && this.subscription.current_period_end_at && this.subscription?.status !== 'canceled') {\n      return (\n        <Fragment>\n          {!!this.subscription?.restore_at ? __('Pauses', 'surecart') : __('Cancels', 'surecart')} {this.subscription.current_period_end_at_date}\n        </Fragment>\n      );\n    }\n    switch (this.status || this.subscription?.status) {\n      case 'incomplete':\n        return __('Incomplete', 'surecart');\n      case 'trialing':\n        return __('Trialing', 'surecart');\n      case 'active':\n        return __('Active', 'surecart');\n      case 'past_due':\n        return __('Past Due', 'surecart');\n      case 'canceled':\n        if (this.subscription?.restore_at) {\n          return 'Paused';\n        }\n        return __('Canceled', 'surecart');\n      case 'completed':\n        return __('Completed', 'surecart');\n      case 'unpaid':\n        return __('Unpaid', 'surecart');\n    }\n  }\n\n  render() {\n    return (\n      <sc-tag aria-label={sprintf(__('Plan Status - %s', 'surecart'), this.getText())} type={this.getType()}>\n        {this.getText()}\n      </sc-tag>\n    );\n  }\n}\n"]}