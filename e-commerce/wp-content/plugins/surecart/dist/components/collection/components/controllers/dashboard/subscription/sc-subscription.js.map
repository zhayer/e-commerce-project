{"version":3,"file":"sc-subscription.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/subscription/sc-subscription.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Fragment, h, Prop, State } from '@stencil/core';\nimport { sprintf, __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport apiFetch from '../../../../functions/fetch';\nimport { Subscription, SubscriptionProtocol } from '../../../../types';\nimport { onFirstVisible } from '../../../../functions/lazy';\nimport { productNameWithPrice } from '../../../../functions/price';\n@Component({\n  tag: 'sc-subscription',\n  styleUrl: 'sc-subscription.scss',\n  shadow: true,\n})\nexport class ScSubscription {\n  @Element() el: HTMLScSubscriptionsListElement;\n\n  /** The subscription ID */\n  @Prop() subscriptionId: string;\n\n  /** Whether to show the cancel button */\n  @Prop() showCancel: boolean;\n\n  /** Heading to display */\n  @Prop() heading: string;\n\n  /** Query to pass to the API */\n  @Prop() query: object;\n\n  /** The subscription protocol */\n  @Prop() protocol: SubscriptionProtocol;\n\n  /** The subscription */\n  @Prop({ mutable: true }) subscription: Subscription;\n\n  /** Update the payment method url */\n  @Prop() updatePaymentMethodUrl: string;\n\n  /** Loading state */\n  @State() loading: boolean;\n\n  /** Cancel modal */\n  @State() cancelModal: boolean;\n\n  /** Resubscribe modal */\n  @State() resubscribeModal: boolean;\n\n  /**  Busy state */\n  @State() busy: boolean;\n\n  /** Error message */\n  @State() error: string;\n\n  componentWillLoad() {\n    onFirstVisible(this.el, () => {\n      if (!this.subscription) {\n        this.getSubscription();\n      }\n    });\n  }\n\n  async cancelPendingUpdate() {\n    const r = confirm(__('Are you sure you want to cancel the pending update to your plan?', 'surecart'));\n    if (!r) return;\n    try {\n      this.busy = true;\n      this.subscription = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/subscriptions/${this.subscription?.id}/`, {\n          expand: ['price', 'price.product', 'current_period', 'period.checkout', 'purchase', 'purchase.license', 'license.activations', 'discount', 'discount.coupon'],\n        }),\n        method: 'PATCH',\n        data: {\n          purge_pending_update: true,\n        },\n      })) as Subscription;\n    } catch (e) {\n      if (e?.message) {\n        this.error = e.message;\n      } else {\n        this.error = __('Something went wrong', 'surecart');\n      }\n      console.error(this.error);\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  async renewSubscription() {\n    try {\n      this.error = '';\n      this.busy = true;\n      this.subscription = (await apiFetch({\n        path: addQueryArgs(`surecart/v1/subscriptions/${this.subscription?.id}/renew`, {\n          expand: ['price', 'price.product', 'current_period', 'period.checkout', 'purchase', 'purchase.license', 'license.activations', 'discount', 'discount.coupon'],\n        }),\n        method: 'PATCH',\n      })) as Subscription;\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  /** Get all subscriptions */\n  async getSubscription() {\n    try {\n      this.loading = true;\n      this.subscription = (await await apiFetch({\n        path: addQueryArgs(`surecart/v1/subscriptions/${this.subscriptionId || this.subscription?.id}`, {\n          expand: ['price', 'price.product', 'current_period'],\n          ...(this.query || {}),\n        }),\n      })) as Subscription;\n    } catch (e) {\n      if (e?.message) {\n        this.error = e.message;\n      } else {\n        this.error = __('Something went wrong', 'surecart');\n      }\n      console.error(this.error);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  renderName(subscription: Subscription) {\n    if (typeof subscription?.price?.product !== 'string') {\n      return productNameWithPrice(subscription?.price);\n    }\n    return __('Subscription', 'surecart');\n  }\n\n  renderRenewalText(subscription) {\n    const tag = <sc-subscription-status-badge subscription={subscription}></sc-subscription-status-badge>;\n\n    if (subscription?.cancel_at_period_end && subscription.current_period_end_at) {\n      return (\n        <span>\n          {tag} {' '}\n          {\n            /* translators: %s: current period end date */\n            sprintf(__('Your plan will be canceled on %s', 'surecart'), subscription.current_period_end_at_date)\n          }\n        </span>\n      );\n    }\n    if (subscription.status === 'trialing' && subscription.trial_end_at) {\n      return (\n        <span>\n          {tag} {' '}\n          {\n            /* translators: %s: trial end date */\n            sprintf(__('Your plan begins on %s', 'surecart'), subscription.trial_end_at_date)\n          }\n        </span>\n      );\n    }\n    if (subscription.status === 'active' && subscription.current_period_end_at) {\n      return (\n        <span>\n          {tag} {' '}\n          {\n            /* translators: %s: current period end date */\n            sprintf(__('Your plan renews on %s', 'surecart'), subscription.current_period_end_at_date)\n          }\n        </span>\n      );\n    }\n\n    return tag;\n  }\n\n  renderEmpty() {\n    return <slot name=\"empty\">{__('This subscription does not exist.', 'surecart')}</slot>;\n  }\n\n  renderLoading() {\n    return (\n      <sc-stacked-list-row style={{ '--columns': '2' }} mobile-size={0}>\n        <div style={{ padding: '0.5em' }}>\n          <sc-skeleton style={{ width: '30%', marginBottom: '0.75em' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '20%', marginBottom: '0.75em' }}></sc-skeleton>\n          <sc-skeleton style={{ width: '40%' }}></sc-skeleton>\n        </div>\n      </sc-stacked-list-row>\n    );\n  }\n\n  renderContent() {\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    if (!this.subscription) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <Fragment>\n        <sc-subscription-next-payment subscription={this.subscription} updatePaymentMethodUrl={this.updatePaymentMethodUrl}>\n          <sc-subscription-details subscription={this.subscription}></sc-subscription-details>\n        </sc-subscription-next-payment>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const paymentMethodExists = this?.subscription.payment_method || this?.subscription.manual_payment;\n\n    return (\n      <sc-dashboard-module heading={this.heading || __('Current Plan', 'surecart')} class=\"subscription\" error={this.error}>\n        {!!this.subscription && (\n          <sc-flex slot=\"end\" class=\"subscription__action-buttons\">\n            {this.updatePaymentMethodUrl && paymentMethodExists && (\n              <sc-button type=\"link\" href={this.updatePaymentMethodUrl}>\n                <sc-icon name=\"credit-card\" slot=\"prefix\"></sc-icon>\n                {__('Update Payment Method', 'surecart')}\n              </sc-button>\n            )}\n            {!paymentMethodExists && (\n              <sc-button\n                type=\"link\"\n                href={addQueryArgs(window.location.href, {\n                  action: 'create',\n                  model: 'payment_method',\n                  id: this?.subscription.id,\n                  ...(this?.subscription?.live_mode === false ? { live_mode: false } : {}),\n                })}\n              >\n                <sc-icon name=\"credit-card\" slot=\"prefix\"></sc-icon>\n                {__('Add Payment Method', 'surecart')}\n              </sc-button>\n            )}\n            {!!Object.keys(this.subscription?.pending_update).length && (\n              <sc-button type=\"link\" onClick={() => this.cancelPendingUpdate()}>\n                <sc-icon name=\"x-octagon\" slot=\"prefix\"></sc-icon>\n                {__('Cancel Scheduled Update', 'surecart')}\n              </sc-button>\n            )}\n            {this?.subscription?.cancel_at_period_end ? (\n              <sc-button type=\"link\" onClick={() => this.renewSubscription()}>\n                <sc-icon name=\"repeat\" slot=\"prefix\"></sc-icon>\n                {__('Restore Plan', 'surecart')}\n              </sc-button>\n            ) : (\n              this.subscription?.status !== 'canceled' &&\n              this.subscription?.current_period_end_at &&\n              this.showCancel && (\n                <sc-button type=\"link\" onClick={() => (this.cancelModal = true)}>\n                  <sc-icon name=\"x\" slot=\"prefix\"></sc-icon>\n                  {__('Cancel Plan', 'surecart')}\n                </sc-button>\n              )\n            )}\n            {this.subscription?.status === 'canceled' && (\n              <sc-button\n                type=\"link\"\n                {...(!!this.subscription?.payment_method\n                  ? {\n                    onClick: () => (this.resubscribeModal = true),\n                  }\n                  : {\n                    href: this?.updatePaymentMethodUrl,\n                  })}\n              >\n                <sc-icon name=\"repeat\" slot=\"prefix\"></sc-icon>\n                {__('Resubscribe', 'surecart')}\n              </sc-button>\n            )}\n          </sc-flex>\n        )}\n\n        <sc-card style={{ '--overflow': 'hidden' }} noPadding>\n          {this.renderContent()}\n        </sc-card>\n\n        {this.busy && <sc-block-ui spinner></sc-block-ui>}\n\n        <sc-cancel-dialog\n          subscription={this.subscription}\n          protocol={this.protocol}\n          open={this.cancelModal}\n          onScRequestClose={() => (this.cancelModal = false)}\n          onScRefresh={() => this.getSubscription()}\n        />\n        <sc-subscription-reactivate\n          subscription={this.subscription}\n          open={this.resubscribeModal}\n          onScRequestClose={() => (this.resubscribeModal = false)}\n          onScRefresh={() => this.getSubscription()}\n        />\n      </sc-dashboard-module>\n    );\n  }\n}\n"]}