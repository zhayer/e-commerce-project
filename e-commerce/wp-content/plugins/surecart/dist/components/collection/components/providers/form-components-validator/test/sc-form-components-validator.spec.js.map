{"version":3,"file":"sc-form-components-validator.spec.js","sourceRoot":"","sources":["../../../../../src/components/providers/form-components-validator/test/sc-form-components-validator.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { Checkout, TaxProtocol } from '../../../../types';\nimport { dispose as disposeCheckout, state as checkoutState } from '@store/checkout';\nimport { ScFormComponentsValidator } from '../sc-form-components-validator';\n\ndescribe('sc-form-components-validator', () => {\n  beforeEach(() => {\n    disposeCheckout();\n  });\n\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [ScFormComponentsValidator],\n      html: `<sc-form-components-validator></sc-form-components-validator>`,\n    });\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('appends missing address field if required', async () => {\n    const page = await newSpecPage({\n      components: [ScFormComponentsValidator],\n      template: () => (\n        <sc-form-components-validator>\n          <sc-payment></sc-payment>\n        </sc-form-components-validator>\n      ),\n    });\n    checkoutState.checkout = { tax_status: 'address_invalid' } as Checkout;\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('appends missing tax id input if required', async () => {\n    const page = await newSpecPage({\n      components: [ScFormComponentsValidator],\n      template: () => (\n        <sc-form-components-validator taxProtocol={{ tax_enabled: true, eu_vat_required: true } as TaxProtocol}>\n          <sc-payment></sc-payment>\n        </sc-form-components-validator>\n      ),\n    });\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('appends missing trial line item if required', async () => {\n    const page = await newSpecPage({\n      components: [ScFormComponentsValidator],\n      template: () => (\n        <sc-form-components-validator>\n          <sc-order-summary>\n            <sc-line-item-total total=\"subtotal\"></sc-line-item-total>\n          </sc-order-summary>\n        </sc-form-components-validator>\n      ),\n    });\n    checkoutState.checkout = { trial_amount: 10 } as Checkout;\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('appends missing address field with shipping address required', async () => {\n    const page = await newSpecPage({\n      components: [ScFormComponentsValidator],\n      template: () => (\n        <sc-form-components-validator>\n          <sc-payment></sc-payment>\n        </sc-form-components-validator>\n      ),\n    });\n    checkoutState.checkout = { shipping_address_required: true } as Checkout;\n    await page.waitForChanges();\n\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('requires the customer name on sc-customer-name if present in page and shipping address required', async () => {\n    const page = await newSpecPage({\n      components: [ScFormComponentsValidator],\n      template: () => (\n        <sc-form-components-validator>\n          <sc-payment></sc-payment>\n          <sc-customer-name></sc-customer-name>\n        </sc-form-components-validator>\n      ),\n    });\n    checkoutState.checkout = { shipping_address_required: true } as Checkout;\n    await page.waitForChanges();\n\n    const customerName = page.root.querySelector('sc-customer-name');\n    expect(customerName.required).toBe(true);\n\n    const shippingAddress = page.root.querySelector('sc-order-shipping-address');\n    expect(shippingAddress.required).toBe(true);\n    expect(!!shippingAddress.requireName).toBe(false);\n    expect(!!shippingAddress.showName).toBe(false);\n\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('requires the customer name on sc-order-shipping-address if shipping address is required', async () => {\n    const page = await newSpecPage({\n      components: [ScFormComponentsValidator],\n      template: () => (\n        <sc-form-components-validator>\n          <sc-payment></sc-payment>\n        </sc-form-components-validator>\n      ),\n    });\n    checkoutState.checkout = { shipping_address_required: true } as Checkout;\n    await page.waitForChanges();\n\n    const shippingAddress = page.root.querySelector('sc-order-shipping-address');\n    expect(shippingAddress.required).toBe(true);\n    expect(shippingAddress.requireName).toBe(true);\n    expect(shippingAddress.showName).toBe(true);\n\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n});\n"]}