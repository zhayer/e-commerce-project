{"version":3,"file":"sc-compact-address.e2e.js","sourceRoot":"","sources":["../../../../../src/components/ui/sc-compact-address/test/sc-compact-address.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,2CAA2C,CAAC,CAAC;QAEnE,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACtD,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;QAChE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,4DAA4D,CAAC,CAAC;QACpF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtD,oBAAoB;QACpB,MAAM,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,GAAQ,EAAE,EAAE;YAClD,GAAG,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC1G,CAAC,CAAC,CAAC;QACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,mBAAmB;QACnB,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAChE,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,sDAAsD,CAAC,CAAC;QACvF,MAAM,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAC3D,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,WAAW,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QAEhD,wBAAwB;QACxB,MAAM,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,GAAQ,EAAE,EAAE;YAClD,GAAG,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC3H,CAAC,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC5D,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAE3I,mDAAmD;QACnD,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAC1D,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;QAChF,MAAM,GAAG,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QACxD,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,KAAK,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('sc-compact-address', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-compact-address></sc-compact-address>');\n\n    const element = await page.find('sc-compact-address');\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it('Emits a change event when the address is changed', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-compact-address></sc-compact-address><button></button>');\n    const address = await page.find('sc-compact-address');\n\n    // set U.S. Country.\n    await page.$eval('sc-compact-address', (elm: any) => {\n      elm.address = { country: 'US', city: null, line_1: null, line_2: null, postal_code: null, state: null };\n    });\n    await page.waitForChanges();\n\n    // test zip change.\n    const changeEvent = await address.spyOnEvent('scChangeAddress');\n    const postal = await page.find('sc-compact-address >>> [name=\"shipping_postal_code\"]');\n    await postal.triggerEvent('scChange', { detail: '12345' });\n    await page.waitForChanges();\n    expect(changeEvent).toHaveReceivedEventTimes(1);\n\n    // set set full address.\n    await page.$eval('sc-compact-address', (elm: any) => {\n      elm.address = { country: 'UK', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' };\n    });\n    const initialAddress = await address.getProperty('address');\n    expect(initialAddress).toEqual({ country: 'UK', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' });\n\n    // change country should clear everything else out.\n    const event = await address.spyOnEvent('scChangeAddress');\n    const elm = await page.find(`sc-compact-address >>> [name=\"shipping_country\"]`);\n    await elm.triggerEvent('scChange', { detail: '12345' });\n    await page.waitForChanges();\n    expect(event).toHaveReceivedEventTimes(1);\n  });\n});\n"]}