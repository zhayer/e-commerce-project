{"version":3,"file":"sc-payment-method-choice.js","sourceRoot":"","sources":["../../../../src/components/processors/sc-payment-method-choice/sc-payment-method-choice.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAC5D,OAAO,EAAE,KAAK,IAAI,iBAAiB,EAAE,MAAM,2BAA2B,CAAC;AAMvE,MAAM,OAAO,qBAAqB;;;;;;;IAehC,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,OAAO,CAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,EAAE,MAAK,IAAI,CAAC,WAAW,IAAI,CAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,MAAM,KAAI,IAAI,CAAC,QAAQ,CAAC;QAClG,CAAC;QACD,OAAO,CAAC,CAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,MAAM,CAAA,IAAI,CAAA,iBAAiB,aAAjB,iBAAiB,uBAAjB,iBAAiB,CAAE,EAAE,MAAK,IAAI,CAAC,WAAW,CAAC;IAClF,CAAC;IAED,aAAa;QACX,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QAC3E,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,OAAO,CAAC,GAAG,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAuC,CAAC;IAClG,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,CAAuC,CAAC;IACzG,CAAC;IACD,SAAS;;QACP,OAAO,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,eAAe,EAAE,0CAAE,MAAM,CAAA,CAAC;IAC1C,CAAC;IAED,MAAM;QACJ,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC;QAEnD,OAAO,CACL,EAAC,GAAG,2EAEF,UAAU,QACV,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,EACvB,QAAQ,EAAE,GAAG,EAAE;gBACb,iBAAiB,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;gBACxC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC3C,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC3C,CAAC;YAEA,IAAI,CAAC,SAAS,EAAE,IAAI,6DAAM,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,SAAS,GAAQ;YAC/D,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAChC;gBACE,eAAQ,CACA,CACX,CAAC,CAAC,CAAC,CACF,eAAQ,CACT,CACG,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Prop } from '@stencil/core';\nimport { state as selectedProcessor } from '@store/selected-processor';\n@Component({\n  tag: 'sc-payment-method-choice',\n  styleUrl: 'sc-payment-method-choice.css',\n  shadow: true,\n})\nexport class ScPaymentMethodChoice {\n  @Element() el: HTMLScPaymentMethodChoiceElement;\n\n  /** The method id */\n  @Prop({ reflect: true }) methodId: string;\n\n  /** The processor ID */\n  @Prop() processorId: string;\n\n  /** Is this a manual processor */\n  @Prop() isManual: boolean;\n\n  /** Should we show this in a card? */\n  @Prop() card: boolean;\n\n  isSelected() {\n    if (this.methodId) {\n      return selectedProcessor?.id === this.processorId && selectedProcessor?.method == this.methodId;\n    }\n    return !selectedProcessor?.method && selectedProcessor?.id === this.processorId;\n  }\n\n  getAllOptions() {\n    const parentGroup = this.el.closest('sc-payment') || this.el.parentElement;\n    if (!parentGroup) {\n      return [];\n    }\n    return [...parentGroup.querySelectorAll(this.el.tagName)] as HTMLScPaymentMethodChoiceElement[];\n  }\n  getSiblingItems() {\n    return this.getAllOptions().filter(choice => choice !== this.el) as HTMLScPaymentMethodChoiceElement[];\n  }\n  hasOthers() {\n    return !!this.getSiblingItems()?.length;\n  }\n\n  render() {\n    const Tag = this.hasOthers() ? 'sc-toggle' : 'div';\n\n    return (\n      <Tag\n        show-control\n        borderless\n        open={this.isSelected()}\n        onScShow={() => {\n          selectedProcessor.id = this.processorId;\n          selectedProcessor.manual = !!this.isManual;\n          selectedProcessor.method = this.methodId;\n        }}\n      >\n        {this.hasOthers() && <slot name=\"summary\" slot=\"summary\"></slot>}\n        {this.card && !this.hasOthers() ? (\n          <sc-card>\n            <slot />\n          </sc-card>\n        ) : (\n          <slot />\n        )}\n      </Tag>\n    );\n  }\n}\n"]}