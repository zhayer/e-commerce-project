{"version":3,"file":"sc-textarea.e2e.js","sourceRoot":"","sources":["../../../../../src/components/ui/sc-textarea/test/sc-textarea.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;QAErD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/C,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAC,KAAK,IAAG,EAAE;QAC5D,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,4CAA4C,CAAC,CAAC;QACpE,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QACtE,MAAM,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEpC,IAAI,UAAU,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACpD,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,iDAAiD,EAAC,KAAK,IAAE,EAAE;QAC5D,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,4CAA4C,CAAC,CAAC;QACpE,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,IAAI,cAAc,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;QACtF,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACjC,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;QAC3E,MAAM,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvC,cAAc,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAA;QACjF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACrC,IAAI,WAAW,GAAG,MAAO,cAAc,CAAC,SAAS,CAAC;QAClD,MAAM,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IACxD,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('sc-textarea', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-textarea></sc-textarea>');\n\n    const element = await page.find('sc-textarea');\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it(\"Should not allow you to type beyond max length\",async ()=>{\n    const page = await newE2EPage();\n    await page.setContent('<sc-textarea maxlength=\"10\"></sc-textarea>');\n    await page.waitForChanges();\n    const element = await page.find('sc-textarea >>> .textarea__control');\n    await element.type(\"Lorem ipsum d\");\n\n    let inputValue = await element.getProperty('value');\n    expect(inputValue).toEqual('Lorem ipsu');\n  })\n\n  it(\"Should show warning when approaching text limit\",async()=>{\n    const page = await newE2EPage();\n    await page.setContent('<sc-textarea maxlength=\"20\"></sc-textarea>');\n    await page.waitForChanges();\n    let warningElement = await page.find('sc-textarea >>> .textarea__char-limit-warning');\n    expect(warningElement).toBe(null)\n    const inputElement = await page.find('sc-textarea >>> .textarea__control');\n    await inputElement.type(\"Lorem ipsum\");\n    warningElement = await page.find('sc-textarea >>> .textarea__char-limit-warning')\n    await page.waitForChanges();\n    expect(warningElement).not.toBe(null)\n    let warningText = await  warningElement.innerText;\n    expect(warningText).toEqual('9 characters remaining');\n  })\n});\n"]}