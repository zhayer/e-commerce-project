{"version":3,"file":"sc-order-billing-address.js","sourceRoot":"","sources":["../../../../../src/components/controllers/checkout-form/sc-order-billing-address/sc-order-billing-address.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAC5E,OAAO,EAAE,EAAE,EAAE,MAAM,iBAAiB,CAAC;AAErC,OAAO,EAAE,KAAK,IAAI,aAAa,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AACnE,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AACzE,OAAO,EAAE,sBAAsB,EAAE,MAAM,mBAAmB,CAAC;AAQ3D,MAAM,OAAO,qBAAqB;;;;+BAWE,EAAE,CAAC,sBAAsB,EAAE,UAAU,CAAC;kCAGnC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;+BAG5B,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;gCAGrB,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;gCAGzB,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC;qCAG3B,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC;gCAGtC,EAAE,CAAC,uBAAuB,EAAE,UAAU,CAAC;;2BAM5C,EAAE,CAAC,qCAAqC,EAAE,UAAU,CAAC;uBAG9C;YACnC,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI;YACZ,WAAW,EAAE,IAAI;YACjB,KAAK,EAAE,IAAI;SACZ;;IAGD,KAAK,CAAC,cAAc;;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAC;QAC7B,OAAO,MAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,cAAc,kDAAI,CAAC;IACxC,CAAC;IAED,cAAc;;QACZ,uDAAuD;QACvD,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;QAC/E,MAAM,gBAAgB,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACvE,IAAI,gBAAgB,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,EAAE,CAAC;YACnD,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAI,MAAA,aAAa,CAAC,QAAQ,0CAAE,eAA2B,EAAE,CAAC;QAC9F,CAAC;IACH,CAAC;IAED,iBAAiB;;QACf,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,OAAO,CAAA,EAAE,CAAC;YAClD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,CAAC;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,OAAyB;;QAChD,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;YAAE,OAAO,CAAC,2BAA2B;QACjG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC;YACH,YAAY,CAAC,iBAAiB,CAAC,CAAC;YAChC,aAAa,CAAC,QAAQ,GAAG,CAAC,MAAM,sBAAsB,CAAC;gBACrD,EAAE,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,0CAAE,EAAE;gBAC/B,IAAI,EAAE;oBACJ,wBAAwB,EAAE,MAAA,aAAa,CAAC,QAAQ,0CAAE,wBAAwB;oBAC1E,eAAe,EAAE,IAAI,CAAC,OAAkB;iBACzC;aACF,CAAC,CAAa,CAAC;QAClB,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;gBAAS,CAAC;YACT,cAAc,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,8BAA8B,CAAC,CAA8B;QACjE,aAAa,CAAC,QAAQ,GAAG;YACvB,GAAG,aAAa,CAAC,QAAQ;YACzB,wBAAwB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO;SAC3C,CAAC;IACJ,CAAC;IAED,0BAA0B;QACxB,OAAO,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;IAC/D,CAAC;IAED,MAAM;;QACJ,OAAO,CACL,EAAC,QAAQ;YAEN,IAAI,CAAC,0BAA0B,EAAE,IAAI,CACpC,oEAAa,KAAK,EAAC,+BAA+B,EAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,MAAA,aAAa,CAAC,QAAQ,0CAAE,wBAAwB,IAClK,IAAI,CAAC,WAAW,CACL,CACf;YAGA,CAAC,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAA,MAAA,aAAa,CAAC,QAAQ,0CAAE,wBAAwB,CAAA,CAAC,IAAI,CAC5F,mEACE,WAAW,EAAC,8FAA8F,EAC1G,GAAG,EAAE,EAAE,CAAC,EAAE;oBACR,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAClB,CAAC,EACD,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC,EACtD,YAAY,EAAE;oBACZ,IAAI,EAAE,IAAI,CAAC,eAAe;oBAC1B,OAAO,EAAE,IAAI,CAAC,kBAAkB;oBAChC,IAAI,EAAE,IAAI,CAAC,eAAe;oBAC1B,MAAM,EAAE,IAAI,CAAC,gBAAgB;oBAC7B,MAAM,EAAE,IAAI,CAAC,gBAAgB;oBAC7B,WAAW,EAAE,IAAI,CAAC,qBAAqB;oBACvC,KAAK,EAAE,IAAI,CAAC,gBAAgB;iBAC7B,EACD,KAAK,EAAE;oBACL,IAAI,EAAE,cAAc;oBACpB,OAAO,EAAE,iBAAiB;oBAC1B,IAAI,EAAE,cAAc;oBACpB,MAAM,EAAE,gBAAgB;oBACxB,MAAM,EAAE,gBAAgB;oBACxB,WAAW,EAAE,qBAAqB;oBAClC,KAAK,EAAE,eAAe;iBACvB,EACD,QAAQ,EAAE,IAAI,EACd,OAAO,EAAE,WAAW,EAAE,EACtB,OAAO,EAAE,IAAI,CAAC,OAAO,eACV,IAAI,CAAC,QAAQ,EACxB,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,GACzD,CACH,CACQ,CACZ,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Fragment, h, Method, Prop, State } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { Address, Checkout } from '../../../../types';\nimport { state as checkoutState, onChange } from '@store/checkout';\nimport { formLoading } from '@store/form/getters';\nimport { lockCheckout, unLockCheckout } from '@store/checkout/mutations';\nimport { createOrUpdateCheckout } from '@services/session';\nimport { ScCheckboxCustomEvent } from 'src/components';\n\n@Component({\n  tag: 'sc-order-billing-address',\n  styleUrl: 'sc-order-billing-address.scss',\n  shadow: true,\n})\nexport class ScOrderBillingAddress {\n  /** The input */\n  private input: HTMLScAddressElement | HTMLScCompactAddressElement;\n\n  /** Label for the field */\n  @Prop() label: string;\n\n  /** Show the name field */\n  @Prop({ reflect: true }) showName: boolean;\n\n  /** Name placeholder */\n  @Prop() namePlaceholder: string = __('Name or Company Name', 'surecart');\n\n  /** Country placeholder */\n  @Prop() countryPlaceholder: string = __('Country', 'surecart');\n\n  /** City placeholder */\n  @Prop() cityPlaceholder: string = __('City', 'surecart');\n\n  /** Address placeholder */\n  @Prop() line1Placeholder: string = __('Address', 'surecart');\n\n  /** Address Line 2 placeholder */\n  @Prop() line2Placeholder: string = __('Address Line 2', 'surecart');\n\n  /** Postal Code placeholder */\n  @Prop() postalCodePlaceholder: string = __('Postal Code/Zip', 'surecart');\n\n  /** State placeholder */\n  @Prop() statePlaceholder: string = __('State/Province/Region', 'surecart');\n\n  /** Default country for address */\n  @Prop() defaultCountry: string;\n\n  /** Toggle label */\n  @Prop() toggleLabel: string = __('Billing address is same as shipping', 'surecart');\n\n  /** Address to pass to the component */\n  @State() address: Partial<Address> = {\n    country: null,\n    city: null,\n    line_1: null,\n    line_2: null,\n    postal_code: null,\n    state: null,\n  };\n\n  @Method()\n  async reportValidity() {\n    if (!this.input) return true;\n    return this.input?.reportValidity?.();\n  }\n\n  prefillAddress() {\n    // check if address keys are empty, if so, update them.\n    const addressKeys = Object.keys(this.address).filter(key => key !== 'country');\n    const emptyAddressKeys = addressKeys.filter(key => !this.address[key]);\n    if (emptyAddressKeys.length === addressKeys.length) {\n      this.address = { ...this.address, ...(checkoutState.checkout?.billing_address as Address) };\n    }\n  }\n\n  componentWillLoad() {\n    if (this.defaultCountry && !this.address?.country) {\n      this.address.country = this.defaultCountry;\n    }\n\n    this.prefillAddress();\n    onChange('checkout', () => this.prefillAddress());\n  }\n\n  async updateAddressState(address: Partial<Address>) {\n    if (JSON.stringify(address) === JSON.stringify(this.address)) return; // no change, don't update.\n    this.address = address;\n    try {\n      lockCheckout('billing-address');\n      checkoutState.checkout = (await createOrUpdateCheckout({\n        id: checkoutState?.checkout?.id,\n        data: {\n          billing_matches_shipping: checkoutState.checkout?.billing_matches_shipping,\n          billing_address: this.address as Address,\n        },\n      })) as Checkout;\n    } catch (e) {\n      console.error(e);\n    } finally {\n      unLockCheckout('billing-address');\n    }\n  }\n\n  async onToggleBillingMatchesShipping(e: ScCheckboxCustomEvent<void>) {\n    checkoutState.checkout = {\n      ...checkoutState.checkout,\n      billing_matches_shipping: e.target.checked,\n    };\n  }\n\n  shippingAddressFieldExists() {\n    return !!document.querySelector('sc-order-shipping-address');\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {/* Only display this toggle if there is a shipping address. */}\n        {this.shippingAddressFieldExists() && (\n          <sc-checkbox class=\"order-billing-address__toggle\" onScChange={e => this.onToggleBillingMatchesShipping(e)} checked={checkoutState.checkout?.billing_matches_shipping}>\n            {this.toggleLabel}\n          </sc-checkbox>\n        )}\n\n        {/* If the shipping address field does not exist, always display this field. */}\n        {(!this.shippingAddressFieldExists() || !checkoutState.checkout?.billing_matches_shipping) && (\n          <sc-address\n            exportparts=\"label, help-text, form-control, input__base, select__base, columns, search__base, menu__base\"\n            ref={el => {\n              this.input = el;\n            }}\n            label={this.label || __('Billing Address', 'surecart')}\n            placeholders={{\n              name: this.namePlaceholder,\n              country: this.countryPlaceholder,\n              city: this.cityPlaceholder,\n              line_1: this.line1Placeholder,\n              line_2: this.line2Placeholder,\n              postal_code: this.postalCodePlaceholder,\n              state: this.statePlaceholder,\n            }}\n            names={{\n              name: 'billing_name',\n              country: 'billing_country',\n              city: 'billing_city',\n              line_1: 'billing_line_1',\n              line_2: 'billing_line_2',\n              postal_code: 'billing_postal_code',\n              state: 'billing_state',\n            }}\n            required={true}\n            loading={formLoading()}\n            address={this.address}\n            show-name={this.showName}\n            onScChangeAddress={e => this.updateAddressState(e.detail)}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n"]}