{"version":3,"file":"sc-order-shipping-address.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/controllers/checkout-form/order-shipping-address/test/sc-order-shipping-address.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,OAAO,IAAI,eAAe,EAAE,MAAM,iBAAiB,CAAC;AAE7D,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACzC,UAAU,CAAC,GAAG,EAAE;QACd,eAAe,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,yDAAyD,CAAC,CAAC;QAEjF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAC7D,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CACnB,uSAAuS,CACxS,CAAC;QACF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;QAC1E,IAAI,YAAY,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC7D,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC;YAC3B,IAAI,EAAE,WAAW;YACjB,OAAO,EAAE,cAAc;YACvB,IAAI,EAAE,WAAW;YACjB,MAAM,EAAE,aAAa;YACrB,MAAM,EAAE,aAAa;YACrB,WAAW,EAAE,kBAAkB;YAC/B,KAAK,EAAE,YAAY;SACpB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,8EAA8E,CAAC,CAAC;QACtG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,IAAI,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kDAAkD,CAAC,CAAC;QAClF,IAAI,WAAW,GAAG,MAAM,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACvD,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { dispose as disposeCheckout } from '@store/checkout';\n\ndescribe('sc-order-shipping-address', () => {\n  beforeEach(() => {\n    disposeCheckout();\n  });\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-order-shipping-address></sc-order-shipping-address>');\n\n    const element = await page.find('sc-order-shipping-address');\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it('renders custom placeholders', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<sc-order-shipping-address name-placeholder=\"name test\" country-placeholder=\"country test\" city-placeholder=\"city test\" line-1-placeholder=\"line 1 test\" line-2-placeholder=\"line 2 test\" postal-code-placeholder=\"postal code test\" state-placeholder=\"state test\" full></sc-order-shipping-address>',\n    );\n    await page.waitForChanges();\n\n    let element = await page.find('sc-order-shipping-address >>> sc-address');\n    let placeholders = await element.getProperty('placeholders');\n    expect(placeholders).toEqual({\n      name: 'name test',\n      country: 'country test',\n      city: 'city test',\n      line_1: 'line 1 test',\n      line_2: 'line 2 test',\n      postal_code: 'postal code test',\n      state: 'state test',\n    });\n  });\n\n  it('uses default country if supplied', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-order-shipping-address default-country=\"BD\"></sc-order-shipping-address>');\n    await page.waitForChanges();\n\n    let address = await page.find('sc-order-shipping-address >>> sc-compact-address');\n    let addressProp = await address.getProperty('address');\n    expect(addressProp.country).toEqual('BD');\n  });\n});\n"]}