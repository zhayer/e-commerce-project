{"version":3,"file":"sc-customer-edit.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/customer-edit/sc-customer-edit.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, h, State } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { Customer, Address } from '../../../../types';\nimport apiFetch from '../../../../functions/fetch';\nimport { addQueryArgs } from '@wordpress/url';\n\n@Component({\n  tag: 'sc-customer-edit',\n  styleUrl: 'sc-customer-edit.scss',\n  shadow: true,\n})\nexport class ScCustomerEdit {\n  @Prop() heading: string;\n  @Prop({ mutable: true }) customer: Customer;\n  @Prop() successUrl: string;\n\n  @State() loading: boolean;\n  @State() error: string;\n\n  async handleSubmit(e) {\n    this.loading = true;\n    try {\n      const {\n        email,\n        first_name,\n        last_name,\n        phone,\n        billing_matches_shipping,\n        shipping_name,\n        shipping_city,\n        'tax_identifier.number_type': tax_identifier_number_type,\n        'tax_identifier.number': tax_identifier_number,\n        shipping_country,\n        shipping_line_1,\n        shipping_postal_code,\n        shipping_state,\n        billing_name,\n        billing_city,\n        billing_country,\n        billing_line_1,\n        billing_postal_code,\n        billing_state,\n      } = await e.target.getFormJson();\n      this.customer.billing_address = {\n        name: billing_name,\n        city: billing_city,\n        country: billing_country,\n        line_1: billing_line_1,\n        postal_code: billing_postal_code,\n        state: billing_state,\n      };\n      this.customer.shipping_address = {\n        name: shipping_name,\n        city: shipping_city,\n        country: shipping_country,\n        line_1: shipping_line_1,\n        postal_code: shipping_postal_code,\n        state: shipping_state,\n      };\n\n      await apiFetch({\n        path: addQueryArgs(`surecart/v1/customers/${this.customer?.id}`, { expand: ['tax_identifier'] }),\n        method: 'PATCH',\n        data: {\n          email,\n          first_name,\n          last_name,\n          phone,\n          billing_matches_shipping: billing_matches_shipping === 'on',\n          shipping_address: this.customer.shipping_address,\n          billing_address: this.customer.billing_address,\n          ...(tax_identifier_number && tax_identifier_number_type\n            ? {\n                tax_identifier: {\n                  number: tax_identifier_number,\n                  number_type: tax_identifier_number_type,\n                },\n              }\n            : {}),\n        },\n      });\n      if (this.successUrl) {\n        window.location.assign(this.successUrl);\n      } else {\n        this.loading = false;\n      }\n    } catch (e) {\n      this.error = e?.message || __('Something went wrong', 'surecart');\n      this.loading = false;\n    }\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module class=\"customer-edit\" error={this.error}>\n        <span slot=\"heading\">\n          {this.heading || __('Update Billing Details', 'surecart')}{' '}\n          {!this?.customer?.live_mode && (\n            <sc-tag type=\"warning\" size=\"small\">\n              {__('Test', 'surecart')}\n            </sc-tag>\n          )}\n        </span>\n\n        <sc-card>\n          <sc-form onScFormSubmit={e => this.handleSubmit(e)}>\n            <sc-columns style={{ '--sc-column-spacing': 'var(--sc-spacing-medium)' }}>\n              <sc-column>\n                <sc-input label={__('First Name', 'surecart')} name=\"first_name\" value={this.customer?.first_name} />\n              </sc-column>\n              <sc-column>\n                <sc-input label={__('Last Name', 'surecart')} name=\"last_name\" value={this.customer?.last_name} />\n              </sc-column>\n            </sc-columns>\n            <sc-column>\n              <sc-phone-input label={__('Phone', 'surecart')} name=\"phone\" value={this.customer?.phone} />\n            </sc-column>\n            <sc-flex style={{ '--sc-flex-column-gap': 'var(--sc-spacing-medium)' }} flexDirection=\"column\">\n              <div>\n                <sc-address\n                  label={__('Shipping Address', 'surecart')}\n                  showName={true}\n                  address={{\n                    ...(this.customer?.shipping_address as Address),\n                  }}\n                  required={false}\n                  names={{\n                    name: 'shipping_name',\n                    country: 'shipping_country',\n                    line_1: 'shipping_line_1',\n                    line_2: 'shipping_line_2',\n                    city: 'shipping_city',\n                    postal_code: 'shipping_postal_code',\n                    state: 'shipping_state',\n                  }}\n                ></sc-address>\n              </div>\n\n              <div>\n                <sc-checkbox\n                  name=\"billing_matches_shipping\"\n                  checked={this.customer?.billing_matches_shipping}\n                  onScChange={e => {\n                    this.customer = {\n                      ...this.customer,\n                      billing_matches_shipping: (e.target as HTMLScCheckboxElement).checked,\n                    };\n                  }}\n                >\n                  {__('Billing address is same as shipping', 'surecart')}\n                </sc-checkbox>\n              </div>\n\n              <div style={{ display: this.customer?.billing_matches_shipping ? 'none' : 'block' }}>\n                <sc-address\n                  label={__('Billing Address', 'surecart')}\n                  showName={true}\n                  address={{\n                    ...(this.customer?.billing_address as Address),\n                  }}\n                  names={{\n                    name: 'billing_name',\n                    country: 'billing_country',\n                    line_1: 'billing_line_1',\n                    line_2: 'billing_line_2',\n                    city: 'billing_city',\n                    postal_code: 'billing_postal_code',\n                    state: 'billing_state',\n                  }}\n                  required={true}\n                ></sc-address>\n              </div>\n\n              <sc-tax-id-input show number={this.customer?.tax_identifier?.number} type={this.customer?.tax_identifier?.number_type}></sc-tax-id-input>\n            </sc-flex>\n            <div>\n              <sc-button type=\"primary\" full submit>\n                {__('Save', 'surecart')}\n              </sc-button>\n            </div>\n          </sc-form>\n        </sc-card>\n        {this.loading && <sc-block-ui spinner></sc-block-ui>}\n      </sc-dashboard-module>\n    );\n  }\n}\n"]}