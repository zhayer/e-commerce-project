{"version":3,"file":"sc-customer-name.spec.js","sourceRoot":"","sources":["../../../../../../src/components/controllers/checkout-form/customer-name/test/sc-customer-name.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { ScCustomerName } from '../sc-customer-name';\nimport { Checkout } from '../../../../../types';\nimport { dispose as disposeCheckout, state as checkoutState } from '@store/checkout';\nimport { dispose as disposeUser, state as userState } from '@store/user';\n\ndescribe('sc-customer-name', () => {\n  beforeEach(() => {\n    disposeCheckout();\n    disposeUser();\n  });\n\n  const checkouts = [\n    {\n      testLabel: 'Customer and Checkout names provided',\n      checkout: {\n        name: 'CheckoutFirst CheckoutLast',\n        customer: {\n          name: 'CustomerFirst CustomerLast',\n        },\n      } as Checkout,\n    },\n    {\n      testLabel: 'Customer name provided',\n      checkout: {\n        customer: {\n          name: 'CustomerFirst CustomerLast',\n        },\n      } as Checkout,\n    },\n    {\n      testLabel: 'Checkout name provided',\n      checkout: {\n        name: 'CheckoutFirst CheckoutLast',\n      } as Checkout,\n    },\n  ];\n\n  function addUrlParams(params) {\n    // Set the mock URL as the window location\n    global.window = Object.create(window);\n    Object.defineProperty(window, 'location', {\n      value: {\n        search: params ? new URLSearchParams('?full_name=UrlFirst UrlLast').toString() : '',\n      },\n      writable: true,\n    });\n  }\n\n  describe.each(checkouts)('Logged In', test => {\n    it(`${test.testLabel} with URL Params`, async () => {\n      addUrlParams(true);\n      userState.loggedIn = true;\n      checkoutState.checkout = test.checkout;\n\n      const page = await newSpecPage({\n        components: [ScCustomerName],\n        html: `<sc-customer-name></sc-customer-name>`,\n      });\n\n      expect(page.root).toMatchSnapshot();\n      page.rootInstance.disconnectedCallback();\n    });\n\n    it(`${test.testLabel} without URL Params`, async () => {\n      addUrlParams(false);\n      userState.loggedIn = true;\n      checkoutState.checkout = test.checkout;\n\n      const page = await newSpecPage({\n        components: [ScCustomerName],\n        html: `<sc-customer-name></sc-customer-name>`,\n      });\n\n      expect(page.root).toMatchSnapshot();\n      page.rootInstance.disconnectedCallback();\n    });\n  });\n\n  describe.each(checkouts)('Logged Out', test => {\n    it(`${test.testLabel} with URL Params`, async () => {\n      addUrlParams(true);\n      userState.loggedIn = false;\n      checkoutState.checkout = test.checkout;\n\n      const page = await newSpecPage({\n        components: [ScCustomerName],\n        html: `<sc-customer-name></sc-customer-name>`,\n      });\n\n      expect(page.root).toMatchSnapshot();\n      page.rootInstance.disconnectedCallback();\n    });\n\n    it(`${test.testLabel} without URL Params`, async () => {\n      addUrlParams(false);\n      userState.loggedIn = false;\n      checkoutState.checkout = test.checkout;\n\n      const page = await newSpecPage({\n        components: [ScCustomerName],\n        html: `<sc-customer-name></sc-customer-name>`,\n      });\n\n      expect(page.root).toMatchSnapshot();\n      page.rootInstance.disconnectedCallback();\n    });\n  });\n});\n"]}