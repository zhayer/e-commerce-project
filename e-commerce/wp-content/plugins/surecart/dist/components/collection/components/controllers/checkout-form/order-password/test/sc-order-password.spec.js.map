{"version":3,"file":"sc-order-password.spec.js","sourceRoot":"","sources":["../../../../../../src/components/controllers/checkout-form/order-password/test/sc-order-password.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAC,MAAM,eAAe,CAAC;AACjC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,yCAAyC;SAChD,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,QAAQ,EAAE,GAAG,EAAE,CAAC,yBAAmB,YAAY,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,uBAAuB,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,GAAsB;SAC1K,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,mDAAmD;SAC1D,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IACH,sDAAsD;IACtD,qCAAqC;IACrC,qCAAqC;IACrC,oEAAoE;IACpE,QAAQ;IACR,yCAAyC;IACzC,MAAM;AACR,CAAC,CAAC,CAAC","sourcesContent":["import { h} from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { ScOrderPassword } from '../sc-order-password';\n\ndescribe('sc-order-password', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [ScOrderPassword],\n      html: `<sc-order-password></sc-order-password>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n  it('renders confirmation if provided', async () => {\n    const page = await newSpecPage({\n      components: [ScOrderPassword],\n      template: () => <sc-order-password confirmation={true} confirmationLabel={'Label'} confirmationPlaceholder={'Placeholder'} confirmationHelp={\"Help\"}></sc-order-password>\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n  it('does not render if logged in', async () => {\n    const page = await newSpecPage({\n      components: [ScOrderPassword],\n      html: `<sc-order-password logged-in></sc-order-password>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n  // it('does not render if email exists', async () => {\n  //   const page = await newSpecPage({\n  //     components: [ScOrderPassword],\n  //     html: `<sc-order-password email-exists></sc-order-password>`,\n  //   });\n  //   expect(page.root).toMatchSnapshot();\n  // });\n});\n"]}