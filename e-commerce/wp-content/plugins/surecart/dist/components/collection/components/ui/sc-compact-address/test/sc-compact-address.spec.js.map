{"version":3,"file":"sc-compact-address.spec.js","sourceRoot":"","sources":["../../../../../src/components/ui/sc-compact-address/test/sc-compact-address.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAEzD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,2CAA2C;SAClD,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,IAAI,EAAE,0DAA0D;SACjE,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,0BAAoB,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,GAAuB,CAC/J;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,0BAAoB,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,GAAuB,CAC/J;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,gBAAgB,CAAC;YAC9B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,0BAAoB,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,GAAuB,CAC/J;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { ScCompactAddress } from '../sc-compact-address';\n\ndescribe('sc-compact-address', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [ScCompactAddress],\n      html: `<sc-compact-address></sc-compact-address>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders loading', async () => {\n    const page = await newSpecPage({\n      components: [ScCompactAddress],\n      html: `<sc-compact-address loading=\"true\"></sc-compact-address>`,\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders US address fields', async () => {\n    const page = await newSpecPage({\n      components: [ScCompactAddress],\n      template: () => (\n        <sc-compact-address address={{ country: 'US', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' }}></sc-compact-address>\n      ),\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders CA address fields', async () => {\n    const page = await newSpecPage({\n      components: [ScCompactAddress],\n      template: () => (\n        <sc-compact-address address={{ country: 'CA', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' }}></sc-compact-address>\n      ),\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders EU address fields', async () => {\n    const page = await newSpecPage({\n      components: [ScCompactAddress],\n      template: () => (\n        <sc-compact-address address={{ country: 'UK', city: 'Monona', line_1: '303 Park Ave', line_2: null, postal_code: '12345', state: 'WI' }}></sc-compact-address>\n      ),\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}