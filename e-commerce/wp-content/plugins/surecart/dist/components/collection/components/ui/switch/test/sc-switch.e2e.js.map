{"version":3,"file":"sc-switch.e2e.js","sourceRoot":"","sources":["../../../../../src/components/ui/switch/test/sc-switch.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AAEnD,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAI,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC;IAE1B,MAAM,QAAQ,GAAG,WAAW,CAAC;IAE7B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAC1B,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,QAAQ,MAAM,QAAQ,GAAG,CAAC,CAAC;QACrD,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,cAAc,CAAC,CAAC;QACtD,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,YAAY,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,CAAC;QAEjD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;QACpD,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACvD,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAQ,EAAE,EAAE;YACtC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;QAChD,MAAM,CAAC,MAAM,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,sCAAsC;IACtC,qCAAqC;IACrC,4BAA4B;IAC5B,cAAc;IACd,kDAAkD;IAClD,kBAAkB;IAClB,kDAAkD;IAClD,6CAA6C;IAC7C,+BAA+B;IAC/B,iCAAiC;IACjC,gDAAgD;IAChD,MAAM;AACR,CAAC,CAAC,CAAC","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('sc-switch', () => {\n  let page, input, switchEl;\n\n  const selector = 'sc-switch';\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`<${selector}></${selector}>`);\n    switchEl = await page.find(`${selector} >>> .switch`);\n    input = await page.find(`${selector} >>> input`);\n  });\n\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-switch></sc-switch>');\n\n    const element = await page.find('sc-switch');\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it('Can be checked', async () => {\n    expect(switchEl).not.toHaveClass('switch--checked');\n    expect(switchEl).not.toHaveProperty('checked');\n    expect(await input.getProperty('checked')).toBeFalsy();\n    await page.$eval(selector, (elm: any) => {\n      elm.checked = true;\n    });\n    await page.waitForChanges();\n    expect(switchEl).toHaveClass('switch--checked');\n    expect(await input.getProperty('checked')).toBeTruthy();\n  });\n\n  // it('Can be required', async () => {\n  //   const page = await newE2EPage();\n  //   await page.setContent(`\n  //   <sc-form>\n  //     <sc-switch required name=\"test\"></sc-radio>\n  //   </sc-form>`);\n  //   const element = await page.find(`sc-switch`);\n  //   const form = await page.find(`sc-form`);\n  //   form.callMethod('submit');\n  //   await page.waitForChanges();\n  //   expect(element).toHaveAttribute('invalid');\n  // });\n});\n"]}