{"version":3,"file":"sc-order-billing-address.e2e.js","sourceRoot":"","sources":["../../../../../../src/components/controllers/checkout-form/sc-order-billing-address/test/sc-order-billing-address.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('sc-order-billing-address', () => {\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-order-billing-address></sc-order-billing-address>');\n\n    const element = await page.find('sc-order-billing-address');\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it('Should show billing address input when checkbox is unchecked', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-order-shipping-address></sc-order-shipping-address><sc-order-billing-address></sc-order-billing-address>');\n    page.waitForChanges();\n\n    const addressField = await page.find('sc-order-billing-address >>> .order-billing-address__toggle');\n    const checkBox = await page.find('sc-order-billing-address >>> sc-checkbox');\n\n    // address field is not visible & switch is visible and checked\n    expect(addressField).toBeNull();\n    expect(checkBox).not.toBeNull();\n    expect(await checkBox.getProperty('checked')).toBeTruthy();\n\n    // toggle checkbox\n    checkBox.setAttribute('checked', false);\n    await page.waitForChanges();\n\n    // address field is visible & switch is visible and not checked\n    expect(addressField).not.toBeNull();\n    expect(checkBox).not.toBeNull();\n    expect(await checkBox.getProperty('checked')).toBeFalsy();\n  });\n\n  it('should show billing address if shipping address field does not exist', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-order-billing-address></sc-order-billing-address>');\n    page.waitForChanges();\n\n    const addressField = await page.find('sc-order-billing-address >>> sc-address');\n    const switchField = await page.find('sc-order-billing-address >>> sc-switch');\n\n    // address field is visible & switch is not visible\n    expect(addressField).not.toBeNull();\n    expect(switchField).toBeNull();\n  });\n\n  it('renders custom placeholders', async () => {\n    const page = await newE2EPage();\n    await page.setContent(\n      '<sc-order-billing-address name-placeholder=\"name test\" country-placeholder=\"country test\" city-placeholder=\"city test\" line-1-placeholder=\"line 1 test\" line-2-placeholder=\"line 2 test\" postal-code-placeholder=\"postal code test\" state-placeholder=\"state test\" full></sc-order-billing-address>',\n    );\n    await page.waitForChanges();\n\n    const element = await page.find('sc-order-billing-address >>> sc-address');\n    const placeholders = await element.getProperty('placeholders');\n    expect(placeholders).toEqual({\n      name: 'name test',\n      country: 'country test',\n      city: 'city test',\n      line_1: 'line 1 test',\n      line_2: 'line 2 test',\n      postal_code: 'postal code test',\n      state: 'state test',\n    });\n  });\n\n  it('uses default country if supplied', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-order-billing-address default-country=\"BD\"></sc-order-billing-address>');\n    await page.waitForChanges();\n\n    const address = await page.find('sc-order-billing-address >>> sc-address');\n    const addressProp = await address.getProperty('address');\n    expect(addressProp.country).toEqual('BD');\n  });\n});\n"]}