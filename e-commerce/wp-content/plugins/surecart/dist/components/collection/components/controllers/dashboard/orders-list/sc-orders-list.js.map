{"version":3,"file":"sc-orders-list.js","sourceRoot":"","sources":["../../../../../src/components/controllers/dashboard/orders-list/sc-orders-list.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAE9C,OAAO,QAAQ,MAAM,6BAA6B,CAAC;AACnD,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAQ5D,MAAM,OAAO,YAAY;;qBAMnB;YACF,IAAI,EAAE,CAAC;YACP,QAAQ,EAAE,EAAE;SACb;;;;sBAK+B,EAAE;;;;0BAY9B;YACF,KAAK,EAAE,CAAC;YACR,WAAW,EAAE,CAAC;SACf;;IAED,4BAA4B;IAC5B,iBAAiB;QACf,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE;YAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,IAAI,CAAC;YACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,OAAO,KAAI,EAAE,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QACpE,CAAC;gBAAS,CAAC;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,WAAW;QACf,IAAI,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,CAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,OAAO,KAAI,EAAE,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QACpE,CAAC;gBAAS,CAAC;YACT,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;IACH,CAAC;IAED,qBAAqB;IACrB,KAAK,CAAC,SAAS;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,OAAO;QACT,CAAC;QACD,MAAM,QAAQ,GAAG,CAAC,MAAM,MAAM,QAAQ,CAAC;YACrC,IAAI,EAAE,YAAY,CAAC,qBAAqB,EAAE;gBACxC,MAAM,EAAE,CAAC,UAAU,EAAE,qBAAqB,EAAE,iBAAiB,CAAC;gBAC9D,GAAG,IAAI,CAAC,KAAK;aACd,CAAC;YACF,KAAK,EAAE,KAAK;SACb,CAAC,CAAa,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG;YAChB,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACnD,WAAW,EAAE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;SAC/D,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAY,CAAC;QACjD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,iBAAiB,CAAC,KAAY;QAC5B,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;QACnC,MAAM,EAAE,MAAM,EAAE,GAAG,QAAoB,CAAC;QACxC,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;YACzC,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,cAAc,EAAE,CAAC;gBAC3B,OAAO,cAAQ,IAAI,EAAC,QAAQ,IAAE,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,CAAU,CAAC;YACrE,CAAC;YACD,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,eAAe,EAAE,CAAC;gBAC5B,OAAO,cAAQ,IAAI,EAAC,MAAM,IAAE,EAAE,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAU,CAAC;YAC7E,CAAC;QACH,CAAC;QAED,OAAO,6BAAuB,MAAM,EAAE,MAAM,GAA0B,CAAC;IACzE,CAAC;IAED,aAAa;QACX,OAAO,CACL,eAAS,SAAS;YAChB;gBACE,2BAAqB,KAAK,EAAE,EAAE,WAAW,EAAE,GAAG,EAAE,iBAAe,GAAG,IAC/D,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CACvB,mBAAa,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,GAAgB,CAChF,CAAC,CACkB,CACN,CACV,CACX,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO,CACL;YACE,kBAAY,KAAK,EAAE,EAAE,WAAW,EAAE,GAAG,EAAE,GAAe;YACtD,YAAM,IAAI,EAAC,OAAO;gBAChB,gBAAU,IAAI,EAAC,cAAc,IAAE,EAAE,CAAC,4BAA4B,EAAE,UAAU,CAAC,CAAY,CAClF,CACH,CACP,CAAC;IACJ,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;;YAC7B,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;YAChD,IAAI,CAAC,QAAQ;gBAAE,OAAO,IAAI,CAAC;YAC3B,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,QAAoB,CAAC;YAC1E,OAAO,CACL,2BACE,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;oBACvC,MAAM,EAAE,MAAM;oBACd,KAAK,EAAE,OAAO;oBACd,EAAE;iBACH,CAAC,EACF,KAAK,EAAE,EAAE,WAAW,EAAE,GAAG,EAAE,iBACd,GAAG;gBAEhB,WAAK,KAAK,EAAC,aAAa,IAAE,OAAO,MAAM,KAAK,QAAQ,IAAI,CAAC,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,eAAe,KAAI,eAAe,CAAC,CAAO;gBAC3G;oBACE,eACE,QAAQ,QACR,KAAK,EAAE;4BACL,SAAS,EAAE,0BAA0B;yBACtC,IAEA,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,CAAA,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,UAAU,0CAAE,KAAK,KAAI,CAAC,EAAE,UAAU,CAAC,EAAE,CAAA,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,UAAU,0CAAE,KAAK,KAAI,CAAC,CAAC,CAC/G,CACN;gBACN,WAAK,KAAK,EAAC,qBAAqB;oBAC7B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;oBAC9B,+BAAyB,MAAM,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,eAAe,GAA4B,CAC/E;gBACN;oBACE,wBAAkB,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,GAAqB,CACxF,CACc,CACvB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;;QACX,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;QAC9B,CAAC;QAED,IAAI,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,MAAK,CAAC,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;QAC5B,CAAC;QAED,OAAO,CACL;YACE,2BAAkB,IAAI,CAAC,UAAU,EAAE,CAAmB,CAC9C,CACX,CAAC;IACJ,CAAC;IAED,MAAM;;QACJ,OAAO,CACL,4EAAqB,KAAK,EAAC,aAAa,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK;YACxD,6DAAM,IAAI,EAAC,SAAS;gBAClB,6DAAM,IAAI,EAAC,SAAS,IAAE,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC,CAAQ,CACxE;YAEN,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,CAAA,IAAI,CAC1C,kEAAW,IAAI,EAAC,MAAM,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAC,KAAK,gBAAa,OAAO,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;gBACtJ,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;gBAC3B,+EAAqB,MAAM,EAAC,IAAI,EAAC,eAAe,EAAC,IAAI,EAAC,QAAQ,GAAW,CAC/D,CACb;YAEA,IAAI,CAAC,aAAa,EAAE;YAEpB,CAAC,IAAI,CAAC,OAAO,IAAI,CAChB,sEACE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EACrB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC5B,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,EAC5B,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EACvC,YAAY,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAE,MAAM,EAClC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,EACnC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,GACpB,CAClB;YAEA,IAAI,CAAC,IAAI,IAAI,qEAA2B,CACrB,CACvB,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Prop, State } from '@stencil/core';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\n\nimport apiFetch from '../../../../functions/fetch';\nimport { onFirstVisible } from '../../../../functions/lazy';\nimport { Checkout, Order } from '../../../../types';\n\n@Component({\n  tag: 'sc-orders-list',\n  styleUrl: 'sc-orders-list.scss',\n  shadow: true,\n})\nexport class ScOrdersList {\n  @Element() el: HTMLScOrdersListElement;\n  /** Query to fetch orders */\n  @Prop({ mutable: true }) query: {\n    page: number;\n    per_page: number;\n  } = {\n    page: 1,\n    per_page: 10,\n  };\n  @Prop() allLink: string;\n  @Prop() heading: string;\n  @Prop() isCustomer: boolean;\n\n  @State() orders: Array<Order> = [];\n\n  /** Loading state */\n  @State() loading: boolean;\n  @State() busy: boolean;\n\n  /** Error message */\n  @State() error: string;\n\n  @State() pagination: {\n    total: number;\n    total_pages: number;\n  } = {\n    total: 0,\n    total_pages: 0,\n  };\n\n  /** Only fetch if visible */\n  componentWillLoad() {\n    onFirstVisible(this.el, () => {\n      this.initialFetch();\n    });\n  }\n\n  async initialFetch() {\n    try {\n      this.loading = true;\n      await this.getOrders();\n    } catch (e) {\n      console.error(this.error);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  async fetchOrders() {\n    try {\n      this.busy = true;\n      await this.getOrders();\n    } catch (e) {\n      console.error(this.error);\n      this.error = e?.message || __('Something went wrong', 'surecart');\n    } finally {\n      this.busy = false;\n    }\n  }\n\n  /** Get all orders */\n  async getOrders() {\n    if (!this.isCustomer) {\n      return;\n    }\n    const response = (await await apiFetch({\n      path: addQueryArgs(`surecart/v1/orders/`, {\n        expand: ['checkout', 'checkout.line_items', 'checkout.charge'],\n        ...this.query,\n      }),\n      parse: false,\n    })) as Response;\n    this.pagination = {\n      total: parseInt(response.headers.get('X-WP-Total')),\n      total_pages: parseInt(response.headers.get('X-WP-TotalPages')),\n    };\n    this.orders = (await response.json()) as Order[];\n    return this.orders;\n  }\n\n  nextPage() {\n    this.query.page = this.query.page + 1;\n    this.fetchOrders();\n  }\n\n  prevPage() {\n    this.query.page = this.query.page - 1;\n    this.fetchOrders();\n  }\n\n  renderStatusBadge(order: Order) {\n    const { status, checkout } = order;\n    const { charge } = checkout as Checkout;\n    if (charge && typeof charge === 'object') {\n      if (charge?.fully_refunded) {\n        return <sc-tag type=\"danger\">{__('Refunded', 'surecart')}</sc-tag>;\n      }\n      if (charge?.refunded_amount) {\n        return <sc-tag type=\"info\">{__('Partially Refunded', 'surecart')}</sc-tag>;\n      }\n    }\n\n    return <sc-order-status-badge status={status}></sc-order-status-badge>;\n  }\n\n  renderLoading() {\n    return (\n      <sc-card noPadding>\n        <sc-stacked-list>\n          <sc-stacked-list-row style={{ '--columns': '4' }} mobile-size={500}>\n            {[...Array(4)].map(() => (\n              <sc-skeleton style={{ width: '100px', display: 'inline-block' }}></sc-skeleton>\n            ))}\n          </sc-stacked-list-row>\n        </sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <div>\n        <sc-divider style={{ '--spacing': '0' }}></sc-divider>\n        <slot name=\"empty\">\n          <sc-empty icon=\"shopping-bag\">{__(\"You don't have any orders.\", 'surecart')}</sc-empty>\n        </slot>\n      </div>\n    );\n  }\n\n  renderList() {\n    return this.orders.map(order => {\n      const { checkout, created_at_date, id } = order;\n      if (!checkout) return null;\n      const { line_items, amount_due, currency, charge } = checkout as Checkout;\n      return (\n        <sc-stacked-list-row\n          href={addQueryArgs(window.location.href, {\n            action: 'show',\n            model: 'order',\n            id,\n          })}\n          style={{ '--columns': '4' }}\n          mobile-size={500}\n        >\n          <div class=\"order__date\">{typeof charge !== 'string' && (charge?.created_at_date || created_at_date)}</div>\n          <div>\n            <sc-text\n              truncate\n              style={{\n                '--color': 'var(--sc-color-gray-500)',\n              }}\n            >\n              {sprintf(_n('%s item', '%s items', line_items?.pagination?.count || 0, 'surecart'), line_items?.pagination?.count || 0)}\n            </sc-text>\n          </div>\n          <div class=\"orders-list__status\">\n            {this.renderStatusBadge(order)}\n            <sc-order-shipment-badge status={order?.shipment_status}></sc-order-shipment-badge>\n          </div>\n          <div>\n            <sc-format-number type=\"currency\" currency={currency} value={amount_due}></sc-format-number>\n          </div>\n        </sc-stacked-list-row>\n      );\n    });\n  }\n\n  renderContent() {\n    if (this.loading) {\n      return this.renderLoading();\n    }\n\n    if (this.orders?.length === 0) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <sc-card no-padding>\n        <sc-stacked-list>{this.renderList()}</sc-stacked-list>\n      </sc-card>\n    );\n  }\n\n  render() {\n    return (\n      <sc-dashboard-module class=\"orders-list\" error={this.error}>\n        <span slot=\"heading\">\n          <slot name=\"heading\">{this.heading || __('Order History', 'surecart')}</slot>\n        </span>\n\n        {!!this.allLink && !!this.orders?.length && (\n          <sc-button type=\"link\" href={this.allLink} slot=\"end\" aria-label={sprintf(__('View all %s', 'surecart'), this.heading || __('Order History', 'surecart'))}>\n            {__('View all', 'surecart')}\n            <sc-icon aria-hidden=\"true\" name=\"chevron-right\" slot=\"suffix\"></sc-icon>\n          </sc-button>\n        )}\n\n        {this.renderContent()}\n\n        {!this.allLink && (\n          <sc-pagination\n            page={this.query.page}\n            perPage={this.query.per_page}\n            total={this.pagination.total}\n            totalPages={this.pagination.total_pages}\n            totalShowing={this?.orders?.length}\n            onScNextPage={() => this.nextPage()}\n            onScPrevPage={() => this.prevPage()}\n          ></sc-pagination>\n        )}\n\n        {this.busy && <sc-block-ui></sc-block-ui>}\n      </sc-dashboard-module>\n    );\n  }\n}\n"]}