{"version":3,"file":"sc-stacked-list-row.js","sourceRoot":"","sources":["../../../../src/components/ui/stacked-list-row/sc-stacked-list-row.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACnE,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AAOtD,MAAM,OAAO,gBAAgB;;;sBAIF,OAAO;0BAEH,GAAG;;yBAGH,KAAK;yBACL,KAAK;;IAElC,gBAAgB;QACd,2CAA2C;QAC3C,IAAI,gBAAgB,IAAI,MAAM,EAAE,CAAC;YAC/B,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;gBAC3C,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC;gBACvC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACtB,CAAC;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;QACvF,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;IACzF,CAAC;IAED,MAAM;QACJ,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;QAEpC,OAAO,CACL,EAAC,GAAG,qDACF,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,IAAI,EAAC,MAAM,EACX,KAAK,EAAE;gBACL,UAAU,EAAE,IAAI;gBAChB,sBAAsB,EAAE,IAAI,CAAC,SAAS;gBACtC,sBAAsB,EAAE,IAAI,CAAC,SAAS;gBACtC,eAAe,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU;gBAC9C,kBAAkB,EAAC,KAAK,EAAE;aAC3B;YAED,6DAAM,KAAK,EAAC,kBAAkB;gBAC5B,6DAAM,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAS,CACnE;YACP,6DAAM,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAS;YAC1D,6DAAM,KAAK,EAAC,kBAAkB;gBAC5B,6DAAM,IAAI,EAAC,QAAQ,EAAC,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAS,CACnE,CACH,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, h, Prop, State } from '@stencil/core';\nimport { isRtl } from '../../../functions/page-align';\n\n@Component({\n  tag: 'sc-stacked-list-row',\n  styleUrl: 'sc-stacked-list-row.scss',\n  shadow: true,\n})\nexport class ScStackedListRow {\n  @Element() el: HTMLElement;\n\n  @Prop() href: string;\n  @Prop() target: string = '_self';\n\n  @Prop() mobileSize: number = 600;\n\n  @State() width: number;\n  @State() private hasPrefix = false;\n  @State() private hasSuffix = false;\n\n  componentDidLoad() {\n    // Only run if ResizeObserver is supported.\n    if ('ResizeObserver' in window) {\n      var ro = new window.ResizeObserver(entries => {\n        entries.forEach(entry => {\n          this.width = entry.contentRect.width;\n        });\n      });\n      ro.observe(this.el);\n    }\n  }\n\n  handleSlotChange() {\n    this.hasPrefix = !!Array.from(this.el.children).some(child => child.slot === 'prefix');\n    this.hasSuffix = !!Array.from(this.el.children).some(child => child.slot === 'suffix');\n  }\n\n  render() {\n    const Tag = this.href ? 'a' : 'div';\n\n    return (\n      <Tag\n        href={this.href}\n        target={this.target}\n        part=\"base\"\n        class={{\n          'list-row': true,\n          'list-row--has-prefix': this.hasPrefix,\n          'list-row--has-suffix': this.hasSuffix,\n          'breakpoint-lg': this.width >= this.mobileSize,\n          'list-row--is-rtl':isRtl()\n        }}\n      >\n        <span class=\"list-row__prefix\">\n          <slot name=\"prefix\" onSlotchange={() => this.handleSlotChange()}></slot>\n        </span>\n        <slot onSlotchange={() => this.handleSlotChange()}></slot>\n        <span class=\"list-row__suffix\">\n          <slot name=\"suffix\" onSlotchange={() => this.handleSlotChange()}></slot>\n        </span>\n      </Tag>\n    );\n  }\n}\n"]}