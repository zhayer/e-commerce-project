{"version":3,"file":"sc-choice-container.js","sourceRoot":"","sources":["../../../../src/components/ui/choice-container/sc-choice-container.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, h, Event, EventEmitter, Method, State, Element, Watch, Listen } from '@stencil/core';\nimport { __ } from '@wordpress/i18n';\nimport { FormSubmitController } from '../../../functions/form-data';\nimport { isRtl } from '../../../functions/page-align';\n\nlet id = 0;\n\n@Component({\n  tag: 'sc-choice-container',\n  styleUrl: 'sc-choice-container.scss',\n  shadow: true,\n})\nexport class ScChoiceContainer {\n  @Element() el: HTMLScChoiceContainerElement;\n  private formController: any;\n\n  private input: HTMLInputElement;\n  private inputId: string = `choice-container-${++id}`;\n  private labelId: string = `choice-container-label-${id}`;\n\n  /** Does the choice have focus */\n  @State() hasFocus: boolean = false;\n\n  /** The choice name attribute */\n  @Prop() name: string;\n\n  /** The size. */\n  @Prop() size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** The choice value */\n  @Prop({ reflect: true }) value: string;\n\n  /** The choice name attribute */\n  @Prop() type: 'radio' | 'checkbox' = 'radio';\n\n  /** Is the choice disabled */\n  @Prop({ reflect: true, mutable: true }) disabled: boolean = false;\n\n  /** Draws the choice in a checked state. */\n  @Prop({ reflect: true, mutable: true }) checked: boolean = false;\n\n  /** Is this required */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /** This will be true when the control is in an invalid state. Validity is determined by the `required` prop. */\n  @Prop({ reflect: true, mutable: true }) invalid: boolean = false;\n\n  /** Show the radio/checkbox control */\n  @Prop() showControl: boolean = true;\n\n  /** Role of radio/checkbox control */\n  @Prop() role: string;\n\n  /** Emitted when the control loses focus. */\n  @Event() scBlur: EventEmitter<void>;\n\n  /** Emitted when the control's checked state changes. */\n  @Event() scChange: EventEmitter<boolean>;\n\n  /** Emitted when the control gains focus. */\n  @Event() scFocus: EventEmitter<void>;\n\n  /** Simulates a click on the choice. */\n  @Method()\n  async triggerClick() {\n    this.input.click();\n  }\n\n  @Method()\n  async triggerFocus() {\n    this.input.focus();\n  }\n\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  @Method()\n  async reportValidity() {\n    this.invalid = !this.input.checkValidity();\n\n    if (this.required) {\n      const choices = this.getAllChoices();\n      if (!choices.some(c => c.checked)) {\n        this.input.setCustomValidity(this.type === 'radio' ? __('Please choose one.', 'surecart') : __('Please choose at least one.', 'surecart'));\n        this.invalid = !this.input.checkValidity();\n      } else {\n        this.input.setCustomValidity('');\n        this.invalid = !this.input.checkValidity();\n      }\n    }\n\n    return this.input.reportValidity();\n  }\n\n  @Watch('checked')\n  handleCheckedChange() {\n    this.input.setCustomValidity('');\n    if (this.type === 'radio' && this.checked) {\n      this.getSiblingChoices().map(choice => (choice.checked = false));\n    }\n    this.input.checked = this.checked;\n  }\n\n  handleBlur() {\n    this.hasFocus = false;\n    this.scBlur.emit();\n  }\n\n  handleFocus() {\n    this.hasFocus = true;\n    this.scFocus.emit();\n  }\n\n  /** Sets a custom validation message. If `message` is not empty, the field will be considered invalid. */\n  @Method()\n  async setCustomValidity(message: string) {\n    this.input.setCustomValidity(message);\n    this.invalid = !this.input.checkValidity();\n  }\n\n  getAllChoices() {\n    const choiceGroup = this.el.closest('sc-choices') || this.el.parentElement;\n    // Radios must be part of a radio group\n    if (!choiceGroup) {\n      return [];\n    }\n    return [...choiceGroup.querySelectorAll('sc-choice-container, sc-choice')] as Array<HTMLScChoiceElement | HTMLScChoiceContainerElement>;\n  }\n\n  getSiblingChoices() {\n    return this.getAllChoices().filter(choice => choice !== this.el) as HTMLScChoiceElement[];\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if ((event.target as HTMLDivElement).contentEditable === 'true') return;\n    // On arrow key press.\n    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n      const choices = this.getAllChoices().filter(choice => !choice.disabled);\n      const incr = ['ArrowUp', 'ArrowLeft'].includes(event.key) ? -1 : 1;\n      let index = choices.indexOf(this.el) + incr;\n      if (index < 0) index = choices.length - 1;\n      if (index > choices.length - 1) index = 0;\n\n      choices[index].triggerFocus();\n      choices[index].checked = true;\n\n      event.preventDefault();\n    }\n\n    // On space key press select the choice like handle mouse click.\n    if (event.key === ' ') {\n      event.preventDefault();\n      this.checked = true;\n      this.scChange.emit(this.input.checked);\n    }\n  }\n\n  componentDidLoad() {\n    this.formController = new FormSubmitController(this.el, {\n      value: (control: HTMLScChoiceElement) => (control.checked ? control.value : undefined),\n    }).addFormData();\n  }\n\n  disconnectedCallback() {\n    this.formController?.removeFormData();\n  }\n\n  @Listen('click')\n  handleClickEvent() {\n    if (this.type === 'checkbox') {\n      this.checked = !this.checked;\n      this.scChange.emit(this.input.checked);\n    } else if (!this.checked) {\n      this.checked = true;\n      this.scChange.emit(this.input.checked);\n    }\n  }\n\n  render() {\n    return (\n      <div\n        part=\"base\"\n        class={{\n          'choice': true,\n          'choice--checked': this.checked,\n          'choice--disabled': this.disabled,\n          'choice--focused': this.hasFocus,\n          'choice--is-rtl': isRtl(),\n          [`choice--size-${this.size}`]: true,\n        }}\n        role=\"radio\"\n        aria-checked={this.checked ? 'true' : 'false'}\n        aria-disabled={this.disabled ? 'true' : 'false'}\n        onKeyDown={e => this.handleKeyDown(e)}\n      >\n        <slot name=\"header\" />\n        <div class=\"choice__content\" part=\"content\">\n          <span\n            part=\"control\"\n            class={{\n              choice__control: true,\n              choice__checkbox: this.type === 'checkbox',\n              choice__radio: this.type === 'radio',\n            }}\n            hidden={!this.showControl}\n          >\n            <span part=\"checked-icon\" class=\"choice__icon\">\n              {this.type === 'checkbox' ? (\n                <svg viewBox=\"0 0 16 16\">\n                  <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" stroke-linecap=\"round\">\n                    <g stroke=\"currentColor\" stroke-width=\"2\">\n                      <g transform=\"translate(3.428571, 3.428571)\">\n                        <path d=\"M0,5.71428571 L3.42857143,9.14285714\"></path>\n                        <path d=\"M9.14285714,0 L3.42857143,9.14285714\"></path>\n                      </g>\n                    </g>\n                  </g>\n                </svg>\n              ) : (\n                <svg viewBox=\"0 0 16 16\">\n                  <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                    <g fill=\"currentColor\">\n                      <circle cx=\"8\" cy=\"8\" r=\"3.42857143\"></circle>\n                    </g>\n                  </g>\n                </svg>\n              )}\n            </span>\n            <input\n              id={this.inputId}\n              ref={el => (this.input = el as HTMLInputElement)}\n              type={this.type}\n              name={this.name}\n              value={this.value}\n              checked={this.checked}\n              disabled={this.disabled}\n              aria-checked={this.checked ? 'true' : 'false'}\n              aria-disabled={this.disabled ? 'true' : 'false'}\n              aria-labelledby={this.labelId}\n              tabindex=\"0\"\n              // required={this.required}\n              onBlur={() => this.handleBlur()}\n              onFocus={() => this.handleFocus()}\n              onChange={() => this.handleClickEvent()}\n              role={this.role}\n            />\n          </span>\n          <label part=\"label\" id={this.labelId} class=\"choice__label\">\n            <slot />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n"]}