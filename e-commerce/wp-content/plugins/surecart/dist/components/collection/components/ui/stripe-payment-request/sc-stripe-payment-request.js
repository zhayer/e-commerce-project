import{h}from"@stencil/core";import{loadStripe}from"@stripe/stripe-js/pure";import{__}from"@wordpress/i18n";import{state as checkoutState,onChange as onCheckoutChange}from"../../../store/checkout/index";import{createOrUpdateCheckout,finalizeCheckout}from"../../../services/session";import{createErrorNotice}from"../../../store/notices/mutations";import{openWormhole}from"stencil-wormhole";export class ScStripePaymentRequest{constructor(){this.stripeAccountId=void 0,this.publishableKey=void 0,this.country="US",this.prices=void 0,this.label="total",this.amount=0,this.theme="dark",this.error=void 0,this.debug=!1,this.loaded=!1,this.debugError=void 0}async componentWillLoad(){if(!(null==this?void 0:this.publishableKey)||!(null==this?void 0:this.stripeAccountId))return!0;try{this.stripe=await loadStripe(this.publishableKey,{stripeAccount:this.stripeAccountId}),this.elements=this.stripe.elements(),this.paymentRequest=this.stripe.paymentRequest({country:this.country,requestShipping:!0,requestPayerEmail:!0,shippingOptions:[{id:"free",label:"Free Shipping",detail:"No shipping required",amount:0}],...this.getRequestObject(null==checkoutState?void 0:checkoutState.checkout)})}catch(e){console.log((null==e?void 0:e.message)||__("Stripe could not be loaded","surecart"))}}handleOrderChange(){this.paymentRequest&&(this.pendingEvent||this.paymentRequest.update(this.getRequestObject(null==checkoutState?void 0:checkoutState.checkout)))}handleLoaded(){this.scPaymentRequestLoaded.emit(!0)}handleErrorChange(){this.pendingEvent&&this.pendingEvent.complete("error")}async handleShippingChange(e){var t,o,i,n,r;const{shippingAddress:s,updateWith:a}=e;try{const e=await createOrUpdateCheckout({id:null===(t=null==checkoutState?void 0:checkoutState.checkout)||void 0===t?void 0:t.id,data:{shipping_address:{...(null==s?void 0:s.name)?{name:null==s?void 0:s.name}:{},...(null===(o=null==s?void 0:s.addressLine)||void 0===o?void 0:o[0])?{line_1:null===(i=null==s?void 0:s.addressLine)||void 0===i?void 0:i[0]}:{},...(null===(n=null==s?void 0:s.addressLine)||void 0===n?void 0:n[1])?{line_2:null===(r=null==s?void 0:s.addressLine)||void 0===r?void 0:r[1]}:{},...(null==s?void 0:s.city)?{city:null==s?void 0:s.city}:{},...(null==s?void 0:s.country)?{country:null==s?void 0:s.country}:{},...(null==s?void 0:s.postalCode)?{postal_code:null==s?void 0:s.postalCode}:{},...(null==s?void 0:s.region)?{state:null==s?void 0:s.region}:{}}}});a({status:"success",total:{amount:(null==e?void 0:e.amount_due)||0,label:__("Total","surecart")}})}catch(e){e.updateWith({status:"invalid_shipping_address"})}}getName(e){var t,o,i,n,r;let s="";return s=Object.keys(this.prices||{}).filter((t=>this.prices[t].product===e.price.product.id)).length>1?`${null===(o=null===(t=null==e?void 0:e.price)||void 0===t?void 0:t.product)||void 0===o?void 0:o.name} â€“ ${null===(i=null==e?void 0:e.price)||void 0===i?void 0:i.name}`:null===(r=null===(n=null==e?void 0:e.price)||void 0===n?void 0:n.product)||void 0===r?void 0:r.name,s}getRequestObject(e){var t;const o=((null===(t=null==e?void 0:e.line_items)||void 0===t?void 0:t.data)||[]).map((e=>({label:this.getName(e),amount:null!==e.ad_hoc_amount?e.ad_hoc_amount:e.subtotal_amount})));return{currency:checkoutState.currencyCode,total:{amount:(null==e?void 0:e.amount_due)||0,label:__("Total","surecart")},displayItems:o}}componentDidLoad(){if(this.handleOrderChange(),this.removeCheckoutListener=onCheckoutChange("checkout",(()=>this.handleOrderChange())),!this.elements)return;const e=this.elements.create("paymentRequestButton",{paymentRequest:this.paymentRequest,style:{paymentRequestButton:{theme:this.theme}}});this.paymentRequest.on("paymentmethod",(e=>this.handlePaymentMethod(e))),this.paymentRequest.on("shippingaddresschange",(async e=>await this.handleShippingChange(e))),this.paymentRequest.canMakePayment().then((t=>{t?(e.mount(this.request),this.loaded=!0):"https:"!==location.protocol?(this.debug&&(this.debugError=__("You must serve this page over HTTPS to display express payment buttons.","surecart")),console.log("SSL needed to display payment buttons.")):(this.debug&&(this.debugError=__("You do not have any wallets set up in your browser.","surecart")),console.log("No wallets available."))})).catch((e=>{console.error(e)}))}async handlePaymentMethod(e){var t,o,i,n,r;const{billing_details:s}=null==e?void 0:e.paymentMethod,{shippingAddress:a}=e;try{this.scSetState.emit("FINALIZE"),await createOrUpdateCheckout({id:null===(t=null==checkoutState?void 0:checkoutState.checkout)||void 0===t?void 0:t.id,data:{email:null==s?void 0:s.email,name:null==s?void 0:s.name,shipping_address:{...(null==a?void 0:a.name)?{name:null==a?void 0:a.name}:{},...(null===(o=null==a?void 0:a.addressLine)||void 0===o?void 0:o[0])?{line_1:null===(i=null==a?void 0:a.addressLine)||void 0===i?void 0:i[0]}:{},...(null===(n=null==a?void 0:a.addressLine)||void 0===n?void 0:n[1])?{line_2:null===(r=null==a?void 0:a.addressLine)||void 0===r?void 0:r[1]}:{},...(null==a?void 0:a.city)?{city:null==a?void 0:a.city}:{},...(null==a?void 0:a.country)?{country:null==a?void 0:a.country}:{},...(null==a?void 0:a.postalCode)?{postal_code:null==a?void 0:a.postalCode}:{},...(null==a?void 0:a.region)?{state:null==a?void 0:a.region}:{}}}});const l=await finalizeCheckout({id:null==checkoutState?void 0:checkoutState.checkout.id,query:{form_id:checkoutState.formId},processor:{id:"stripe",manual:!1}});this.scSetState.emit("PAYING"),await this.confirmPayment(l,e),this.scSetState.emit("PAID"),this.scPaid.emit(),e.complete("success")}catch(t){console.error(t),this.scPayError.emit(t),createErrorNotice(t),e.complete("fail")}finally{this.confirming=!1}}async confirmPayment(e,t){var o,i,n,r,s,a,l,d,c,u,p,m,h,v,y,g,b,f;if("finalized"!==(null==e?void 0:e.status))return;if(!(null===(n=null===(i=null===(o=null==e?void 0:e.payment_intent)||void 0===o?void 0:o.processor_data)||void 0===i?void 0:i.stripe)||void 0===n?void 0:n.client_secret))return;if(!(null===(a=null===(s=null===(r=null==e?void 0:e.payment_intent)||void 0===r?void 0:r.processor_data)||void 0===s?void 0:s.stripe)||void 0===a?void 0:a.type))return;if(!(null===(l=null==e?void 0:e.payment_intent)||void 0===l?void 0:l.external_intent_id))return;if(this.confirming)return;let _;if(this.confirming=!0,_="setup"==(null===(u=null===(c=null===(d=null==e?void 0:e.payment_intent)||void 0===d?void 0:d.processor_data)||void 0===c?void 0:c.stripe)||void 0===u?void 0:u.type)?await this.confirmCardSetup(null===(m=null===(p=null==e?void 0:e.payment_intent)||void 0===p?void 0:p.processor_data)||void 0===m?void 0:m.stripe.client_secret,t):await this.confirmCardPayment(null===(v=null===(h=null==e?void 0:e.payment_intent)||void 0===h?void 0:h.processor_data)||void 0===v?void 0:v.stripe.client_secret,t),null==_?void 0:_.error)throw _.error;if("requires_action"===(null===(y=null==_?void 0:_.paymentIntent)||void 0===y?void 0:y.status)||"requires_source_action"===(null===(g=null==_?void 0:_.paymentIntent)||void 0===g?void 0:g.status)){const t=await this.stripe.confirmCardPayment(null===(f=null===(b=null==e?void 0:e.payment_intent)||void 0===b?void 0:b.processor_data)||void 0===f?void 0:f.stripe.client_secret);if(t.error)throw t.error;return t}return _}confirmCardPayment(e,t){return this.stripe.confirmCardPayment(e,{payment_method:t.paymentMethod.id},{handleActions:!1})}confirmCardSetup(e,t){return this.stripe.confirmCardSetup(e,{payment_method:t.paymentMethod.id},{handleActions:!1})}disconnectedCallback(){this.removeCheckoutListener()}render(){return h("div",{key:"0e3e8d97f5c0c298eed9df29bad862cc39d0e652",class:{request:!0,"request--loaded":this.loaded}},this.debug&&this.debugError&&h("div",{key:"5254e882fb3239550bac1aaa4ff641d480ba9a49"},h("slot",{key:"2931e7f52ed3137cae4451f82cadcec48e17617a",name:"debug-fallback"}),h("sc-alert",{key:"7565c851cf20f10244232d0f3fd4dab545c24136",type:"info",open:!0},h("span",{key:"4d439acbcbbee078e5b03d3cb1707abccaf8be4c",slot:"title"},__("Express Payment","surecart")),this.debugError)),h("div",{key:"d4b67ae676d5dc6c0e64b9015e90f266f4358cd4",class:"sc-payment-request-button",part:"button",ref:e=>this.request=e}))}static get is(){return"sc-stripe-payment-request"}static get originalStyleUrls(){return{$:["sc-stripe-payment-request.scss"]}}static get styleUrls(){return{$:["sc-stripe-payment-request.css"]}}static get properties(){return{stripeAccountId:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Your stripe connected account id."},attribute:"stripe-account-id",reflect:!1},publishableKey:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Stripe publishable key"},attribute:"publishable-key",reflect:!1},country:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Country"},attribute:"country",reflect:!1,defaultValue:"'US'"},prices:{type:"unknown",mutable:!1,complexType:{original:"Prices",resolved:"{ [id: string]: Price; }",references:{Prices:{location:"import",path:"../../../types",id:"src/types.ts::Prices"}}},required:!1,optional:!1,docs:{tags:[],text:"Prices"}},label:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Label"},attribute:"label",reflect:!1,defaultValue:"'total'"},amount:{type:"number",mutable:!1,complexType:{original:"number",resolved:"number",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Amount"},attribute:"amount",reflect:!1,defaultValue:"0"},theme:{type:"string",mutable:!1,complexType:{original:"string",resolved:"string",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Payment request theme"},attribute:"theme",reflect:!1,defaultValue:"'dark'"},error:{type:"unknown",mutable:!1,complexType:{original:"ResponseError | null",resolved:"ResponseError",references:{ResponseError:{location:"import",path:"../../../types",id:"src/types.ts::ResponseError"}}},required:!1,optional:!1,docs:{tags:[],text:""}},debug:{type:"boolean",mutable:!1,complexType:{original:"boolean",resolved:"boolean",references:{}},required:!1,optional:!1,docs:{tags:[],text:"Is this in debug mode."},attribute:"debug",reflect:!1,defaultValue:"false"}}}static get states(){return{loaded:{},debugError:{}}}static get events(){return[{method:"scFormSubmit",name:"scFormSubmit",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:""},complexType:{original:"any",resolved:"any",references:{}}},{method:"scPaid",name:"scPaid",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:""},complexType:{original:"void",resolved:"void",references:{}}},{method:"scPayError",name:"scPayError",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:""},complexType:{original:"any",resolved:"any",references:{}}},{method:"scSetState",name:"scSetState",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:""},complexType:{original:"string",resolved:"string",references:{}}},{method:"scPaymentRequestLoaded",name:"scPaymentRequestLoaded",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:""},complexType:{original:"boolean",resolved:"boolean",references:{}}},{method:"scUpdateOrderState",name:"scUpdateOrderState",bubbles:!0,cancelable:!0,composed:!0,docs:{tags:[],text:""},complexType:{original:"any",resolved:"any",references:{}}}]}static get elementRef(){return"el"}static get watchers(){return[{propName:"loaded",methodName:"handleLoaded"},{propName:"error",methodName:"handleErrorChange"}]}}openWormhole(ScStripePaymentRequest,["prices"],!1);