{"version":3,"file":"sc-customer-phone.spec.js","sourceRoot":"","sources":["../../../../../../src/components/controllers/checkout-form/customer-phone/test/sc-customer-phone.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,KAAK,IAAI,aAAa,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAGlE,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,UAAU,CAAC,GAAG,EAAE;QACd,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,yCAAyC;SAChD,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,QAAQ,EAAE,GAAG,EAAE,CAAC,4BAAuC;SACxD,CAAC,CAAC;QACH,aAAa,CAAC,QAAQ,GAAG,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,EAAc,EAAc,CAAC;QAChF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,QAAQ,EAAE,GAAG,EAAE,CAAC,4BAAuC;SACxD,CAAC,CAAC;QACH,aAAa,CAAC,QAAQ,GAAG,EAAE,KAAK,EAAE,KAAK,EAAc,CAAC;QACtD,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kFAAkF,EAAE,KAAK,IAAI,EAAE;QAChG,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,QAAQ,EAAE,GAAG,EAAE,CAAC,4BAAuC;SACxD,CAAC,CAAC;QACH,aAAa,CAAC,QAAQ,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAc,CAAC;QAClF,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { state as checkoutStore, dispose } from '@store/checkout';\n\nimport { Checkout, Customer } from '../../../../../types';\nimport { ScCustomerPhone } from '../sc-customer-phone';\n\ndescribe('sc-customer-phone', () => {\n  beforeEach(() => {\n    dispose();\n  });\n\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerPhone],\n      html: `<sc-customer-phone></sc-customer-phone>`,\n    });\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('Uses the customer phone number on load', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerPhone],\n      template: () => <sc-customer-phone></sc-customer-phone>,\n    });\n    checkoutStore.checkout = { customer: { phone: '999' } as Customer } as Checkout;\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('Uses the checkout phone number on load', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerPhone],\n      template: () => <sc-customer-phone></sc-customer-phone>,\n    });\n    checkoutStore.checkout = { phone: '111' } as Checkout;\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n\n  it('Uses checkout as a preference if both customer and checkout load a phone number.', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerPhone],\n      template: () => <sc-customer-phone></sc-customer-phone>,\n    });\n    checkoutStore.checkout = { phone: '111', customer: { phone: '999' } } as Checkout;\n    await page.waitForChanges();\n    expect(page.root).toMatchSnapshot();\n    page.rootInstance.disconnectedCallback();\n  });\n});\n"]}