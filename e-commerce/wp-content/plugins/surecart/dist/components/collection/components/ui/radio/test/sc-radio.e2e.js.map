{"version":3,"file":"sc-radio.e2e.js","sourceRoot":"","sources":["../../../../../src/components/ui/radio/test/sc-radio.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\ndescribe('sc-radio', () => {\n  let page, element, label, input;\n\n  const selector = 'sc-radio';\n\n  beforeEach(async () => {\n    page = await newE2EPage();\n    await page.setContent(`<${selector}></${selector}>`);\n    element = await page.find(`${selector}`);\n    label = await page.find(`${selector} >>> .radio`);\n    input = await page.find(`${selector} >>> input`);\n  });\n\n  it('renders', async () => {\n    const page = await newE2EPage();\n    await page.setContent('<sc-radio></sc-radio>');\n\n    const element = await page.find(selector);\n    expect(element).toHaveClass('hydrated');\n  });\n\n  it('Should be clickable', async () => {\n    const scBlur = await page.spyOnEvent('scBlur');\n    const scFocus = await page.spyOnEvent('scFocus');\n\n    expect(label).toHaveClass('radio');\n    expect(label).not.toHaveClasses(['radio--checked', 'radio--focused']);\n\n    await input.click();\n    await page.waitForChanges();\n    expect(label).toHaveClass('radio');\n    expect(label).toHaveClasses(['radio--checked', 'radio--focused']);\n    expect(scFocus).toHaveReceivedEvent();\n\n    await page.$eval(selector, e => e.blur());\n    await page.waitForChanges();\n    expect(label).not.toHaveClass('radio--focused');\n    expect(scBlur).toHaveReceivedEvent();\n  });\n\n  it('Can be disabled', async () => {\n    expect(input).not.toHaveAttribute('disabled');\n    element.setProperty('disabled', true);\n    await page.waitForChanges();\n    expect(label).toHaveClasses(['radio', 'radio--disabled']);\n    expect(input).toHaveAttribute('disabled');\n  });\n\n  // it('Can be required', async () => {\n  //   const page = await newE2EPage();\n  //   await page.setContent(`\n  //   <sc-form>\n  //     <sc-radio required name=\"test\"></sc-radio>\n  //   </sc-form>`);\n  //   const element = await page.find(`sc-radio`);\n  //   const form = await page.find(`sc-form`);\n  //   form.callMethod('submit');\n  //   await page.waitForChanges();\n  //   expect(element).toHaveAttribute('invalid');\n  // });\n});\n"]}