{"version":3,"file":"library.js","sourceRoot":"","sources":["../../../../src/components/ui/icon/library.ts"],"names":[],"mappings":"AAQA,IAAI,QAAQ,GAAkB,EAAE,CAAC;AACjC,IAAI,YAAY,GAAU,EAAE,CAAC;AAE7B,MAAM,UAAU,SAAS,CAAC,IAAS;IACjC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,IAAS;IACnC,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;AACxD,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,IAAa;IAC1C,OAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,IAAY,EAAE,OAAwE;IACxH,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAC5B,QAAQ,CAAC,IAAI,CAAC;QACZ,IAAI;QACJ,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,OAAO,EAAE,OAAO,CAAC,OAAO;KACzB,CAAC,CAAC;IACH,uBAAuB;IACvB,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;QACtB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,qBAAqB,CAAC,IAAY;IAChD,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;AACvD,CAAC;AAED,MAAM,CAAC,qBAAqB,GAAG,mBAAmB,CAAC","sourcesContent":["export type IconLibraryResolver = (name: string) => string;\nexport type IconLibraryMutator = (svg: SVGElement) => void;\nexport interface IconLibrary {\n  name: string;\n  resolver: IconLibraryResolver;\n  mutator?: IconLibraryMutator;\n}\n\nlet registry: IconLibrary[] = [];\nlet watchedIcons: any[] = [];\n\nexport function watchIcon(icon: any) {\n  watchedIcons.push(icon);\n}\n\nexport function unwatchIcon(icon: any) {\n  watchedIcons = watchedIcons.filter(el => el !== icon);\n}\n\nexport function getIconLibrary(name?: string) {\n  return registry.filter(lib => lib.name === name)[0];\n}\n\nexport function registerIconLibrary(name: string, options: { resolver: IconLibraryResolver; mutator?: IconLibraryMutator }) {\n  unregisterIconLibrary(name);\n  registry.push({\n    name,\n    resolver: options.resolver,\n    mutator: options.mutator,\n  });\n  // Redraw watched icons\n  watchedIcons.map(icon => {\n    if (icon.library === name) {\n      icon.redraw();\n    }\n  });\n}\n\nexport function unregisterIconLibrary(name: string) {\n  registry = registry.filter(lib => lib.name !== name);\n}\n\nwindow.ceRegisterIconLibrary = registerIconLibrary;\n"]}