{"version":3,"file":"sc-icon.js","sourceRoot":"","sources":["../../../../src/components/ui/icon/sc-icon.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Watch, h, Prop, State, Event, EventEmitter } from '@stencil/core';\nimport { getIconLibrary } from './library';\nimport { requestIcon } from './request';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * The icon's label used for accessibility.\n */\nconst LABEL_MAPPINGS = {\n  'chevron-down': __('Open', 'surecart'),\n  'chevron-up': __('Close', 'surecart'),\n  'chevron-right': __('Next', 'surecart'),\n  'chevron-left': __('Previous', 'surecart'),\n  'arrow-right': __('Next', 'surecart'),\n  'arrow-left': __('Previous', 'surecart'),\n  'arrow-down': __('Down', 'surecart'),\n  'arrow-up': __('Up', 'surecart'),\n  'alert-circle': __('Alert', 'surecart'),\n};\n\nconst parser = new DOMParser();\n\n@Component({\n  tag: 'sc-icon',\n  styleUrl: 'sc-icon.css',\n  assetsDirs: ['icon-assets'],\n  shadow: true,\n})\nexport class ScIcon {\n  @State() private svg = '';\n\n  /** The name of the icon to draw. */\n  @Prop({ reflect: true }) name: string;\n\n  /** An external URL of an SVG file. */\n  @Prop() src: string;\n\n  /** An alternative description to use for accessibility. If omitted, the name or src will be used to generate it. */\n  @Prop() label: string;\n\n  /** The name of a registered custom icon library. */\n  @Prop() library = 'default';\n\n  /** Emitted when the icon has loaded. */\n  @Event() scLoad: EventEmitter<void>;\n\n  /** @internal Fetches the icon and redraws it. Used to handle library registrations. */\n  redraw() {\n    this.setIcon();\n  }\n\n  componentWillLoad() {\n    this.setIcon();\n  }\n\n  getLabel() {\n    let label = '';\n    if (this.label) {\n      label = LABEL_MAPPINGS?.[this.label] || this.label;\n    } else if (this.name) {\n      label = (LABEL_MAPPINGS?.[this.name] || this.name).replace(/-/g, ' ');\n    } else if (this.src) {\n      label = this.src.replace(/.*\\//, '').replace(/-/g, ' ').replace(/\\.svg/i, '');\n    }\n\n    return label;\n  }\n\n  @Watch('name')\n  @Watch('src')\n  @Watch('library')\n  async setIcon() {\n    const library = getIconLibrary(this.library);\n    const url = this.getUrl();\n    if (url) {\n      try {\n        const file = await requestIcon(url)!;\n        if (url !== this.getUrl()) {\n          // If the url has changed while fetching the icon, ignore this request\n          return;\n        } else if (file.ok) {\n          const doc = parser.parseFromString(file.svg, 'text/html');\n          const svgEl = doc.body.querySelector('svg');\n\n          if (svgEl) {\n            if (library && library.mutator) {\n              library.mutator(svgEl);\n            }\n\n            this.svg = svgEl.outerHTML;\n            this.scLoad.emit();\n          } else {\n            this.svg = '';\n            console.error({ status: file?.status });\n          }\n        } else {\n          this.svg = '';\n          console.error({ status: file?.status });\n        }\n      } catch {\n        console.error({ status: -1 });\n      }\n    } else if (this.svg) {\n      // If we can't resolve a URL and an icon was previously set, remove it\n      this.svg = '';\n    }\n  }\n\n  private getUrl(): string {\n    const library = getIconLibrary(this.library);\n    if (this.name && library) {\n      return library.resolver(this.name);\n    } else {\n      return this.src;\n    }\n  }\n\n  render() {\n    return <div part=\"base\" class=\"icon\" role=\"img\" aria-label={this.getLabel()} innerHTML={this.svg}></div>;\n  }\n}\n"]}