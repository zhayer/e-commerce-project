{"version":3,"file":"sc-customer-details.spec.js","sourceRoot":"","sources":["../../../../../src/components/ui/customer-details/test/sc-customer-details.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAC;AAE3D,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,iBAAiB,CAAC;YAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,2BACE,QAAQ,EAAE;oBACR,EAAE,EAAE,MAAM;oBACV,KAAK,EAAE,eAAe;oBACtB,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,YAAY;oBACnB,eAAe,EAAE;wBACf,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE,QAAQ;wBAChB,MAAM,EAAE,QAAQ;wBAChB,IAAI,EAAE,WAAW;wBACjB,KAAK,EAAE,IAAI;wBACX,WAAW,EAAE,OAAO;wBACpB,OAAO,EAAE,IAAI;qBACd;iBACU;gBAEb,YAAM,IAAI,EAAC,SAAS;oBAClB,YAAM,IAAI,EAAC,SAAS,4BAA6B,CAC5C,CACa,CACvB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,iBAAiB,CAAC;YAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,2BAAqB,OAAO,EAAE,IAAI;gBAChC,YAAM,IAAI,EAAC,SAAS;oBAClB,YAAM,IAAI,EAAC,SAAS,mBAAoB,CACnC,CACa,CACvB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,iBAAiB,CAAC;YAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd,2BAAqB,KAAK,EAAE,aAAa;gBACvC,YAAM,IAAI,EAAC,SAAS;oBAClB,YAAM,IAAI,EAAC,SAAS,mBAAoB,CACnC,CACa,CACvB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,iBAAiB,CAAC;YAC/B,QAAQ,EAAE,GAAG,EAAE,CAAC,CACd;gBACE,YAAM,IAAI,EAAC,SAAS;oBAClB,YAAM,IAAI,EAAC,SAAS,mBAAoB,CACnC,CACa,CACvB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { h } from '@stencil/core';\nimport { newSpecPage } from '@stencil/core/testing';\nimport { Customer } from '../../../../types';\nimport { ScCustomerDetails } from '../sc-customer-details';\n\ndescribe('sc-customer-details', () => {\n  it('renders', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerDetails],\n      template: () => (\n        <sc-customer-details\n          customer={{\n            id: 'asdf',\n            email: 'test@test.com',\n            name: 'test',\n            phone: '1234567890',\n            billing_address: {\n              name: 'test',\n              line_1: 'line_1',\n              line_2: 'line_2',\n              city: 'city line',\n              state: 'wi',\n              postal_code: '53716',\n              country: 'us',\n            },\n          } as Customer}\n        >\n          <span slot=\"heading\">\n            <slot name=\"heading\">Showing Customer Info</slot>\n          </span>\n        </sc-customer-details>\n      ),\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n  it('has a loading state', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerDetails],\n      template: () => (\n        <sc-customer-details loading={true}>\n          <span slot=\"heading\">\n            <slot name=\"heading\">Test heading</slot>\n          </span>\n        </sc-customer-details>\n      ),\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('has an error state', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerDetails],\n      template: () => (\n        <sc-customer-details error={'testmessage'}>\n          <span slot=\"heading\">\n            <slot name=\"heading\">Test heading</slot>\n          </span>\n        </sc-customer-details>\n      ),\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('has an empty state', async () => {\n    const page = await newSpecPage({\n      components: [ScCustomerDetails],\n      template: () => (\n        <sc-customer-details>\n          <span slot=\"heading\">\n            <slot name=\"heading\">Test heading</slot>\n          </span>\n        </sc-customer-details>\n      ),\n    });\n    expect(page.root).toMatchSnapshot();\n  });\n});\n"]}